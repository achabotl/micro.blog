{
	"version": "https://jsonfeed.org/version/1",
	"title": "AlexChabot.net",
	"icon": "https://micro.blog/alexchabot/avatar.jpg",
	"home_page_url": "https://alexchabot.net/",
	"feed_url": "https://alexchabot.net/feed.json",
	"items": [
		
			{
				"id": "http://alexchabot.micro.blog/2021/06/09/i-had-a.html",
				
				"content_html": "<p>I had a dough ball remaining from last night so I made a carbonara pizza for breakfast. Bake crust with pecorino, bacon, mozzarella, lots of pepper for 4 minutes, then add the two eggs and broil for ~2 min.</p>\n\n<p><img src=\"uploads/2021/70c7fd72a7.jpg\" width=\"450\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "I had a dough ball remaining from last night so I made a carbonara pizza for breakfast. Bake crust with pecorino, bacon, mozzarella, lots of pepper for 4 minutes, then add the two eggs and broil for ~2 min.\n\n<img src=\"uploads/2021/70c7fd72a7.jpg\" width=\"450\" height=\"600\" alt=\"\" />\n",
				"date_published": "2021-06-09T08:45:47-05:00",
				"url": "https://alexchabot.net/2021/06/09/i-had-a.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/30/main-staircase-blanton.html",
				
				"content_html": "<p>Main staircase. Blanton museum, Austin, TX.</p>\n\n<p><img src=\"uploads/2021/ee452d4bfb.jpg\" width=\"600\" height=\"450\" alt=\"\" /></p>\n",
				"content_text": "Main staircase. Blanton museum, Austin, TX. \n\n<img src=\"uploads/2021/ee452d4bfb.jpg\" width=\"600\" height=\"450\" alt=\"\" />\n",
				"date_published": "2021-05-30T14:43:26-05:00",
				"url": "https://alexchabot.net/2021/05/30/main-staircase-blanton.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/26/from-cloudflare-humanity.html",
				
				"content_html": "<p>From Cloudflare: <a href=\"https://blog.cloudflare.com/introducing-cryptographic-attestation-of-personhood/\"><em>Humanity wastes about 500 years per day on CAPTCHAs. It’s time to end this madness</em></a>.</p>\n\n<p>Yes please. One more reason to get a YubiKey.</p>\n",
				"content_text": "From Cloudflare: [*Humanity wastes about 500 years per day on CAPTCHAs. It’s time to end this madness*](https://blog.cloudflare.com/introducing-cryptographic-attestation-of-personhood/). \n\nYes please. One more reason to get a YubiKey. \n",
				"date_published": "2021-05-26T20:57:30-05:00",
				"url": "https://alexchabot.net/2021/05/26/from-cloudflare-humanity.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/23/austin-tx.html",
				
				"content_html": "<p>Austin, TX</p>\n\n<p><img src=\"uploads/2021/5852993764.jpg\" width=\"450\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Austin, TX\n\n<img src=\"uploads/2021/5852993764.jpg\" width=\"450\" height=\"600\" alt=\"\" />\n",
				"date_published": "2021-05-23T17:07:13-05:00",
				"url": "https://alexchabot.net/2021/05/23/austin-tx.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/16/meatloaf-theory-of.html",
				"title": " The Meatloaf Theory of Jobs",
				"content_html": "<p>My partner and I love food. On a 0-to-10 scale, all foods have a chance of reaching the highest mark. Pizza? Definitely. Gelato? For sure. Duck? Of course. A simple loaf of bread? Hell yeah. But a meatloaf? Nope. Meatloaf maxes out at 6. Six decades of combined eating made this opinion into a fact.</p>\n\n<p>A few days ago, my partner was talking about her work and how she felt it was impossible for her to do a good job. She could work hard, over communicate, do her best work, and she&rsquo;d still have, at best, an impact of 6.</p>\n\n<p>And there was born the <em>meatloaf job</em>: a job where it’s impossible to do a great job.</p>\n\n<p>This reminded of <a href=\"https://www.currentaffairs.org/2020/09/what-david-graeber-noticed\">David Graeber&rsquo;s observation</a> in <em>Bullshit Jobs</em> that people want to be the <em>cause</em> of events. He called it &ldquo;the pleasure of being the cause.&rdquo; In bullshit jobs, either people&rsquo;s actions have no effect, or the effects are too far removed to be known.</p>\n",
				"content_text": "My partner and I love food. On a 0-to-10 scale, all foods have a chance of reaching the highest mark. Pizza? Definitely. Gelato? For sure. Duck? Of course. A simple loaf of bread? Hell yeah. But a meatloaf? Nope. Meatloaf maxes out at 6. Six decades of combined eating made this opinion into a fact.\n\nA few days ago, my partner was talking about her work and how she felt it was impossible for her to do a good job. She could work hard, over communicate, do her best work, and she'd still have, at best, an impact of 6.\n\nAnd there was born the *meatloaf job*: a job where it’s impossible to do a great job.\n\nThis reminded of [David Graeber's observation](https://www.currentaffairs.org/2020/09/what-david-graeber-noticed) in *Bullshit Jobs* that people want to be the _cause_ of events. He called it \"the pleasure of being the cause.\" In bullshit jobs, either people's actions have no effect, or the effects are too far removed to be known.\n\n",
				"date_published": "2021-05-16T15:12:00-05:00",
				"url": "https://alexchabot.net/2021/05/16/meatloaf-theory-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/13/currently-reading-the.html",
				
				"content_html": "<p>Currently reading: <a href=\"https://micro.blog/books/9781594634932\">The Art of Gathering: How We Meet and Why It Matters</a> by Priya Parker 📚</p>\n",
				"content_text": "Currently reading: [The Art of Gathering: How We Meet and Why It Matters](https://micro.blog/books/9781594634932) by Priya Parker 📚\n",
				"date_published": "2021-05-13T22:28:45-05:00",
				"url": "https://alexchabot.net/2021/05/13/currently-reading-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/09/what-an-odd.html",
				
				"content_html": "<p>What an odd Big Sur bug. VS Code&rsquo;s dock icon is minuscule and impossible to click on. It reminds me of when your Badland&rsquo;s <a href=\"https://youtu.be/7nkxyKo09Qs?t=79\">little flappy furry balls becomes tiny</a>.</p>\n\n<p><img src=\"uploads/2021/0bb371c228.jpg\" width=\"600\" height=\"323\" alt=\"\" /></p>\n",
				"content_text": "What an odd Big Sur bug. VS Code's dock icon is minuscule and impossible to click on. It reminds me of when your Badland's [little flappy furry balls becomes tiny](https://youtu.be/7nkxyKo09Qs?t=79).\n\n<img src=\"uploads/2021/0bb371c228.jpg\" width=\"600\" height=\"323\" alt=\"\" />\n",
				"date_published": "2021-05-09T21:40:34-05:00",
				"url": "https://alexchabot.net/2021/05/09/what-an-odd.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/05/01/deeply-learned-typography.html",
				"title": "Deeply Learned Typography",
				"content_html": "<p>Tom7 creates the <a href=\"http://tom7.org/lowercase/\">uppestcase and lowestcase letters</a> by training two deep learning models: one to create uppercase letters from lowercase ones, and the other to create lowercase letters from uppercase ones. Then he pushes things (beyond) their logical conclusions, such as creating lowercase versions of lowercase letters, and uppercase versions of uppercase letters. The results are fonts you can download and &ldquo;use.&rdquo; In the process, he builds a lot of really neat custom UIs to visualize what the models are doing. It&rsquo;s entertaining <em>and</em> interesting.</p>\n\n<p>Via <a href=\"http://www.macdrifter.com/2021/04/nice-things-volume-1.html\">Macdrifter</a>.</p>\n",
				"content_text": "Tom7 creates the [uppestcase and lowestcase letters](http://tom7.org/lowercase/) by training two deep learning models: one to create uppercase letters from lowercase ones, and the other to create lowercase letters from uppercase ones. Then he pushes things (beyond) their logical conclusions, such as creating lowercase versions of lowercase letters, and uppercase versions of uppercase letters. The results are fonts you can download and \"use.\" In the process, he builds a lot of really neat custom UIs to visualize what the models are doing. It's entertaining *and* interesting.\n\nVia [Macdrifter](http://www.macdrifter.com/2021/04/nice-things-volume-1.html).\n",
				"date_published": "2021-05-01T17:18:09-05:00",
				"url": "https://alexchabot.net/2021/05/01/deeply-learned-typography.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/04/11/two-loaves-of.html",
				
				"content_html": "<p>Two loaves of Ken Forkish&rsquo;s <em>Overnight Country Blonde</em>. After a 15h bulk rise at 23ºC, the dough had almost quadrupled in volume. Much more than usual. The final bread is a tad flat. I think it&rsquo;s because it ran out of energy, but maybe I could have made deeper cuts.</p>\n\n<p><img src=\"uploads/2021/33b4dbde83.jpg\" width=\"600\" height=\"450\" alt=\"\" /><img src=\"uploads/2021/a2c12ba490.jpg\" width=\"450\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Two loaves of Ken Forkish's _Overnight Country Blonde_. After a 15h bulk rise at 23ºC, the dough had almost quadrupled in volume. Much more than usual. The final bread is a tad flat. I think it's because it ran out of energy, but maybe I could have made deeper cuts.\n\n<img src=\"uploads/2021/33b4dbde83.jpg\" width=\"600\" height=\"450\" alt=\"\" /><img src=\"uploads/2021/a2c12ba490.jpg\" width=\"450\" height=\"600\" alt=\"\" />\n",
				"date_published": "2021-04-11T11:09:43-05:00",
				"url": "https://alexchabot.net/2021/04/11/two-loaves-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/04/04/publishing-datasette-to.html",
				"title": "Publishing datasette to Google Cloud Compute with GitHub Actions",
				"content_html": "<p>Simon Willison has a fascinating data-publishing and data-management project named <a href=\"https://datasette.io\">datasette</a>. A few months ago, he put together a plugin named <a href=\"https://github.com/simonw/datasette-ripgrep\">datasette-ripgrep</a> that uses <a href=\"https://github.com/BurntSushi/ripgrep\">ripgrep</a> (you use ripgrep, right?) to search folders of files and display the results using datasette&rsquo;s machinery.</p>\n\n<p>I thought of creating a datasette-ripgrep instance to search all the packages from the <a href=\"https://docs.enthought.com/ets/\">Enthought Tool Suite</a>. Using GitHub to search across this cohesive set of tools, and <em>only</em> this set of tools, doesn&rsquo;t really work.</p>\n\n<p>Setting datasette-ripgrep up locally turned out to be pretty easy. But publishing it to Google Cloud Compute (GCP) using GitHub Actions so I could automate the daily the content of the indexes repositories turned out to be a multi-month effort.</p>\n\n<p>I started working off the <a href=\"https://github.com/simonw/datasette-ripgrep/blob/main/.github/workflows/deploy_demo.yml\">demo deploy action</a> which took me most of the way there. But I kept running into GCP authentication issues. It complained that &ldquo;No credentials provided, skipping authentication&rdquo;. That is, until I realized 2 months later (of on-and-off attempts) that I was putting GitHub secrets in Settings &gt; Environment &gt; Secrets, and not in Settings &gt; Secrets. *slaps forehead* I&rsquo;m sure actions can see secrets in the Environment section <em>somehow</em>, but I don&rsquo;t know how. Another thing I learned is that when the GCP docs ask you to put the service account key in a GitHub secrets, you can just paste the whole JSON as-is.</p>\n\n<p>The next hurdle was that the <code>datasette publish cloudrun</code> command would fail with the error &ldquo;You do not appear to have access to project […]&ldquo;. I tried many things related to IAM, role, service accounts and the likes, but without success. The <em>ah ha!</em> moment came when I realized/remembered that <code>datasette.publish.cloudrun</code> actually talks to GCP using the <code>gcloud</code> command line tool. I identified that it calls the <a href=\"https://github.com/simonw/datasette/blob/0a7621f96f8ad14da17e7172e8a7bce24ef78966/datasette/publish/cloudrun.py#L152\"><em>builds</em></a> and <a href=\"https://github.com/simonw/datasette/blob/0a7621f96f8ad14da17e7172e8a7bce24ef78966/datasette/publish/cloudrun.py#L154\"><em>deploy</em></a> subcommands. Using that information I could make searches to figure out which permissions were required to execute those commands. The one I was missing was <em>Cloud Build Editor</em> (and maybe <em>Viewer</em>).</p>\n\n<p>In the end, the Service Account has the following roles (I&rsquo;m not 100% sure they&rsquo;re all necessary):</p>\n\n<ul>\n<li>Cloud Build Editor</li>\n<li>Compute Engine Service Agent</li>\n<li>Service Account User</li>\n<li>Cloud Run Admin</li>\n<li>Storage Admin</li>\n<li>Viewer</li>\n</ul>\n\n<p>After 100 failed deploys and much reading of mediocre Medium articles and of Google&rsquo;s (seemingly) incomplete and incorrect READMEs, the  101th deploy succeeded! You can now search the ETS repos at the very unglamorous URL of <a href=\"https://datasette-ripgrep-ets-alicuzwd4a-uc.a.run.app\">https://datasette-ripgrep-ets-alicuzwd4a-uc.a.run.app</a> and see the <a href=\"https://github.com/achabotl/datasette-ripgrep-ets\">source on GitHub</a>.</p>\n",
				"content_text": "Simon Willison has a fascinating data-publishing and data-management project named [datasette](https://datasette.io). A few months ago, he put together a plugin named [datasette-ripgrep](https://github.com/simonw/datasette-ripgrep) that uses [ripgrep](https://github.com/BurntSushi/ripgrep) (you use ripgrep, right?) to search folders of files and display the results using datasette's machinery.\n\n\nI thought of creating a datasette-ripgrep instance to search all the packages from the [Enthought Tool Suite](https://docs.enthought.com/ets/). Using GitHub to search across this cohesive set of tools, and _only_ this set of tools, doesn't really work.\n\nSetting datasette-ripgrep up locally turned out to be pretty easy. But publishing it to Google Cloud Compute (GCP) using GitHub Actions so I could automate the daily the content of the indexes repositories turned out to be a multi-month effort.\n\nI started working off the [demo deploy action](https://github.com/simonw/datasette-ripgrep/blob/main/.github/workflows/deploy_demo.yml) which took me most of the way there. But I kept running into GCP authentication issues. It complained that \"No credentials provided, skipping authentication\". That is, until I realized 2 months later (of on-and-off attempts) that I was putting GitHub secrets in Settings > Environment > Secrets, and not in Settings > Secrets. \\*slaps forehead\\* I'm sure actions can see secrets in the Environment section _somehow_, but I don't know how. Another thing I learned is that when the GCP docs ask you to put the service account key in a GitHub secrets, you can just paste the whole JSON as-is.\n\nThe next hurdle was that the `datasette publish cloudrun` command would fail with the error \"You do not appear to have access to project […]\". I tried many things related to IAM, role, service accounts and the likes, but without success. The _ah ha!_ moment came when I realized/remembered that `datasette.publish.cloudrun` actually talks to GCP using the `gcloud` command line tool. I identified that it calls the [_builds_](https://github.com/simonw/datasette/blob/0a7621f96f8ad14da17e7172e8a7bce24ef78966/datasette/publish/cloudrun.py#L152) and [_deploy_](https://github.com/simonw/datasette/blob/0a7621f96f8ad14da17e7172e8a7bce24ef78966/datasette/publish/cloudrun.py#L154) subcommands. Using that information I could make searches to figure out which permissions were required to execute those commands. The one I was missing was _Cloud Build Editor_ (and maybe _Viewer_).\n\n\nIn the end, the Service Account has the following roles (I'm not 100% sure they're all necessary):\n\n- Cloud Build Editor\n- Compute Engine Service Agent\n- Service Account User\n- Cloud Run Admin\n- Storage Admin\n- Viewer\n\nAfter 100 failed deploys and much reading of mediocre Medium articles and of Google's (seemingly) incomplete and incorrect READMEs, the  101th deploy succeeded! You can now search the ETS repos at the very unglamorous URL of [https://datasette-ripgrep-ets-alicuzwd4a-uc.a.run.app](https://datasette-ripgrep-ets-alicuzwd4a-uc.a.run.app) and see the [source on GitHub](https://github.com/achabotl/datasette-ripgrep-ets).\n",
				"date_published": "2021-04-04T21:42:26-05:00",
				"url": "https://alexchabot.net/2021/04/04/publishing-datasette-to.html",
				"tags": ["python"]
			},
			{
				"id": "http://alexchabot.micro.blog/2021/03/13/the-discussion-on.html",
				
				"content_html": "<p>The discussion on symbiotic relationships between apps on the <a href=\"https://coreint.org/2021/03/episode-455-i-dont-need-to-go-viral/\">latest Core Intuition</a> by <a href=\"https://micro.blog/manton\">@manton</a> and <a href=\"https://micro.blog/danielpunkass\">@danielpunkass</a> reminded me of Eastgate&rsquo;s <a href=\"http://www.eastgate.com/Tinderbox/Specials/SummerFest.html\">SummerFest</a>/<a href=\"https://www.eastgate.com/Tinderbox/Specials/WinterFest.html\">WinterFest</a> for &ldquo;artisanal&rdquo; research/thinking/writing apps. It&rsquo;s a great example of a collection of complementary apps.</p>\n",
				"content_text": "The discussion on symbiotic relationships between apps on the [latest Core Intuition](https://coreint.org/2021/03/episode-455-i-dont-need-to-go-viral/) by [@manton](https://micro.blog/manton) and [@danielpunkass](https://micro.blog/danielpunkass) reminded me of Eastgate's [SummerFest](http://www.eastgate.com/Tinderbox/Specials/SummerFest.html)/[WinterFest](https://www.eastgate.com/Tinderbox/Specials/WinterFest.html) for \"artisanal\" research/thinking/writing apps. It's a great example of a collection of complementary apps.\n",
				"date_published": "2021-03-13T15:32:05-05:00",
				"url": "https://alexchabot.net/2021/03/13/the-discussion-on.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/03/11/what-is-the.html",
				
				"content_html": "<p>What is the maximum one can be doing with someone else and still be <em>hanging out</em>?</p>\n",
				"content_text": "What is the maximum one can be doing with someone else and still be _hanging out_?\n",
				"date_published": "2021-03-11T21:40:45-05:00",
				"url": "https://alexchabot.net/2021/03/11/what-is-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/03/06/austin-kleon-talks.html",
				
				"content_html": "<p>Austin Kleon talks about the 13-month <a href=\"https://austinkleon.com/2021/02/05/the-trouble-with-months/\">International Fixed Calendar</a>. It reminds of the <a href=\"https://en.wikipedia.org/wiki/ISO_week_date\">ISO week numbers</a> that the Danes love so much. It always weirded me out when they ask something like &ldquo;Are you free week 14?&rdquo; But thinking back, they might have been onto something.</p>\n",
				"content_text": "Austin Kleon talks about the 13-month [International Fixed Calendar](https://austinkleon.com/2021/02/05/the-trouble-with-months/). It reminds of the [ISO week numbers](https://en.wikipedia.org/wiki/ISO_week_date) that the Danes love so much. It always weirded me out when they ask something like \"Are you free week 14?\" But thinking back, they might have been onto something.\n",
				"date_published": "2021-03-06T10:14:27-05:00",
				"url": "https://alexchabot.net/2021/03/06/austin-kleon-talks.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/02/21/despite-all-the.html",
				
				"content_html": "<p>Despite all the damage done by the ice in Texas, it still created quite a bit of beauty (or at least novelty).</p>\n\n<p><img src=\"uploads/2021/d611a590e1.jpg\" width=\"450\" height=\"600\" alt=\"\" /><img src=\"uploads/2021/9316b1f96a.jpg\" width=\"450\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Despite all the damage done by the ice in Texas, it still created quite a bit of beauty (or at least novelty).   \n\n<img src=\"uploads/2021/d611a590e1.jpg\" width=\"450\" height=\"600\" alt=\"\" /><img src=\"uploads/2021/9316b1f96a.jpg\" width=\"450\" height=\"600\" alt=\"\" />\n",
				"date_published": "2021-02-21T09:36:43-05:00",
				"url": "https://alexchabot.net/2021/02/21/despite-all-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/02/21/icicle-agave-during.html",
				
				"content_html": "<p>Icicle agave during the Texas winter storm.</p>\n\n<p><img src=\"uploads/2021/9dba3ac57f.jpg\" width=\"450\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Icicle agave during the Texas winter storm. \n\n<img src=\"uploads/2021/9dba3ac57f.jpg\" width=\"450\" height=\"600\" alt=\"\" />\n",
				"date_published": "2021-02-21T09:33:16-05:00",
				"url": "https://alexchabot.net/2021/02/21/icicle-agave-during.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/01/23/lessons-learned-during.html",
				"title": "Lessons Learned During My PhD",
				"content_html": "\n\n<blockquote>\n<p>I shared these notes with my friends and colleagues at the Technical University of Denmark (DTU) when I finished my PhD in December 2015.</p>\n</blockquote>\n\n<p>Here are things that I either learned during my PhD, or that helped me get through it. I in no way have all the answers, but there are a few things that helped me that I think would be helpful to other people as well.</p>\n\n<p>I split the content in six different sections, meta-things, writing, reading, speaking, programming, and mind and body. I included links to articles, books, and tools that are related to each section.</p>\n\n<h2 id=\"meta\">Meta</h2>\n\n<p>The main recommendation here is to have a system to deal with all the things you have to do and the things you want to do. I personally used the GTD method, which stands for <a href=\"https://gettingthingsdone.com\">Getting Things Done</a>. I highly recommend getting the latest book. You can find it <a href=\"http://www.bookfinder.com/search/?author=&amp;title=&amp;lang=en&amp;isbn=0143126563&amp;destination=dk&amp;currency=DKK&amp;mode=basic&amp;st=sr&amp;ac=qr\">delivered at your desk for 100 kr</a>. The main ideas of the system are: everything goes in an inbox (physical and/or on a computer). Periodically, process the inbox and decide if you&rsquo;ll do the thing, trash it, or store it in your reference system. &ldquo;Tasks&rdquo; that require more than two action are considered projects, and a project consist of a list of <em>physical</em>, <em>actionable</em> actions. The other important thing about GTD is that it includes a weekly review of all the projects in your system, as well as your calendar and other active things in your life. I learned about this almost 10 years ago now<sup class=\"footnote-ref\" id=\"fnref:gtd\"><a href=\"#fn:gtd\">1</a></sup> and I would go as far as to say that it changed my life.</p>\n\n<p>There are many applications designed to implement the GTD system. On the Mac, there&rsquo;s <a href=\"https://www.omnigroup.com/omnifocus/\">OmniFocus</a>, <a href=\"https://culturedcode.com/things/\">Things</a>, and <a href=\"http://www.taskpaper.com\">TaskPaper</a> (<em>really worth checking</em>). <a href=\"https://todoist.com\">Todoist</a> is multi-platform.</p>\n\n<p>I also recommend reading <a href=\"https://gettingresults.com\"><em>Getting Results the Agile Way</em>, by J.D. Meier</a>, which proposes a different take on selecting <em>what</em> you should work in. The basic idea is to pick 3 things to focus on every day, three per week, three per month, and three per year. The things you do every day should go towards you weekly goals, etc. The <a href=\"https://gettingresults.com\">Asian Efficiency</a> blog (weird name, I know), is a good noise-free resource about that kind of material (check the &ldquo;specialty topics&rdquo; in the sidebar).</p>\n\n<h3 id=\"make-checklists\">Make checklists</h3>\n\n<p>Keep checklists for processes and things you do often but with lots of time in between, like how to log on to remote computers, adding printers to your computer, etc. It will save you a lot of time in the long run. Similarly, save info about things you never remember how to do, such as the behavior of the FFT implementation in MATLAB, check if a file exists using bash, undo a Git merge, etc.</p>\n\n<p>I keep all my notes in individual text files. I have about 800. They live on Dropbox, which means I can edit them and view them anywhere. On my Mac I use <a href=\"http://brettterpstra.com/projects/nvalt/\">nvAlt</a> to search and write them. <a href=\"http://www.resoph.com/ResophNotes/Welcome.html\">ResophNotes</a> does the same thing on Windows. <a href=\"https://evernote.com\">Evernote</a> is a web-based service that can be used for a similar purpose. I write all my notes in <a href=\"http://daringfireball.net/markdown\">Markdown</a> (I even wrote a paper in it!), which also allows me to easily export my notes or view in <a href=\"http://marked2app.com\">nice previews</a>. Both nvAlt and ResophNotes are &ldquo;markdown-aware&rdquo;.</p>\n\n<h3 id=\"keep-a-logbook\">Keep a Logbook</h3>\n\n<p>I kept a daily or weekly text file in which I wrote almost everything I did within the day. I would write down either thing that I wanted to do, notes to clarify my thoughts, or the things I just did. For example, I would save the <a href=\"http://www.git-scm.com\">Git</a> commit for a particular simulation and my comments about the results. It helped me when I wanted to look back at why I did certain things or to find the source of certain ideas.</p>\n\n<h3 id=\"sometimes-paper-is-the-best-tool-for-the-job\">Sometimes Paper Is the Best Tool for the Job</h3>\n\n<p>I tried doing everything on the computer, but sometime paper really is the best tool for the job. The final product doesn&rsquo;t have to be on paper but paper is often really helpful to develop ideas because of the freedom you have to place things <em>wherever</em> you want!</p>\n\n<h3 id=\"if-it-s-broken-fix-it\">If It&rsquo;s Broken, Fix It</h3>\n\n<p>If you see something that is broken, or that could be better, just fix it. Especially if other people have noticed the same problem. I mean to fix both immaterial things (BitBucket, for example) but also physical things. Did you know you can report broken things to <a href=\"https://www.dtu.dk/english/about/organization/supportfunctions/cas\">CAS</a> and they&rsquo;ll come repair it within a day or so? Blocked toilet, dead light, water leek? Report it at <a href=\"http://fejlmeld.cas.dtu.dk\">https://fejlmeld.cas.dtu.dk</a> or use their <a href=\"https://itunes.apple.com/dk/app/dtu-fejlrapportering/id768685289?mt=8\">iOS</a> or Android apps (can&rsquo;t find the link, but look for DTU Fejlrapportering).</p>\n\n<h2 id=\"writing\">Writing</h2>\n\n<h3 id=\"build-an-outline-when-writing-a-paper\">Build an Outline When Writing a Paper</h3>\n\n<p>At first, I did not have a method for writing but then I read <a href=\"https://web.archive.org/web/20150406072222/http://timotheepoisot.fr/2014/09/25/writing-paper/\">this article</a> by Timothée Poisot, which really helped me. The main idea is to start building an outline as soon as you&rsquo;re working on the new project. As you read papers, or have ideas, you add quotes, citations, and snippets to your outline. You can start writing sentences and whole paragraphs whenever you want. The big advantage is that all the relevant things you find for a given project are all together; no need to go hunting for where you read that <em>thing</em>, six months ago.</p>\n\n<p>On the Mac, I use <a href=\"https://web.archive.org/web/20161023123451/http://www.topoftree.jp/en/\">Tree</a><sup class=\"footnote-ref\" id=\"fnref:tree\"><a href=\"#fn:tree\">2</a></sup>, which I <em>love</em>. <a href=\"https://www.omnigroup.com/omnioutliner/\">OmniOutliner</a> is the most famous alternative, but it much more expensive. I don&rsquo;t know about Windows or Linux. I know Microsoft Word has an outlining mode that could work. You could also outline in a normal Word document, or a text file, but good outliners give you many shortcuts to move things around and to insert new ideas. The new <a href=\"http://www.manuscriptsapp.com\">Manuscripts</a> application for Mac looks <em>amazing</em>. <a href=\"http://www.literatureandlatte.com/scrivener.php\">Scrivener</a> is an amazing writing tool for both Mac and Windows. It is particularly good for large projects.</p>\n\n<p>Other good resources include:</p>\n\n<ul>\n<li><a href=\"http://www.organizingcreativity.com/2013/02/scientific-academic-paper-writing-template/\">Scientific / Academic Paper Writing Template | ORGANIZING CREATIVITY</a></li>\n<li><a href=\"https://blogs.cul.columbia.edu/butler/2014/06/05/daniel-wessel-using-content-outlines-and-circus-ponies-notebooks-for-writing-articles-and-theses/\">Daniel Wessel: Using Content Outlines and Circus Ponies Notebooks for Writing Articles and Theses | Butler Library Blog</a> explains in even more details the idea of building an outline when writing.</li>\n</ul>\n\n<h3 id=\"get-good-early-and-write-more\">Get Good Early and Write More</h3>\n\n<p>Do not despair, you will get better at writing! I don&rsquo;t really know how to do it, but the earlier you get good the easier your life will be. :-) A possible way to get better is certainly to write more. Maybe having a <a href=\"http://academicwritingclub.com\">writing club</a> would help. There are many good books about writing. I read <a href=\"https://www.apa.org/pubs/books/4441010\"><em>How to write a lot</em></a>, by Paul J. Silvia and really liked it.</p>\n\n<p>Here are a few articles about writing:</p>\n\n<ul>\n<li><a href=\"https://twitter.com/ThSanger/status/664839630567686144\">10 writing tips and the psychology behind them.</a></li>\n<li><a href=\"https://hbr.org/2010/10/how-to-be-a-speed-writer\">How to Be a Speed Writer</a> supports the outlining idea.</li>\n<li><a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/user/mleone/web/how-to.html\">Advice on Research and Writing</a> is a collection of other articles on research, writing, speaking, etc.</li>\n</ul>\n\n<h2 id=\"reading\">Reading</h2>\n\n<h3 id=\"make-time\">Make Time</h3>\n\n<p>You never find time, you&rsquo;ll have to make some. Personally I found out that I could read an article on the bus and while walking. When I needed to read many article, I would take the bus mornings and nights for a week. That way I could read about 10 articles in week. It helped me to keep a stack of papers that I wanted to read on my desk; I could grab one whenever had a moment.</p>\n\n<h3 id=\"read-with-a-goal\">Read With a Goal</h3>\n\n<p>I find that it&rsquo;s much easier to understand and remember papers if I read with a purpose, as a way of answering a question. Also, if that question is related to what you&rsquo;re currently working on, you can add your discoveries in the outline of your paper.</p>\n\n<h3 id=\"give-faces-to-names\">Give Faces to Names</h3>\n\n<p>I found that being able to associate a face with an author name helped me remember who was talking about what and made it easier to remember different papers and ideas.</p>\n\n<h3 id=\"take-notes-and-highlights\">Take Notes and Highlights</h3>\n\n<p>That one is pretty obvious, but writing down notes and ideas while reading papers really helps. It helps while reading the paper but also later when coming back to it. I designed a highlight system for myself based on the idea of <a href=\"http://jones.kaist.edu/notebook/2012/09/an-academic-notetaking-workflow.html\">Walton Jones</a>. I used specific colors to code different things, for example paper-specific results were yellow, new references in green, and paper summaries in red. This way could look back at a paper and have a general overview of what was important without reading the whole paper again.</p>\n\n<p>On the Mac, <a href=\"http://skim-app.sourceforge.net\">Skim</a> allows you to export notes including their color. It also works well with DEVONthink (see below).</p>\n\n<h3 id=\"have-a-good-personal-search-engine\">Have a Good &ldquo;Personal Search Engine&rdquo;</h3>\n\n<p>I recommend having a good search system for your notes and papers. On the Mac I use an application called <a href=\"https://www.devontechnologies.com/apps/devonthink\">DEVONthink</a> which can show you documents related to the one you&rsquo;re currently reading. It also does non-exact searches, e.g., it can search for the <em>meaning</em> of your query, not just the exact words you typed. It really is magic. I am not aware of anything exactly the same on Windows or Linux, but <a href=\"https://www.thebrain.com\">The Brain</a> (Windows) and <a href=\"https://www.lesbonscomptes.com/recoll/\">Recoll</a> might be good places to start.</p>\n\n<h3 id=\"give-your-articles-unique-identifiers\">Give Your Articles Unique Identifiers</h3>\n\n<p>I gave all my articles the same file name structure, <code>authorYEARfirstword</code>, e.g. <code>chabotleclerc2014predicting</code>. I picked this format because it has no space and it&rsquo;s also very short and compact. It&rsquo;s essentially a <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\">unique identifier</a>. I used the identifier everywhere: in handwritten notes, computer notes, outlines, marginalia. This way, I knew exactly which paper I was talking about.</p>\n\n<h3 id=\"remembering-things\">Remembering Things</h3>\n\n<p>I tried to use <a href=\"http://www.gwern.net/Spaced%20repetition\">spaced repetition</a> (also see <a href=\"https://sivers.org/srs\">this link</a>) for a while but it didn&rsquo;t stick for really long. <a href=\"http://ankisrs.net\">Anki</a> is probably the best tool for the job.</p>\n\n<h2 id=\"things-that-didn-t-work\">Things That Didn&rsquo;t Work</h2>\n\n<h3 id=\"having-a-wiki\">Having a Wiki</h3>\n\n<p>Based on the idea of this crazy guy, <a href=\"https://web.archive.org/web/20160703184126/http://www.reganmian.net/wiki/researchr:start\">Stian Håklev</a>, I tried setting up a wiki using either <a href=\"https://www.dokuwiki.org/dokuwiki#\">DokuWiki</a> or <a href=\"http://tiddlywiki.com\">TiddlyWiki</a>. I managed to keep it updated for about a month and then abandoned it. It required a lot of maintenance and a lot of diligence to keep up with the linking between subjects.</p>\n\n<p>2021 update: These days, I would strongly recommend looking into  <a href=\"https://zettelkasten.de/posts/overview/\">Zettelkasten</a> as an alternative.</p>\n\n<h3 id=\"a-single-giant-outline-mind-map-or-concept-map\">A Single Giant Outline, Mind Map or Concept Map</h3>\n\n<p>I tried building a gigantic outline or <a href=\"https://en.wikipedia.org/wiki/Mind_map\">mind map</a> or <a href=\"https://en.wikipedia.org/wiki/Concept_map\">concept map</a> of all the things I learned, but it became unmanageable. I still find these methods really useful when fleshing out an idea for a project or paper, but they were not really good tools for me to manage such a large amount of knowledge. If you want to try these tools, on the Mac I recommend <a href=\"http://mindnode.com\">MindNode</a> (simple and cheap), and <a href=\"http://toketaware.com/ithoughts-osx/\">iThoughtsX</a> (more powerful, more expensive). <a href=\"http://mindmeister.com\">MindMeister</a> is online and very popular. <a href=\"https://docear.org\">Docear</a> mixes an outliner, a reference manager (JabRef) and an outliner. It&rsquo;s power and complex. If you want to know everything about mind mapping and the best tools, check out <a href=\"http://brettterpstra.com/topic/mindmapping/\">Brett Terpstra&rsquo;s blog</a>.</p>\n\n<p>For concept maps, I <em>love</em> <a href=\"http://www.literatureandlatte.com/scapple.php\">Scapple</a>, which works on Mac and Windows. <a href=\"http://cmap.ihmc.us\">Cmap</a> is also multi-platform, but heavier. I use them when I want to find structure in a mess of ideas floating in my head.</p>\n\n<h2 id=\"speaking\">Speaking</h2>\n\n<p>This series of articles by David L Stern really influenced me: <a href=\"http://www.howtogiveatalk.com\"><em>How to Give a Talk</em></a>. He suggests 5 rules<sup class=\"footnote-ref\" id=\"fnref:talk\"><a href=\"#fn:talk\">3</a></sup>:</p>\n\n<ol>\n<li>Don&rsquo;t put words on slides</li>\n<li>Use black slides</li>\n<li>Show your data</li>\n<li>Don&rsquo;t tell jokes</li>\n<li>Don&rsquo;t take a data dump on your audience</li>\n<li>Practice, practice, practice.</li>\n</ol>\n\n<p>Of course, some rules are meant to be broken, but it&rsquo;s worth a read. I also liked the book <a href=\"http://www.amazon.com/Presentation-Zen-Simple-Delivery-Edition/dp/0321811984\"><em>Presentation Zen: Simple Ideas on Presentation Design and Delivery</em></a> by Garr Reynolds.</p>\n\n<h2 id=\"programming\">Programming</h2>\n\n<h3 id=\"when-modeling-optimize-for-a-metric\">When Modeling, Optimize for a Metric</h3>\n\n<p>When working on a new model, first decide what you&rsquo;re optimizing for, is it a correlation, the mean square error, or some other metric. Make sure this metric is computed automatically with each simulation, so you have immediate feedback about how good your model is. Just eyeballing the results is a really bad idea.</p>\n\n<h3 id=\"d-r-y\">D.R.Y.</h3>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">Don&rsquo;t. Repeat. Yourself.</a> When you see that you have the same code in multiple places, it&rsquo;s a good hint that you need to refactor it into a function, and to call that function. Also, if your function is hundred lines long it&rsquo;s probably a sign that he should be chopped into smaller functions that have clear names.</p>\n\n<p>If you&rsquo;re interested in becoming a better programmer, I recommend <a href=\"https://pragprog.com/titles/tpp20/the-pragmatic-programmer-20th-anniversary-edition/\"><em>The Pragmatic Programmer</em></a>, by Andrew Hunt and David Thomas, <a href=\"https://www.goodreads.com/book/show/3735293-clean-code\"><em>Clean Code</em></a> and <a href=\"https://www.goodreads.com/book/show/4845.Code_Complete\"><em>Code Complete</em></a>.</p>\n\n<h3 id=\"write-tests\">Write Tests</h3>\n\n<p>You should write tests for your functions to make sure that they are actually doing what you think they are doing. They help make sure that code is correct, they help detecting regressions (when you break things that used to work), they act as a specification, design and documentation, and they make refactoring easier.</p>\n\n<p>I cannot tell you how many times I found small and huge bugs because of the tests I wrote. All decent programming languages, <a href=\"https://www.mathworks.com/help/matlab/matlab-unit-test-framework.html\">including Matlab</a> include a framework to automatically run tests. The words you want to look for are &ldquo;unit testing&rdquo;. You should run tests every time you make changes. You can even set Git to <a href=\"http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/\">run the tests before every commit</a>. This way you can make sure you never commit broken code.</p>\n\n<p>The advantage of working with a free language (Python!) and in the open is that you can use &ldquo;continuous integration&rdquo; system to have them run tests every time you push new changes to GitHub (or BitBucket). <a href=\"https://travis-ci.org/\">Travis CI</a> is one of those services.</p>\n\n<p>These articles or sites are worth reading for info about testing.</p>\n\n<ul>\n<li><a href=\"http://www.tdda.info\">Test-Driven Data Analysis</a>. Start <a href=\"http://www.tdda.info/test-driven-development-a-review.html\">here</a>.</li>\n<li><a href=\"http://www.walkingrandomly.com/?p=5825\">Is your research software correct</a>, by Mike Croucher, a Research Software Engineer at The University of Sheffield.</li>\n</ul>\n\n<h3 id=\"don-t-overuse-code-comments\">Don&rsquo;t Overuse Code Comments</h3>\n\n<p>Code comments are useful to explain <em>why</em> you&rsquo;re doing something, but they should not explain every single line of code. Otherwise one day you will change the comment or the code and then <a href=\"https://twitter.com/nzkoz/status/538892801941848064\">one of them will be lying</a> and you won&rsquo;t be able to know <a href=\"https://pbs.twimg.com/media/CPiszshU8AAyK4Q.jpg\">which one</a>.</p>\n\n<p>Instead, use explicit names for variables and functions. Write function help files. Write documentation. Write README files. And break up long and complicated lines of code into smaller ones where you can name concepts and variables.</p>\n\n<h3 id=\"use-version-control\">Use Version Control</h3>\n\n<p>Version control is a communication tool and a collaboration tool. It&rsquo;s invaluable even if you don&rsquo;t work with someone else, I can assure you that your future self will be really happy to know what your past self was thinking when he/she wrote that code/text. I heard your future self can get really upset. :-)</p>\n\n<h3 id=\"track-where-stuff-comes-from\">Track Where Stuff Comes From</h3>\n\n<p>Track where experiment results and figures come from. You can do it by hand, by keeping your log book and tracking output folders and inputs commits, but you can also use automated solutions. I used <a href=\"http://neuralensemble.org/sumatra/\">Sumatra</a>, which is written in Python but can be used with Matlab. Every time you run a simulation it saves to a database: the experimental parameter used, the input files, and the command line outputs. It also allows you to comment and tag results. You can look back and see where things are from, what worked and what didn&rsquo;t, and rerun experiments with exactly the same parameters. A provenance-tracking tool like Sumatra paired with version control is a good step towards making reproducible research. <a href=\"https://github.com/recipy/recipy/\">Recipy</a> is a new Python-only solution that looks interesting.</p>\n\n<h3 id=\"follow-best-practices\">Follow &ldquo;Best practices&rdquo;</h3>\n\n<p>Some very bright people have written &ldquo;Best practices&rdquo; for scientific computing. It&rsquo;s worth reading the two or three articles below and applying their recommendations. I also recommend looking at this <a href=\"https://github.com/uwescience/shablona\"><code>shablona</code></a> project, which proposes a standard folder structure for a given project, I found it to work really well. It&rsquo;s written with Python in mind but it could easily be adapted for Matlab.</p>\n\n<ul>\n<li><a href=\"http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745\"><em>Best Practices for Scientific Computing</em></a></li>\n<li><a href=\"http://swcarpentry.github.io/good-enough-practices-in-scientific-computing/\"><em>Good Enough Practices for Scientific Computing</em></a> is a follow-up article.</li>\n</ul>\n\n<p>Learn about <a href=\"https://en.wikipedia.org/wiki/Literate_programming\">literate programming</a>, a useful concept where the code and the text (of, e.g., an article) live <em>together</em>. This can be done in Matlab using the <a href=\"http://se.mathworks.com/help/matlab/ref/publish.html\"><code>publish</code></a> command. In Python, the <a href=\"http://jupyter.org\">Jupyter notebook</a> is <em>the</em> way to go. Actually, you can use the Jupyter notebook <a href=\"https://github.com/calysto/matlab_kernel\"><em>with</em> Matlab</a>.</p>\n\n<p>If you want to do more than just read things, you should try to organizing a <a href=\"http://software-carpentry.org\">Software Carpentry</a> workshop. It&rsquo;s pretty much free and would probably help <em>a lot of people</em>.</p>\n\n<h3 id=\"your-computer-should-work-for-you\">Your Computer Should Work for You</h3>\n\n<p>If you find out you&rsquo;re doing the same thing over and over again <a href=\"https://xkcd.com/1205/\">it might be worth automating it</a>. On the Mac, <a href=\"http://keyboardmaestro.com\">Keyboard Maestro</a> can do magic (like activating menu items for you, clicking places, moving windows, etc.) On Windows, <a href=\"https://www.autohotkey.com\">AutoHotkey</a> can do similar things, and on Linux, I found <a href=\"https://github.com/autokey/autokey\">AutoKey</a> to be the best.</p>\n\n<p>Use a shortcut expander application. For example, I never type &ldquo;intelligibility&rdquo;, I just type <code>inty</code> and it expands to the full word. Same thing with my name, my bank account, my phone number, etc. On the Mac, Keyboard Maestro and <a href=\"https://smilesoftware.com/TextExpander/index.html\">TextExpander</a> are the best. On Windows, <a href=\"http://www.phraseexpress.com\">PhraseExpress</a> is compatible with TextExpander; you can sync your snippets via Dropbox. On Linux, Autokey can also do snippet expansions.</p>\n\n<h2 id=\"mind-and-body\">Mind and body</h2>\n\n<h3 id=\"take-care-of-your-body\">Take Care of Your Body</h3>\n\n<p>Seriously, take care of your body. If you start having wrist, forearm, or shoulder pain, don&rsquo;t just live with it. Seek help and get proper a keyboard, mouse and chair. Learn some basic ergonomic practices about keyboard, mouse and screen placement. See the articles below for more info and recommendations.</p>\n\n<p>If you are in pain, really look for help: find a massage therapist, a doctor, and stretch often. Here are a few good ressources.</p>\n\n<ul>\n<li><a href=\"http://ergo.human.cornell.edu/cumousetips.html\">10 Tips for Using a Computer Mouse</a></li>\n<li>A long list of ergonomic keyboards, by <a href=\"http://xahlee.info/kbd/ergonomic_keyboards.htm\">xahlee</a>.</li>\n<li>The <a href=\"http://www.microsoft.com/accessories/en-us/products/keyboards/sculpt-ergonomic-desktop/l5v-00001\">Microsoft Sculpt</a> is probably the most affordable ergonomic keyboard.</li>\n<li><a href=\"http://www.kinesis-ergo.com\">Kinesis</a> makes amazing products. I have an Advantage keyboard and an Evoluent Vertical Mouse. The Advantage is amazing.</li>\n<li>If you have any wrist pains, I (Alex) highly recommend the book <a href=\"http://www.bookfinder.com/search/?author=&amp;title=&amp;lang=en&amp;isbn=0965510999&amp;new_used=*&amp;destination=dk&amp;currency=DKK&amp;mode=basic&amp;st=sr&amp;ac=qr\"><em>It&rsquo;s Not Carpal Tunnel Syndrome!: RSI Theory and Therapy for Computer Professional</em></a> by Suparna Damany and Jack Belli. The exercises in it really helped me.</li>\n</ul>\n\n<h3 id=\"spend-money-where-your-time-is\">Spend Money Where Your Time Is</h3>\n\n<p>It&rsquo;s worth paying for things that make your life better, more comfortable, and easier, especially if you use those things all day long. Buy a nice keyboard, you probably write eight or nine hours a day. Buy nice headphones, good software, a mattress, a bike, etc.</p>\n\n<h3 id=\"ask-for-help\">Ask for Help</h3>\n\n<p>Ask for help when you&rsquo;re stuck. Ask for a meeting if you need one. Everyone is super busy, but everyone is super generous. People rarely say no, but they might say &ldquo;later&rdquo;. In a perfect world, everyone would be proactive, everyone would have their slot in the calendar, but sometimes the world is not perfect. Also talking to people if often <em>waaaay</em> faster than googling for an answer.</p>\n\n<h2 id=\"make-every-day-a-non-zero-day\">Make <em>Every Day</em> a Non-Zero Day</h2>\n\n<p>This idea is not from me, it is <a href=\"https://www.reddit.com/r/getdisciplined/comments/1q96b5/i_just_dont_care_about_myself/cdah4af\">from ryans01 on Reddit</a> (and it&rsquo;s also in the PhD Starter Kit, below). His idea is to make sure that every day you do at least one small thing towards your goal. No day should be completely wasted, even if the thing you do is really small. Keeping a log or journal helps realizing all the things you&rsquo;ve done in a day and keeping your mood up.</p>\n\n<h2 id=\"other-guides-like-this-one\">Other Guides Like This One</h2>\n\n<p>Other people have written really good and more in-depth guides than this. The <a href=\"https://raoofphysics.github.io/phd-starter-kit/\"><em>PhD Starter Kit</em></a> is simply amazing. Philip Guo&rsquo;s <a href=\"http://www.pgbovine.net/advice-for-first-year-PhD-students.htm\"><em>Advice for first year PhD students</em></a> is a must-read/must-watch (as well as <em>many</em> of his other articles. He also wrote: <a href=\"http://bcmi.sjtu.edu.cn/home/niuli/resource/pguo-PhD-grind.pdf\"><em>The Ph.D. Grind</em></a>, a 115-page e-book, is the first known detailed account of an entire Ph.D. experience.&rdquo; That guy is amazing.</p>\n<div class=\"footnotes\">\n\n<hr />\n\n<ol>\n<li id=\"fn:gtd\">Make it 13 years in 2021.\n <a class=\"footnote-return\" href=\"#fnref:gtd\"><sup>[return]</sup></a></li>\n<li id=\"fn:tree\">Not available anymore, 2021-01-23.\n <a class=\"footnote-return\" href=\"#fnref:tree\"><sup>[return]</sup></a></li>\n<li id=\"fn:talk\">Yes, that 6 rules. And it 2021, it grew to 8 rules. ¯\\<em>(ツ)</em>/¯\n <a class=\"footnote-return\" href=\"#fnref:talk\"><sup>[return]</sup></a></li>\n</ol>\n</div>\n",
				"content_text": "> I shared these notes with my friends and colleagues at the Technical University of Denmark (DTU) when I finished my PhD in December 2015.\n\nHere are things that I either learned during my PhD, or that helped me get through it. I in no way have all the answers, but there are a few things that helped me that I think would be helpful to other people as well.\n\nI split the content in six different sections, meta-things, writing, reading, speaking, programming, and mind and body. I included links to articles, books, and tools that are related to each section.\n\n## Meta\n\nThe main recommendation here is to have a system to deal with all the things you have to do and the things you want to do. I personally used the GTD method, which stands for [Getting Things Done](https://gettingthingsdone.com). I highly recommend getting the latest book. You can find it [delivered at your desk for 100 kr](http://www.bookfinder.com/search/?author=&title=&lang=en&isbn=0143126563&destination=dk&currency=DKK&mode=basic&st=sr&ac=qr). The main ideas of the system are: everything goes in an inbox (physical and/or on a computer). Periodically, process the inbox and decide if you'll do the thing, trash it, or store it in your reference system. \"Tasks\" that require more than two action are considered projects, and a project consist of a list of *physical*, *actionable* actions. The other important thing about GTD is that it includes a weekly review of all the projects in your system, as well as your calendar and other active things in your life. I learned about this almost 10 years ago now[^gtd] and I would go as far as to say that it changed my life. \n\n[^gtd]: Make it 13 years in 2021.\n\nThere are many applications designed to implement the GTD system. On the Mac, there's [OmniFocus](https://www.omnigroup.com/omnifocus/), [Things](https://culturedcode.com/things/), and [TaskPaper](http://www.taskpaper.com) (*really worth checking*). [Todoist](https://todoist.com) is multi-platform.\n\nI also recommend reading [*Getting Results the Agile Way*, by J.D. Meier](https://gettingresults.com), which proposes a different take on selecting *what* you should work in. The basic idea is to pick 3 things to focus on every day, three per week, three per month, and three per year. The things you do every day should go towards you weekly goals, etc. The [Asian Efficiency](https://gettingresults.com) blog (weird name, I know), is a good noise-free resource about that kind of material (check the \"specialty topics\" in the sidebar).\n\n### Make checklists\n\nKeep checklists for processes and things you do often but with lots of time in between, like how to log on to remote computers, adding printers to your computer, etc. It will save you a lot of time in the long run. Similarly, save info about things you never remember how to do, such as the behavior of the FFT implementation in MATLAB, check if a file exists using bash, undo a Git merge, etc.\n\nI keep all my notes in individual text files. I have about 800. They live on Dropbox, which means I can edit them and view them anywhere. On my Mac I use [nvAlt](http://brettterpstra.com/projects/nvalt/) to search and write them. [ResophNotes](http://www.resoph.com/ResophNotes/Welcome.html) does the same thing on Windows. [Evernote](https://evernote.com) is a web-based service that can be used for a similar purpose. I write all my notes in [Markdown](http://daringfireball.net/markdown) (I even wrote a paper in it!), which also allows me to easily export my notes or view in [nice previews](http://marked2app.com). Both nvAlt and ResophNotes are \"markdown-aware\".\n\n\n### Keep a Logbook\n\nI kept a daily or weekly text file in which I wrote almost everything I did within the day. I would write down either thing that I wanted to do, notes to clarify my thoughts, or the things I just did. For example, I would save the [Git](http://www.git-scm.com) commit for a particular simulation and my comments about the results. It helped me when I wanted to look back at why I did certain things or to find the source of certain ideas.\n\n### Sometimes Paper Is the Best Tool for the Job\n\nI tried doing everything on the computer, but sometime paper really is the best tool for the job. The final product doesn't have to be on paper but paper is often really helpful to develop ideas because of the freedom you have to place things *wherever* you want!\n\n\n### If It's Broken, Fix It\n\nIf you see something that is broken, or that could be better, just fix it. Especially if other people have noticed the same problem. I mean to fix both immaterial things (BitBucket, for example) but also physical things. Did you know you can report broken things to [CAS](https://www.dtu.dk/english/about/organization/supportfunctions/cas) and they'll come repair it within a day or so? Blocked toilet, dead light, water leek? Report it at [https://fejlmeld.cas.dtu.dk](http://fejlmeld.cas.dtu.dk) or use their [iOS](https://itunes.apple.com/dk/app/dtu-fejlrapportering/id768685289?mt=8) or Android apps (can't find the link, but look for DTU Fejlrapportering).\n\n## Writing\n\n### Build an Outline When Writing a Paper\n\nAt first, I did not have a method for writing but then I read [this article](https://web.archive.org/web/20150406072222/http://timotheepoisot.fr/2014/09/25/writing-paper/) by Timothée Poisot, which really helped me. The main idea is to start building an outline as soon as you're working on the new project. As you read papers, or have ideas, you add quotes, citations, and snippets to your outline. You can start writing sentences and whole paragraphs whenever you want. The big advantage is that all the relevant things you find for a given project are all together; no need to go hunting for where you read that *thing*, six months ago. \n\nOn the Mac, I use [Tree](https://web.archive.org/web/20161023123451/http://www.topoftree.jp/en/)[^tree], which I *love*. [OmniOutliner](https://www.omnigroup.com/omnioutliner/) is the most famous alternative, but it much more expensive. I don't know about Windows or Linux. I know Microsoft Word has an outlining mode that could work. You could also outline in a normal Word document, or a text file, but good outliners give you many shortcuts to move things around and to insert new ideas. The new [Manuscripts](http://www.manuscriptsapp.com) application for Mac looks *amazing*. [Scrivener](http://www.literatureandlatte.com/scrivener.php) is an amazing writing tool for both Mac and Windows. It is particularly good for large projects.\n\nOther good resources include:\n\n- [Scientific / Academic Paper Writing Template | ORGANIZING CREATIVITY](http://www.organizingcreativity.com/2013/02/scientific-academic-paper-writing-template/)\n- [Daniel Wessel: Using Content Outlines and Circus Ponies Notebooks for Writing Articles and Theses | Butler Library Blog](https://blogs.cul.columbia.edu/butler/2014/06/05/daniel-wessel-using-content-outlines-and-circus-ponies-notebooks-for-writing-articles-and-theses/) explains in even more details the idea of building an outline when writing.\n\n[^tree]: Not available anymore, 2021-01-23.\n\n\n### Get Good Early and Write More\n\nDo not despair, you will get better at writing! I don't really know how to do it, but the earlier you get good the easier your life will be. :-) A possible way to get better is certainly to write more. Maybe having a [writing club](http://academicwritingclub.com) would help. There are many good books about writing. I read [*How to write a lot*](https://www.apa.org/pubs/books/4441010), by Paul J. Silvia and really liked it.\n\nHere are a few articles about writing:\n\n- [10 writing tips and the psychology behind them.](https://twitter.com/ThSanger/status/664839630567686144)\n- [How to Be a Speed Writer](https://hbr.org/2010/10/how-to-be-a-speed-writer) supports the outlining idea.\n- [Advice on Research and Writing](http://www.cs.cmu.edu/afs/cs.cmu.edu/user/mleone/web/how-to.html) is a collection of other articles on research, writing, speaking, etc.\n\n\n## Reading\n\n### Make Time\n\nYou never find time, you'll have to make some. Personally I found out that I could read an article on the bus and while walking. When I needed to read many article, I would take the bus mornings and nights for a week. That way I could read about 10 articles in week. It helped me to keep a stack of papers that I wanted to read on my desk; I could grab one whenever had a moment.\n\n### Read With a Goal\n\nI find that it's much easier to understand and remember papers if I read with a purpose, as a way of answering a question. Also, if that question is related to what you're currently working on, you can add your discoveries in the outline of your paper.\n\n### Give Faces to Names\n\nI found that being able to associate a face with an author name helped me remember who was talking about what and made it easier to remember different papers and ideas.\n\n### Take Notes and Highlights\n\nThat one is pretty obvious, but writing down notes and ideas while reading papers really helps. It helps while reading the paper but also later when coming back to it. I designed a highlight system for myself based on the idea of [Walton Jones](http://jones.kaist.edu/notebook/2012/09/an-academic-notetaking-workflow.html). I used specific colors to code different things, for example paper-specific results were yellow, new references in green, and paper summaries in red. This way could look back at a paper and have a general overview of what was important without reading the whole paper again. \n\nOn the Mac, [Skim](http://skim-app.sourceforge.net) allows you to export notes including their color. It also works well with DEVONthink (see below).\n\n### Have a Good \"Personal Search Engine\"\n\nI recommend having a good search system for your notes and papers. On the Mac I use an application called [DEVONthink](https://www.devontechnologies.com/apps/devonthink) which can show you documents related to the one you're currently reading. It also does non-exact searches, e.g., it can search for the *meaning* of your query, not just the exact words you typed. It really is magic. I am not aware of anything exactly the same on Windows or Linux, but [The Brain](https://www.thebrain.com) (Windows) and [Recoll](https://www.lesbonscomptes.com/recoll/) might be good places to start.\n\n### Give Your Articles Unique Identifiers\n\nI gave all my articles the same file name structure, `authorYEARfirstword`, e.g. `chabotleclerc2014predicting`. I picked this format because it has no space and it's also very short and compact. It's essentially a [unique identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier). I used the identifier everywhere: in handwritten notes, computer notes, outlines, marginalia. This way, I knew exactly which paper I was talking about.\n\n### Remembering Things\n\nI tried to use [spaced repetition](http://www.gwern.net/Spaced%20repetition) (also see [this link](https://sivers.org/srs)) for a while but it didn't stick for really long. [Anki](http://ankisrs.net) is probably the best tool for the job.\n\n## Things That Didn't Work\n\n### Having a Wiki\n\nBased on the idea of this crazy guy, [Stian Håklev](https://web.archive.org/web/20160703184126/http://www.reganmian.net/wiki/researchr:start), I tried setting up a wiki using either [DokuWiki](https://www.dokuwiki.org/dokuwiki#) or [TiddlyWiki](http://tiddlywiki.com). I managed to keep it updated for about a month and then abandoned it. It required a lot of maintenance and a lot of diligence to keep up with the linking between subjects. \n\n2021 update: These days, I would strongly recommend looking into  [Zettelkasten](https://zettelkasten.de/posts/overview/) as an alternative.\n\n### A Single Giant Outline, Mind Map or Concept Map\n\nI tried building a gigantic outline or [mind map](https://en.wikipedia.org/wiki/Mind_map) or [concept map](https://en.wikipedia.org/wiki/Concept_map) of all the things I learned, but it became unmanageable. I still find these methods really useful when fleshing out an idea for a project or paper, but they were not really good tools for me to manage such a large amount of knowledge. If you want to try these tools, on the Mac I recommend [MindNode](http://mindnode.com) (simple and cheap), and [iThoughtsX](http://toketaware.com/ithoughts-osx/) (more powerful, more expensive). [MindMeister](http://mindmeister.com) is online and very popular. [Docear](https://docear.org) mixes an outliner, a reference manager (JabRef) and an outliner. It's power and complex. If you want to know everything about mind mapping and the best tools, check out [Brett Terpstra's blog](http://brettterpstra.com/topic/mindmapping/).\n\nFor concept maps, I *love* [Scapple](http://www.literatureandlatte.com/scapple.php), which works on Mac and Windows. [Cmap](http://cmap.ihmc.us) is also multi-platform, but heavier. I use them when I want to find structure in a mess of ideas floating in my head.\n\n \n## Speaking\n \nThis series of articles by David L Stern really influenced me: [*How to Give a Talk*](http://www.howtogiveatalk.com). He suggests 5 rules[^talk]: \n\n1. Don't put words on slides\n2. Use black slides\n3. Show your data\n4. Don't tell jokes\n5. Don't take a data dump on your audience\n6. Practice, practice, practice.\n\nOf course, some rules are meant to be broken, but it's worth a read. I also liked the book [_Presentation Zen: Simple Ideas on Presentation Design and Delivery_](http://www.amazon.com/Presentation-Zen-Simple-Delivery-Edition/dp/0321811984) by Garr Reynolds.\n\n[^talk]: Yes, that 6 rules. And it 2021, it grew to 8 rules. ¯\\\\_(ツ)_/¯\n \n## Programming\n\n### When Modeling, Optimize for a Metric\n\nWhen working on a new model, first decide what you're optimizing for, is it a correlation, the mean square error, or some other metric. Make sure this metric is computed automatically with each simulation, so you have immediate feedback about how good your model is. Just eyeballing the results is a really bad idea.\n\n### D.R.Y.\n\n[Don't. Repeat. Yourself.](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) When you see that you have the same code in multiple places, it's a good hint that you need to refactor it into a function, and to call that function. Also, if your function is hundred lines long it's probably a sign that he should be chopped into smaller functions that have clear names.\n\nIf you're interested in becoming a better programmer, I recommend [_The Pragmatic Programmer_](https://pragprog.com/titles/tpp20/the-pragmatic-programmer-20th-anniversary-edition/), by Andrew Hunt and David Thomas, [_Clean Code_](https://www.goodreads.com/book/show/3735293-clean-code) and [_Code Complete_](https://www.goodreads.com/book/show/4845.Code_Complete).\n\n### Write Tests\n\nYou should write tests for your functions to make sure that they are actually doing what you think they are doing. They help make sure that code is correct, they help detecting regressions (when you break things that used to work), they act as a specification, design and documentation, and they make refactoring easier.\n\nI cannot tell you how many times I found small and huge bugs because of the tests I wrote. All decent programming languages, [including Matlab](https://www.mathworks.com/help/matlab/matlab-unit-test-framework.html) include a framework to automatically run tests. The words you want to look for are \"unit testing\". You should run tests every time you make changes. You can even set Git to [run the tests before every commit](http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/). This way you can make sure you never commit broken code. \n\nThe advantage of working with a free language (Python!) and in the open is that you can use \"continuous integration\" system to have them run tests every time you push new changes to GitHub (or BitBucket). [Travis CI](https://travis-ci.org/) is one of those services. \n\nThese articles or sites are worth reading for info about testing.\n\n- [Test-Driven Data Analysis](http://www.tdda.info). Start [here](http://www.tdda.info/test-driven-development-a-review.html).\n- [Is your research software correct](http://www.walkingrandomly.com/?p=5825), by Mike Croucher, a Research Software Engineer at The University of Sheffield.\n\n### Don't Overuse Code Comments\n\nCode comments are useful to explain *why* you're doing something, but they should not explain every single line of code. Otherwise one day you will change the comment or the code and then [one of them will be lying](https://twitter.com/nzkoz/status/538892801941848064) and you won't be able to know [which one](https://pbs.twimg.com/media/CPiszshU8AAyK4Q.jpg).\n\nInstead, use explicit names for variables and functions. Write function help files. Write documentation. Write README files. And break up long and complicated lines of code into smaller ones where you can name concepts and variables.\n\n### Use Version Control\n\nVersion control is a communication tool and a collaboration tool. It's invaluable even if you don't work with someone else, I can assure you that your future self will be really happy to know what your past self was thinking when he/she wrote that code/text. I heard your future self can get really upset. :-)\n\n### Track Where Stuff Comes From\n\nTrack where experiment results and figures come from. You can do it by hand, by keeping your log book and tracking output folders and inputs commits, but you can also use automated solutions. I used [Sumatra](http://neuralensemble.org/sumatra/), which is written in Python but can be used with Matlab. Every time you run a simulation it saves to a database: the experimental parameter used, the input files, and the command line outputs. It also allows you to comment and tag results. You can look back and see where things are from, what worked and what didn't, and rerun experiments with exactly the same parameters. A provenance-tracking tool like Sumatra paired with version control is a good step towards making reproducible research. [Recipy](https://github.com/recipy/recipy/) is a new Python-only solution that looks interesting.\n\n### Follow \"Best practices\"\n\nSome very bright people have written \"Best practices\" for scientific computing. It's worth reading the two or three articles below and applying their recommendations. I also recommend looking at this [`shablona`](https://github.com/uwescience/shablona) project, which proposes a standard folder structure for a given project, I found it to work really well. It's written with Python in mind but it could easily be adapted for Matlab.\n\n- [_Best Practices for Scientific Computing_](http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745)\n- [_Good Enough Practices for Scientific Computing_](http://swcarpentry.github.io/good-enough-practices-in-scientific-computing/) is a follow-up article.\n\nLearn about [literate programming](https://en.wikipedia.org/wiki/Literate_programming), a useful concept where the code and the text (of, e.g., an article) live *together*. This can be done in Matlab using the [`publish`](http://se.mathworks.com/help/matlab/ref/publish.html) command. In Python, the [Jupyter notebook](http://jupyter.org) is *the* way to go. Actually, you can use the Jupyter notebook [*with* Matlab](https://github.com/calysto/matlab_kernel).\n\nIf you want to do more than just read things, you should try to organizing a [Software Carpentry](http://software-carpentry.org) workshop. It's pretty much free and would probably help *a lot of people*.\n\n### Your Computer Should Work for You\n\nIf you find out you're doing the same thing over and over again [it might be worth automating it](https://xkcd.com/1205/). On the Mac, [Keyboard Maestro](http://keyboardmaestro.com) can do magic (like activating menu items for you, clicking places, moving windows, etc.) On Windows, [AutoHotkey](https://www.autohotkey.com) can do similar things, and on Linux, I found [AutoKey](https://github.com/autokey/autokey) to be the best. \n\nUse a shortcut expander application. For example, I never type \"intelligibility\", I just type `inty` and it expands to the full word. Same thing with my name, my bank account, my phone number, etc. On the Mac, Keyboard Maestro and [TextExpander](https://smilesoftware.com/TextExpander/index.html) are the best. On Windows, [PhraseExpress](http://www.phraseexpress.com) is compatible with TextExpander; you can sync your snippets via Dropbox. On Linux, Autokey can also do snippet expansions.\n\n\n## Mind and body\n\n### Take Care of Your Body\n\nSeriously, take care of your body. If you start having wrist, forearm, or shoulder pain, don't just live with it. Seek help and get proper a keyboard, mouse and chair. Learn some basic ergonomic practices about keyboard, mouse and screen placement. See the articles below for more info and recommendations. \n\nIf you are in pain, really look for help: find a massage therapist, a doctor, and stretch often. Here are a few good ressources.\n\n- [10 Tips for Using a Computer Mouse](http://ergo.human.cornell.edu/cumousetips.html)\n- A long list of ergonomic keyboards, by [xahlee](http://xahlee.info/kbd/ergonomic_keyboards.htm).\n- The [Microsoft Sculpt](http://www.microsoft.com/accessories/en-us/products/keyboards/sculpt-ergonomic-desktop/l5v-00001) is probably the most affordable ergonomic keyboard. \n- [Kinesis](http://www.kinesis-ergo.com) makes amazing products. I have an Advantage keyboard and an Evoluent Vertical Mouse. The Advantage is amazing.\n- If you have any wrist pains, I (Alex) highly recommend the book [_It's Not Carpal Tunnel Syndrome!: RSI Theory and Therapy for Computer Professional_](http://www.bookfinder.com/search/?author=&title=&lang=en&isbn=0965510999&new_used=*&destination=dk&currency=DKK&mode=basic&st=sr&ac=qr) by Suparna Damany and Jack Belli. The exercises in it really helped me.\n\n### Spend Money Where Your Time Is\n\nIt's worth paying for things that make your life better, more comfortable, and easier, especially if you use those things all day long. Buy a nice keyboard, you probably write eight or nine hours a day. Buy nice headphones, good software, a mattress, a bike, etc.\n\n### Ask for Help\n\nAsk for help when you're stuck. Ask for a meeting if you need one. Everyone is super busy, but everyone is super generous. People rarely say no, but they might say \"later\". In a perfect world, everyone would be proactive, everyone would have their slot in the calendar, but sometimes the world is not perfect. Also talking to people if often *waaaay* faster than googling for an answer.\n\n## Make *Every Day* a Non-Zero Day\n\nThis idea is not from me, it is [from ryans01 on Reddit](https://www.reddit.com/r/getdisciplined/comments/1q96b5/i_just_dont_care_about_myself/cdah4af) (and it's also in the PhD Starter Kit, below). His idea is to make sure that every day you do at least one small thing towards your goal. No day should be completely wasted, even if the thing you do is really small. Keeping a log or journal helps realizing all the things you've done in a day and keeping your mood up.\n\n## Other Guides Like This One\n\nOther people have written really good and more in-depth guides than this. The [_PhD Starter Kit_](https://raoofphysics.github.io/phd-starter-kit/) is simply amazing. Philip Guo's [_Advice for first year PhD students_](http://www.pgbovine.net/advice-for-first-year-PhD-students.htm) is a must-read/must-watch (as well as *many* of his other articles. He also wrote: [_The Ph.D. Grind_](http://bcmi.sjtu.edu.cn/home/niuli/resource/pguo-PhD-grind.pdf), a 115-page e-book, is the first known detailed account of an entire Ph.D. experience.\" That guy is amazing.\n",
				"date_published": "2021-01-23T16:06:55-05:00",
				"url": "https://alexchabot.net/2021/01/23/lessons-learned-during.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/01/12/they-could-have.html",
				
				"content_html": "<p>They could have used additional time during the bulk fermentation to account for the cold, but it’s still a good rise.</p>\n\n<p><img src=\"uploads/2021/318ec403bc.jpg\" width=\"600\" height=\"450\" alt=\"\" /></p>\n",
				"content_text": "They could have used additional time during the bulk fermentation to account for the cold, but it’s still a good rise. \n\n<img src=\"uploads/2021/318ec403bc.jpg\" width=\"600\" height=\"450\" alt=\"\" />\n",
				"date_published": "2021-01-12T12:02:31-05:00",
				"url": "https://alexchabot.net/2021/01/12/they-could-have.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/01/11/great-resident-advisor.html",
				
				"content_html": "<p>Great Resident Advisor podcast episode. Noisy, glitchy, grimy, dark.\n<a href=\"https://ra.co/podcast/760\">RA.760 Hyph11E ⟋ RA Podcast</a>🎵</p>\n",
				"content_text": "Great Resident Advisor podcast episode. Noisy, glitchy, grimy, dark.\n[RA.760 Hyph11E ⟋ RA Podcast](https://ra.co/podcast/760)🎵\n",
				"date_published": "2021-01-11T23:35:30-05:00",
				"url": "https://alexchabot.net/2021/01/11/great-resident-advisor.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2021/01/10/installing-air-filters.html",
				
				"content_html": "<p><a href=\"https://www.vox.com/2020/1/8/21051869/indoor-air-pollution-student-achievement\">Installing air filters in classrooms has surprisingly large educational benefits</a></p>\n\n<blockquote>\n<p>[…] Math scores went up by 0.20 standard deviations and English scores by 0.18 standard deviations […] this is comparable in scale to [&hellip;] the potential benefits of smaller class sizes.”</p>\n</blockquote>\n",
				"content_text": "[Installing air filters in classrooms has surprisingly large educational benefits](https://www.vox.com/2020/1/8/21051869/indoor-air-pollution-student-achievement)\n\n> […] Math scores went up by 0.20 standard deviations and English scores by 0.18 standard deviations […] this is comparable in scale to [...] the potential benefits of smaller class sizes.”\n",
				"date_published": "2021-01-10T20:17:07-05:00",
				"url": "https://alexchabot.net/2021/01/10/installing-air-filters.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/12/31/ferdca-home-alone.html",
				
				"content_html": "<p><a href=\"https://ferd.ca/home-alone-a-post-incident-review.html\">ferd.ca – <em>Home Alone: A Post Incident Review</em></a></p>\n\n<p>It’s so many things in one: a movie review, an intro to “post incident reviews,” a lesson into which kinds of precautions work and which don’t, and a reminder that things can still go wrong even when well prepped.</p>\n",
				"content_text": "[ferd.ca – *Home Alone: A Post Incident Review*](https://ferd.ca/home-alone-a-post-incident-review.html)\n\nIt’s so many things in one: a movie review, an intro to “post incident reviews,” a lesson into which kinds of precautions work and which don’t, and a reminder that things can still go wrong even when well prepped. \n",
				"date_published": "2020-12-31T18:20:37-05:00",
				"url": "https://alexchabot.net/2020/12/31/ferdca-home-alone.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/12/26/ad-fontes-media.html",
				
				"content_html": "<p><a href=\"https://www.adfontesmedia.com\">Ad Fontes Media</a> rates media outlets according to their bias and reliability. 1) factual reporting has very slight left-leaning bias (see also &ldquo;<a href=\"https://www.nytimes.com/2017/12/08/opinion/facts-have-a-well-known-liberal-bias.html\">Facts Have a Well-Known Liberal Bias</a>&rdquo;) and consequently 2) it doesn&rsquo;t seem to be possible to be reliable <em>and</em> biased at the same time.</p>\n\n<p><img src=\"uploads/2020/e233b98e24.jpg\" width=\"600\" height=\"460\" alt=\"\" /></p>\n",
				"content_text": "[Ad Fontes Media](https://www.adfontesmedia.com) rates media outlets according to their bias and reliability. 1) factual reporting has very slight left-leaning bias (see also \"[Facts Have a Well-Known Liberal Bias](https://www.nytimes.com/2017/12/08/opinion/facts-have-a-well-known-liberal-bias.html)\") and consequently 2) it doesn't seem to be possible to be reliable _and_ biased at the same time.\n\n<img src=\"uploads/2020/e233b98e24.jpg\" width=\"600\" height=\"460\" alt=\"\" />\n",
				"date_published": "2020-12-26T18:51:42-05:00",
				"url": "https://alexchabot.net/2020/12/26/ad-fontes-media.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/12/22/in-hard-to.html",
				
				"content_html": "<p>In <a href=\"https://thume.ca/2020/09/04/macos-tips/\"><em>Hard to discover tips and apps for making macOS pleasant</em></a> Tristan Hume says:</p>\n\n<blockquote>\n<p>Chrome and Firefox have much better sounding audio resampling for watching videos on 1.5x or 2x speed. This is the only reason I don’t use Safari.</p>\n</blockquote>\n\n<p>I just tried it and oh my is this true!</p>\n",
				"content_text": "In [*Hard to discover tips and apps for making macOS pleasant*](https://thume.ca/2020/09/04/macos-tips/) Tristan Hume says:\n\n> Chrome and Firefox have much better sounding audio resampling for watching videos on 1.5x or 2x speed. This is the only reason I don’t use Safari.\n\nI just tried it and oh my is this true!\n",
				"date_published": "2020-12-22T19:27:23-05:00",
				"url": "https://alexchabot.net/2020/12/22/in-hard-to.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/12/20/holiday-newsletter.html",
				"title": "2020 Holiday Newsletter",
				"content_html": "\n\n<p>For the past 4 years, just before the holidays, I&rsquo;ve sent a newsletter to my colleagues about all the things I&rsquo;ve read, watched, listened to, cooked, or ate in the last year. This is the 2020 edition.</p>\n\n<h3 id=\"the-christopher-alexander-idea-patch\">The Christopher Alexander <em>idea patch</em></h3>\n\n<p><a href=\"https://saguenaylacsaintjean.ca/en/\">Where I’m from</a>, there are so many blueberries that people from that region are called <em>bleuets</em>. (The tourist info phone number is 1-877-BLEUETS (253-8387). You should go and visit.) When you go out to pick them (the blueberries, not the people) and you hit a patch with tons of them, we say &ldquo;I found <em>une talle</em>!&rdquo; That’s how it felt getting into Christopher Alexander&rsquo;s ideas.</p>\n\n<p>You might know of Alexander without realizing it. He&rsquo;s considered as the father of the idea of <em>design patterns</em>, which were heavily inspired by his book architecture book <a href=\"https://en.wikipedia.org/wiki/A_Pattern_Language\"><em>A Pattern Language</em></a>. Patterns are part of a larger process to solve design problems, from problem definitions, to solutions, to the evaluation of how good the solution is. It&rsquo;s that larger process that I found interesting. He named the parts of the process <em>context</em>, <em>form</em>, and <em>fit</em>. In brief, the <em>context</em> is the problem to be solved together with its constraints. It&rsquo;s totally independent of the solution. The <em>form</em> is the solution. It has a shape that <em>fits</em> the context more of less well. Once I had these words in my mind, I started seeing them everywhere.</p>\n\n<p>Clay Christiensen&rsquo;s <a href=\"https://www.christenseninstitute.org/key-concepts/jobs-to-be-done/\"><em>Jobs-to-be-Done</em></a> framework (from <a href=\"https://www.goodreads.com/book/show/28820024-competing-against-luck\"><em>Competing Against Luck</em></a>) is a way of defining product opportunities (<em>jobs</em>) as a context that can be fulfilled in many different ways. To get an idea of what that means, watch him telling the story of the <a href=\"https://www.youtube.com/watch?v=Stc0beAxavY\">job of a milkshake</a> and how milkshakes compete with bananas, donuts, and bagels, and not with ice cream.</p>\n\n<p>In <a href=\"https://www.goodreads.com/book/show/55345571-demand-side-sales-101\"><em>Demand-Side Sales</em></a>, Bob Moesta (who did the milkshake research) talks about selling from the buyer&rsquo;s perspective, from their struggles, from their <em>context</em>. In contrast to selling from the supply-side, which talks about features and <em>form</em> words. I highly recommend this book.</p>\n\n<p>On the programming side, unit testing has morphed into <em>form testing</em>, whereas the original intent was <em>context testing</em>. <a href=\"https://en.wikipedia.org/wiki/Behavior-driven_development\">Behavior-driven development</a> tried to get that spirit back. What I heard Ian Cooper say in his <a href=\"https://www.youtube.com/watch?v=EZ05e7EMOLM\"><em>TDD, Where Did It All Go Wrong</em></a> talk was &ldquo;Write context tests.&rdquo;</p>\n\n<p>Basecamp&rsquo;s <a href=\"https://basecamp.com/shapeup\"><em>Shape Up</em></a> is basically Alexander&rsquo;s ideas applied to product development and management. It makes a clear distinction between shaping (defining the problem and the context) and doing the work (creating a form). Which in turns allows a new dimension of diagnosis when a project fails: was the project badly shaped or is it that the execution failed and form was a bad fit?</p>\n\n<p>Ryan Singer, head of strategy at Basecamp, did a great <a href=\"https://www.youtube.com/watch?v=XLsTZXT0FlM\">intro to Alexander&rsquo;s work</a> this summer.</p>\n\n<h3 id=\"the-best-writing\">The Best Writing</h3>\n\n<p><a href=\"http://www.leesandlin.com/articles/LosingTheWar.htm\"><em>Losing the War</em></a> by Lee Sandlin is the best writing I read this year (and I read it on January 1, 2020).\nIt&rsquo;s an incredible essay on war (the Second World One), and memories. I found the &ldquo;flow&rdquo; to be exemplary with plenty of historical context and commentary. Well worth the time.</p>\n\n<h3 id=\"programming-cooking\"><code>programming == cooking</code></h3>\n\n<p>I used to tell students that I was &ldquo;teaching them how to fish.&rdquo; But after reading Robin Sloan’s <a href=\"https://www.robinsloan.com/notes/home-cooked-app/\"><em>Home Cooked App</em></a>, I’ve started telling people I&rsquo;m teaching them how to cook. It’s a <em>much richer</em> analogy.</p>\n\n<p>If you don’t know how to cook, you eat pre-packaged meals or you eat out (or you live with your mom forever). But there are tons of reasons to want to learn how to cook and tons of things to do once you&rsquo;ve learned how. You can cook for health reasons, to please friends, to create the perfect version of something, as a creative output, because you&rsquo;re picky, to make food you want to eat, because it&rsquo;s fun. You can specialize and become a baker, or open a taco truck, or start a family restaurant, or run a fine-dining restaurant. You can teach others how to cook. In the end, you can still go out and eat if you want, <em>you have a choice</em>. There are so many reasons to learn to cook.</p>\n\n<p>If you don&rsquo;t know how to program (or how to reason about programming) you use  apps you bought and hire consultants. But there are tons of reasons to want to learn how to program and tons of things to do once you&rsquo;ve learned how. You can create little scripts to rename files, write notebooks to make custom analyzes, write an app to enable friends and colleagues to explore data like you can, write your own text editor (!) because vim is holding you back, because it&rsquo;s fun. You can specialize and build deep learning models, or design data management systems, or build custom web apps, or start a scientific software development consultancy. You can teach others how to program. In the end, you can still hire consultants if you want, <em>you have a choice</em>. There are so many reasons to learn to program.</p>\n\n<h3 id=\"techtalk\">#techtalk</h3>\n\n<p>The <a href=\"https://gtoolkit.com\">Glamorous Toolkit</a> is an impressive &ldquo;moldable development environment&rdquo;. I&rsquo;d describe it as a strange hybrid between a notebook editor and an IDE. Any objects can have a rich and interactive representations, which is not new (to us), but the cool part is that it&rsquo;s easy to dynamically add new rich representations to the development environment. Watch this <a href=\"https://www.youtube.com/watch?app=desktop&amp;v=Pot9GnHFOVU\">talk by Tudor Gîrba</a> to get a taste of what&rsquo;s possible.</p>\n\n<p>Simon Willison&rsquo;s (co-creator of Django) <a href=\"https://datasette.io\">Datasette</a> is an impressive project to &ldquo;explore and publish data&rdquo;. It relies heavily on sqlite. I look forward to playing with it some more over the holidays. He&rsquo;s done super cool things with it, including finding the <a href=\"http://simonwillison.net/2020/May/21/dogsheep-photos/\">best photo of a pelican according to Apple Photos</a>, and <a href=\"https://simonwillison.net/2020/Nov/28/datasette-ripgrep/\">building a regex search engine across a collection of Github repos using <code>ripgrep</code></a>.</p>\n\n<h3 id=\"book-club\">#book-club</h3>\n\n<p>I started many books this year, but didn&rsquo;t finish that many:</p>\n\n<ul>\n<li><p><a href=\"https://www.goodreads.com/book/show/3828902-thinking-in-systems\"><em>Thinking in Systems</em></a> by Donella Meadows is a short introduction to &ldquo;systems thinking,&rdquo; their components (stocks, flows, feedback loops), common system configurations,  common pitfalls/opportunities of those configurations, and leverage points to intervene in those systems. I had so many &ldquo;Ah ha!&rdquo; moments. Many about things I &ldquo;knew&rdquo; but hadn&rsquo;t realized the consequences of. Like how &ldquo;systems with similar feedback structures produce similar dynamic behaviors, even if the outward appearance of these systems is completely dissimilar.&rdquo; For example, a population system (controlled by births and deaths) has a similar configuration as an economic capital system (controlled by investment and depreciation). Reading this book, it was so easy to think &ldquo;Here&rsquo;s a silver bullet!&rdquo; but then she totally called me out on it:</p>\n\n<blockquote>\n<p>People who are raised in the industrial world and who get enthused about systems thinking are likely to make a terrible mistake. They are likely to assume that here, in systems analysis, in interconnection and complication, in the power of the computer, here at last, is the key to prediction and control. This mistake is likely because the mind-set of the industrial world assumes that there is a key to prediction and control.</p>\n</blockquote></li>\n\n<li><p><a href=\"https://www.goodreads.com/book/show/44735.The_Elements_of_Typographic_Style\"><em>Elements of Typographic Style</em></a> by Robert Bringhurst. Yes it&rsquo;s a typography book, but it may also be the funniest thing I read all year. Bonus: the book itself is a beautiful object.</p></li>\n\n<li><p><a href=\"https://www.goodreads.com/book/show/25733983-lab-girl\"><em>Lab Girl</em></a> by Hope Jahren is a wonderful memoir of a &ldquo;life in science.&rdquo; She&rsquo;s a good storyteller, telling  a good story, about how the path to success in academia can be wild.</p></li>\n</ul>\n\n<p>But I read a <em>lot</em> of good articles:</p>\n\n<ul>\n<li>In <a href=\"https://www.robinsloan.com/notes/orthographic/\"><em>Orthographic media</em></a>, Robin Sloan (him again) argues that social media is a little like an orthographic project (no perspective), you can&rsquo;t tell the relative importance of things. At least, not in the way that say, newspaper headlines conveyed that idea.</li>\n<li>Sacha Judd makes the point that there <em>may</em> be <a href=\"https://www.sachajudd.com/one-direction\">a diverse pipeline in tech</a> and that people are not where &ldquo;we&rdquo; are looking for them.</li>\n<li>The &ldquo;low tech&rdquo; internet described in this article by <a href=\"https://solar.lowtechmagazine.com/2015/10/how-to-build-a-low-tech-internet.html\">Low Tech Magazine</a> has caching and no assumption of synchronicity. It would make for a better &ldquo;high tech&rdquo; internet.</li>\n<li>Paul Graham, <a href=\"http://www.paulgraham.com/lesson.html\">The Lesson to Unlearn</a>.</li>\n<li>Douglas Hofstadter writes about <a href=\"https://www.theatlantic.com/technology/archive/2018/01/the-shallowness-of-google-translate/551570/\"><em>The Shallowness of Google Translate</em></a>. Did you know that Hofstadter is a translator?!</li>\n<li>Dan Shapiro (CEO of Glowforge) writes <a href=\"https://www.danshapiro.com/blog/2019/02/fellow-white-dudes-lets-roll-a-d20/\"><em>Fellow White Dudes: Let’s Roll a d20</em></a>.</li>\n<li>In <a href=\"https://hbr.org/2000/05/balancing-act-how-to-capture-knowledge-without-killing-it\"><em>Balancing Act: How to Capture Knowledge Without Killing It</em></a> (HBR) John Seely Brown and Paul Duguid tell the story of Xerox&rsquo;s <em>Eureka</em> database and of the <em>community of practice</em> around it.</li>\n</ul>\n\n<h3 id=\"tyil-this-year-i-learned\">TYIL (This Year I Learned)</h3>\n\n<p>The <a href=\"https://en.wikipedia.org/wiki/Ouarzazate_Solar_Power_Station\">Ouarzazate Solar Power Station</a> <a href=\"https://en.wikipedia.org/wiki/Thermal_energy_storage#Molten_salt_technology\">melts salt</a> by concentrating the power of 7400 parabolic mirrors towards a central tower. The molten salt is then used to superheat water and power steam-powered generators.</p>\n\n<p>It&rsquo;s possible to tell one&rsquo;s position in the sea based on wave patterns. The 2016 NYT piece by Kim Tingley, <a href=\"https://www.nytimes.com/2016/03/20/magazine/the-secrets-of-the-wave-pilots.html\"><em>The Secrets of the Wave Pilots</em></a>, is an impressive testament of what our brains can perceive using our full bodies as sensors. See also these beautiful <a href=\"https://kottke.org/20/02/marshall-islands-navigation-charts\">Marshall Islands navigation charts</a>, and the <a href=\"https://www.wnycstudios.org/podcasts/radiolab/segments/eagle-eyes\">Eagle Eyes</a> Radiolab story about the vest David Eagleman is building to help deaf people hear.</p>\n\n<h3 id=\"some-nice-pandemic-things\">Some Nice Pandemic things</h3>\n\n<ul>\n<li>In May, the Barcelona Opera House reopened to a jam-packed audience. The hall was <a href=\"https://kottke.org/20/06/barcelona-opera-house-reopens-with-a-concert-for-2292-plants\">filled with 2,292 plants</a>.</li>\n<li><a href=\"https://marker.medium.com/inside-the-flour-company-supplying-americas-sudden-baking-obsession-623034583579\"><em>Inside King Arthur Flour, the Company Supplying America&rsquo;s Sudden Baking Obsession</em></a> by David H. Freedman. You knew King Arthur has a &ldquo;Baker&rsquo;s Hotline&rdquo;, right?</li>\n<li><a href=\"https://theonlinephotographer.typepad.com/the_online_photographer/2020/07/birds-and-bad-science-ot.html\"><em>The Virus is a Hawk</em></a> by Ctein. And we&rsquo;re ravens.</li>\n<li><a href=\"https://kottke.org/20/05/solving-the-the-miracle-sudoku\"><em>Solving the &lsquo;The Miracle Sudoku&rsquo;</em></a>: you might have heard about this video in May. It&rsquo;s such a joyful thing.</li>\n</ul>\n\n<h3 id=\"food\">Food</h3>\n\n<p>I started making pizza just after the pandemic started. I can&rsquo;t wait for it to be over to organize pizza parties. My source of knowledge is Ken Forkish&rsquo;s <a href=\"https://kensartisan.com/elements-of-pizza/\"><em>Elements of Pizza</em></a>. Using <a href=\"https://www.thekitchn.com/what-is-00-flour-pizza-pasta-108281\">tipo 00 flour</a> is worth it. So is a baking steel/stone.</p>\n\n<p><a href=\"https://www.seriouseats.com/2019/10/food-lab-video-episode-3-emulsions.html\">Kenji Alt Lopez’s Serious Eats episode on emulsions</a> has a really compelling demonstration of why you should put a <em>surfactant</em> in your emulsions. Now I put a little dollop of mustard in all my vinaigrettes.</p>\n\n<h3 id=\"music\">Music</h3>\n\n<p>My friend Matt shared some <em>bardcore</em> videos by Hildegard von Blingin&rsquo; earlier this year. Here&rsquo;s <a href=\"https://www.youtube.com/watch?v=Ch1aVmjvYTI\"><em>Somebody That I Used To Know (Bardcore/Medieval Style Cover with Vocals</em>)</a>. Bardcore is medieval renditions of pop songs. Obviously. So&hellip; the name Hildegard von Blingin’, is a reference to <a href=\"https://en.wikipedia.org/wiki/Hildegard_of_Bingen\">Hildegard von Bingen</a>, an 11th century badass abbess, composer, and scientist (among others). In the early 2000, my mom gave me a CD by Garmarna, a Swedish band that does&hellip; electro-folk renditions of her 11th-century music.  <code>Hildegard von Blingin' = 1/Garmarna</code>! Here&rsquo;s <a href=\"https://www.youtube.com/watch?v=OSrRbDiWJE0\">one song</a> and here&rsquo;s <a href=\"https://open.spotify.com/album/053oBAQKsQ8zdpn008LjbC?si=l2b7_oEiTVC5gwNSABSJMg\">the whole Garmarna album</a>.</p>\n\n<p>According to Spotify and Last.fm, I’ve listened to 1,700+ different artists this year, 600 of which were new to me. I won&rsquo;t give you the whole list, don&rsquo;t worry. Although I do have a playlist of <a href=\"https://open.spotify.com/playlist/7IIXpwAZn1iKZJ8rt6vicT?si=T_Tu-umdT9ixuggu5sca8g\">every album I liked in 2020</a> and one of only the <a href=\"https://open.spotify.com/playlist/176HkgMmoNjrQt166yk7Xl?si=N2o5sHqWRpyLstFh-zl1OQ\">best songs I listened to in 2020</a>.</p>\n\n<p>Here are my favorite albums <em>released in 2020</em>, in no particular order.</p>\n\n<ul>\n<li>At the beginning of the pandemic, <a href=\"https://www.youtube.com/watch?v=oXQi77eOdEY&amp;app=desktop\">Four Tet live streamed a set from a house in a forest</a>. It was 🔥.</li>\n<li>Louis-Jean Cormier - <a href=\"https://open.spotify.com/album/0etMcqNyXYSgrb7MTgCn6c\">Quand la nuit tombe</a></li>\n<li>Brad Mehldau - <a href=\"https://open.spotify.com/album/5e2pKFBkbxJ4s5gmgc78e4?si=f6tI7915SFCN-hN5f6sIGA\">Suite: April 2020</a></li>\n<li>GoGo Penguin - <a href=\"https://open.spotify.com/album/5dNyGCWbvGFcR2Zgad3cse?si=sKc2nGZ_Tjy7YhxeCvOkUw\">GoGo Penguin</a>, and <a href=\"https://open.spotify.com/album/4AmyWZodIjjOyZCXVJf9IV?si=78mTvOsbQYymqHOVYkRpXA\">Live from Studio 2</a></li>\n<li>Rymden - <a href=\"https://open.spotify.com/album/2ogpiZdnA3GtoBhAq8bYyw?si=gDrX6kkYRPezk5Lrv2cb0Q\">Space Sailors</a>. If you were a fan of the Esbjørn Svensen Trio, Rymden is its child. Same musicians, Magnus Öström and Dan Berglund, but a different pianist, Bugge Wesseltoft.</li>\n<li>Rage Against the Machine - <a href=\"https://open.spotify.com/album/5lexBcLuhxCaLB8LbM3JvR?si=_GHc7MFgS82n4dqEtD_61g\">The Battle of Mexico City (live)</a>: This one was quite a surprise!</li>\n<li>Four Tet - <a href=\"https://open.spotify.com/album/5gIa8hTQGPwVeNYjDwrraZ?si=eAe36VFyRa6IOitlG5kgug\">Sixteen Oceans</a></li>\n<li>Caribou - <a href=\"https://open.spotify.com/album/4wSb7OhVUzw3u76lta9fJw?si=vEo0U3yeQRSE2lWhUAMaxQ\">Suddenly</a></li>\n<li>Thundercat - <a href=\"https://open.spotify.com/album/59GRmAvlGs7KjLizFnV7Y9?si=Plou1pL3QTuGfi915Ox7ew\">It Is What It Is</a> (<em>I Love Louis Cole</em> is my favorite. It also made me discover Louis Cole)</li>\n<li>Ibrahim Maalouf - <a href=\"https://open.spotify.com/album/3x1vnezQHOTQG4kDC8nTzl?si=Njkl-yLxS72xBlW-qdU2Mg\">40 Melodies</a></li>\n<li>Dorian Concept - <a href=\"https://open.spotify.com/album/5Wp86B2C27T9i6xydxfNam?si=92JEjL6KTueO-wQ2tQprig\">The Jitters</a></li>\n<li>Glass Museum - <a href=\"https://open.spotify.com/album/5SzEQZ2YqU2mRe8iWKeVr6?si=XKuYltpTTBaELFI8IsLgWg\">Reykjavik</a></li>\n<li>Alessandro Cortini - <a href=\"https://open.spotify.com/album/6P2BzPJFGQ650iteh8acXC?si=aaCdkVGgRzSXLnoa4y2n_w\">Volume Massimo</a>: loopy synthesizer music, great to work to.</li>\n<li>Jónsi - <a href=\"https://open.spotify.com/album/6toqeyCvwGd0G4Lr1TPQCZ?si=IghWfBI5RaCghw4sisFylg\">Shiver</a></li>\n<li>Christian Scott aTunde Adjuah - <a href=\"https://open.spotify.com/album/7wpNfF5Qh0ZT3EE6cy0yxQ?si=achqXulATBOBEe6ZquVy3g\">Axiom</a></li>\n<li>Danny Kean - <a href=\"https://open.spotify.com/album/5F217Hk27hn2M97Akn3GE3?si=EidNdFmkRfynbfFiSX_R6g\">Roamin’</a>: A little all over the place, but very good.</li>\n</ul>\n\n<p>Here&rsquo;s more great music I discovered this year but that wasn&rsquo;t made this year.</p>\n\n<ul>\n<li>Dan Tepfer - <a href=\"https://open.spotify.com/album/1Nkph81AfMUEMwVPyiFWoj?si=d0GBR4OWQ6SylC1rBsQrow\">Goldberg Variations / Variations</a> (This guy is a genius. He <a href=\"https://www.youtube.com/watch?v=VqxYz2qhwGw\">live streamed a version</a> in June.)</li>\n<li>salami rose joe louis - <a href=\"https://open.spotify.com/album/4qvZ2pUy4LN9nCZ7BHiHic?si=5edEwgZSTn6JLhzN6XLN1g\">Zdenka 2080</a> (Gentle Giant meets Flying Lotus)</li>\n<li>Mother Falcon - <a href=\"https://open.spotify.com/album/6kqIWmVVmHKApfWcU1Aw15?si=4f47Yh1hSJWcfT-X4V1A8g\">You Knew</a> (I’m behind the curve on this Austin band. &ldquo;They split when they graduated from high school&rdquo; is what Maxwell told me. And Anna&rsquo;s colleague said &ldquo;Oh yeah, I taught those guys.&rdquo;)</li>\n<li>Rósín Murphy - <a href=\"https://open.spotify.com/album/4DILWb0ZQcBYBfmtJTSfpJ?si=38wOaOYHQ6CUibAWLdrptw\">Ruby Blue</a> (2005)</li>\n<li>Venetian Snares - <a href=\"https://open.spotify.com/album/0xc98Xuq9LbgiecN138ZRZ?si=BwDLHoQpSoChG_Qd19cf4A\">The Chocolate Wheelchair Album</a> (2003)</li>\n<li>Mika Vaninio, Ryoji Ikeda, alva noto - <a href=\"https://open.spotify.com/album/2mawmGeeS6xv8zDPwl5WJO?si=xAp1mkxuSIiUYaEdfGT7YQ\">Live 2020</a> (2018)</li>\n</ul>\n\n<p>I somehow ended up listening to a lot of Japanese indie music (for a lack of better term).</p>\n\n<ul>\n<li>Hakushi Hasegawa - <a href=\"https://open.spotify.com/album/2NLgsbQSFywjgEq9Jtk0gg?si=NQ2CCzS9QVSf_uaPwz49Rg\">Bones of Dreams Attacked!</a> and <a href=\"https://open.spotify.com/album/1uhwfCCEWi4q8Yzv9QBJ0w?si=W6LiGVTDRRO0VHdURBYPyw\">Air Ni Ni</a>: No idea what label to apply to this guy, other than &ldquo;he plays keyboards.&rdquo;</li>\n<li>んoon (pronounced &ldquo;hoon&rdquo;) - <a href=\"https://open.spotify.com/album/5AMu3q938fvG6sQfTSmf0Q?si=odDtTzRwTEq0Hu4E0guCQw\">Body</a>: These sounds get straight to the pleasure center of my brain. <em>Gum</em> is brilliant.</li>\n<li>WEi - <a href=\"https://open.spotify.com/album/5I2OBRdEmCi957TVXxeqOm?si=-e0I4BZUTni9l7PxKYvOYg\">Spring Patterns</a></li>\n<li>World’s End Girlfriend - <a href=\"https://open.spotify.com/album/1u8W9Bg8PPilIgReREkdl4?si=LLPEjOWnQOqP2DGVRi1-fw\">Last Waltz in Tokyo</a> (Post-rock)</li>\n<li>Ryuichi Sakamoto - <a href=\"https://open.spotify.com/album/0USWFsn3SWWK52FMqqNTO6?si=bl66Wz9wRCOPpn-MvDKrtA\">Bricolages</a>: From 2006. Remixes of Sakamoto&rsquo;s pieces by Cornelius, Fennesz, Alva Noto and others. It&rsquo;s catnip to my ears.</li>\n<li>Himuro Yoshiteru - <a href=\"https://open.spotify.com/album/0sehXHv8bVrJKJEsHMoo34?si=a1IXYctCSR-vscLpgH4MBw\">View from the Bottom</a></li>\n<li>Kenshi Yonezu - <a href=\"https://open.spotify.com/album/0htxNVyVbhow8ESseUu5UV?si=noaIAj80Si6Zw8owLntjjw\">Stray Sheep</a></li>\n<li>Aoki Takamasa - <a href=\"https://open.spotify.com/album/2KyxvbtWi0aPpLPXOmiNqy?si=xy0f-c8ASSmnh1Vq1ATPJQ\">RV8</a></li>\n</ul>\n\n<h3 id=\"whatcha-whatchin\">#whatcha-whatchin?</h3>\n\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/The_Newsroom_(American_TV_series)\"><em>The Newsroom</em></a>  by Aaon Sorkin is the best series I watched this year. Great characters, surprisingly funny, great storylines and overall arc.</li>\n<li>Ted Lasso is a close second.</li>\n<li><a href=\"https://www.crictor.ch/en\">Crictor</a> makes wonderful short, really short, videos. Do watch <a href=\"https://www.crictor.ch/en/projects/popcorn\"><em>Popcorn</em></a> (15 sec) and <a href=\"https://www.crictor.ch/en/projects/hanabi\"><em>Hanabi</em></a> (<em>fireworks</em> in Japanese, a big 45 sec).</li>\n<li><a href=\"https://en.wikipedia.org/wiki/The_Last_Dance_(miniseries)\"><em>The Last Dance</em></a> (<a href=\"https://www.netflix.com/gb/Title/80203144\">Netflix</a>), on Michael Jordan&rsquo;s career was a riveting watch. I vividly remember the 1997 Utah game where Jordan &ldquo;had the flu&rdquo; and still scored 38 points. At the time, my English wasn&rsquo;t so great and I remembered being puzzled by the fact that the announcer said Jordan had &ldquo;the flu&rdquo; (which in  <em>québécois</em> basically means diarrhea). Well, I learned that he probably <em>did</em> have the runs! He didn&rsquo;t have the flu, he had food poisoning from a bad pizza probably given to him by disgruntled Jazz fans. Take that, Jazz!</li>\n<li><a href=\"https://en.wikipedia.org/wiki/The_Good_Place\"><em>The Good Place</em></a> (<a href=\"https://www.netflix.com/gb/title/80113701\">Netflix</a>) is an unlikely great show about… philosophy. My favorite character is Jason Mendoza. I&rsquo;d watch it again.</li>\n<li><a href=\"https://en.wikipedia.org/wiki/The_West_Wing\"><em>The West Wing</em></a>: got me into Sorkin. I shed a tear during 5 of the first 5 episodes.</li>\n<li>I was going to say that <a href=\"https://en.wikipedia.org/wiki/The_Magicians_(American_TV_series)\"><em>The Magicians</em></a> was funny, smart, emotional, with a great cast, and a fantastic ending. But as I write this, I learned  there&rsquo;s a 5th season I didn&rsquo;t know existed. So take my &ldquo;great ending&rdquo; comment with a grain of salt.</li>\n</ul>\n",
				"content_text": "For the past 4 years, just before the holidays, I've sent a newsletter to my colleagues about all the things I've read, watched, listened to, cooked, or ate in the last year. This is the 2020 edition.\n\n### The Christopher Alexander *idea patch*\n\n[Where I’m from](https://saguenaylacsaintjean.ca/en/), there are so many blueberries that people from that region are called _bleuets_. (The tourist info phone number is 1-877-BLEUETS (253-8387). You should go and visit.) When you go out to pick them (the blueberries, not the people) and you hit a patch with tons of them, we say \"I found _une talle_!\" That’s how it felt getting into Christopher Alexander's ideas.\n\nYou might know of Alexander without realizing it. He's considered as the father of the idea of *design patterns*, which were heavily inspired by his book architecture book [*A Pattern Language*](https://en.wikipedia.org/wiki/A_Pattern_Language). Patterns are part of a larger process to solve design problems, from problem definitions, to solutions, to the evaluation of how good the solution is. It's that larger process that I found interesting. He named the parts of the process *context*, *form*, and *fit*. In brief, the *context* is the problem to be solved together with its constraints. It's totally independent of the solution. The *form* is the solution. It has a shape that *fits* the context more of less well. Once I had these words in my mind, I started seeing them everywhere.\n\nClay Christiensen's [*Jobs-to-be-Done*](https://www.christenseninstitute.org/key-concepts/jobs-to-be-done/) framework (from [*Competing Against Luck*](https://www.goodreads.com/book/show/28820024-competing-against-luck)) is a way of defining product opportunities (*jobs*) as a context that can be fulfilled in many different ways. To get an idea of what that means, watch him telling the story of the [job of a milkshake](https://www.youtube.com/watch?v=Stc0beAxavY) and how milkshakes compete with bananas, donuts, and bagels, and not with ice cream.\n\nIn [*Demand-Side Sales*](https://www.goodreads.com/book/show/55345571-demand-side-sales-101), Bob Moesta (who did the milkshake research) talks about selling from the buyer's perspective, from their struggles, from their *context*. In contrast to selling from the supply-side, which talks about features and *form* words. I highly recommend this book.\n\nOn the programming side, unit testing has morphed into *form testing*, whereas the original intent was *context testing*. [Behavior-driven development](https://en.wikipedia.org/wiki/Behavior-driven_development) tried to get that spirit back. What I heard Ian Cooper say in his [*TDD, Where Did It All Go Wrong*](https://www.youtube.com/watch?v=EZ05e7EMOLM) talk was \"Write context tests.\"\n\nBasecamp's [*Shape Up*](https://basecamp.com/shapeup) is basically Alexander's ideas applied to product development and management. It makes a clear distinction between shaping (defining the problem and the context) and doing the work (creating a form). Which in turns allows a new dimension of diagnosis when a project fails: was the project badly shaped or is it that the execution failed and form was a bad fit?\n\nRyan Singer, head of strategy at Basecamp, did a great [intro to Alexander's work](https://www.youtube.com/watch?v=XLsTZXT0FlM) this summer. \n\n### The Best Writing\n\n[*Losing the War*](http://www.leesandlin.com/articles/LosingTheWar.htm) by Lee Sandlin is the best writing I read this year (and I read it on January 1, 2020).\nIt's an incredible essay on war (the Second World One), and memories. I found the \"flow\" to be exemplary with plenty of historical context and commentary. Well worth the time.\n\n### `programming == cooking`\n\nI used to tell students that I was \"teaching them how to fish.\" But after reading Robin Sloan’s [*Home Cooked App*](https://www.robinsloan.com/notes/home-cooked-app/), I’ve started telling people I'm teaching them how to cook. It’s a *much richer* analogy. \n\nIf you don’t know how to cook, you eat pre-packaged meals or you eat out (or you live with your mom forever). But there are tons of reasons to want to learn how to cook and tons of things to do once you've learned how. You can cook for health reasons, to please friends, to create the perfect version of something, as a creative output, because you're picky, to make food you want to eat, because it's fun. You can specialize and become a baker, or open a taco truck, or start a family restaurant, or run a fine-dining restaurant. You can teach others how to cook. In the end, you can still go out and eat if you want, *you have a choice*. There are so many reasons to learn to cook.\n\nIf you don't know how to program (or how to reason about programming) you use  apps you bought and hire consultants. But there are tons of reasons to want to learn how to program and tons of things to do once you've learned how. You can create little scripts to rename files, write notebooks to make custom analyzes, write an app to enable friends and colleagues to explore data like you can, write your own text editor (!) because vim is holding you back, because it's fun. You can specialize and build deep learning models, or design data management systems, or build custom web apps, or start a scientific software development consultancy. You can teach others how to program. In the end, you can still hire consultants if you want, *you have a choice*. There are so many reasons to learn to program.\n\n\n### \\#techtalk\n\nThe [Glamorous Toolkit](https://gtoolkit.com) is an impressive \"moldable development environment\". I'd describe it as a strange hybrid between a notebook editor and an IDE. Any objects can have a rich and interactive representations, which is not new (to us), but the cool part is that it's easy to dynamically add new rich representations to the development environment. Watch this [talk by Tudor Gîrba](https://www.youtube.com/watch?app=desktop&v=Pot9GnHFOVU) to get a taste of what's possible.\n\nSimon Willison's (co-creator of Django) [Datasette](https://datasette.io) is an impressive project to \"explore and publish data\". It relies heavily on sqlite. I look forward to playing with it some more over the holidays. He's done super cool things with it, including finding the [best photo of a pelican according to Apple Photos](http://simonwillison.net/2020/May/21/dogsheep-photos/), and [building a regex search engine across a collection of Github repos using `ripgrep`](https://simonwillison.net/2020/Nov/28/datasette-ripgrep/).\n\n\n### \\#book-club\n\nI started many books this year, but didn't finish that many:\n\n- [*Thinking in Systems*](https://www.goodreads.com/book/show/3828902-thinking-in-systems) by Donella Meadows is a short introduction to \"systems thinking,\" their components (stocks, flows, feedback loops), common system configurations,  common pitfalls/opportunities of those configurations, and leverage points to intervene in those systems. I had so many \"Ah ha!\" moments. Many about things I \"knew\" but hadn't realized the consequences of. Like how \"systems with similar feedback structures produce similar dynamic behaviors, even if the outward appearance of these systems is completely dissimilar.\" For example, a population system (controlled by births and deaths) has a similar configuration as an economic capital system (controlled by investment and depreciation). Reading this book, it was so easy to think \"Here's a silver bullet!\" but then she totally called me out on it:\n\n\t> People who are raised in the industrial world and who get enthused about systems thinking are likely to make a terrible mistake. They are likely to assume that here, in systems analysis, in interconnection and complication, in the power of the computer, here at last, is the key to prediction and control. This mistake is likely because the mind-set of the industrial world assumes that there is a key to prediction and control.\n\n- [*Elements of Typographic Style*](https://www.goodreads.com/book/show/44735.The_Elements_of_Typographic_Style) by Robert Bringhurst. Yes it's a typography book, but it may also be the funniest thing I read all year. Bonus: the book itself is a beautiful object.\n- [*Lab Girl*](https://www.goodreads.com/book/show/25733983-lab-girl) by Hope Jahren is a wonderful memoir of a \"life in science.\" She's a good storyteller, telling  a good story, about how the path to success in academia can be wild.\n\nBut I read a *lot* of good articles:\n\n- In [*Orthographic media*](https://www.robinsloan.com/notes/orthographic/), Robin Sloan (him again) argues that social media is a little like an orthographic project (no perspective), you can't tell the relative importance of things. At least, not in the way that say, newspaper headlines conveyed that idea.\n- Sacha Judd makes the point that there *may* be [a diverse pipeline in tech](https://www.sachajudd.com/one-direction) and that people are not where \"we\" are looking for them. \n- The \"low tech\" internet described in this article by [Low Tech Magazine](https://solar.lowtechmagazine.com/2015/10/how-to-build-a-low-tech-internet.html) has caching and no assumption of synchronicity. It would make for a better \"high tech\" internet.\n- Paul Graham, [The Lesson to Unlearn](http://www.paulgraham.com/lesson.html).\n- Douglas Hofstadter writes about [*The Shallowness of Google Translate*](https://www.theatlantic.com/technology/archive/2018/01/the-shallowness-of-google-translate/551570/). Did you know that Hofstadter is a translator?!\n- Dan Shapiro (CEO of Glowforge) writes [*Fellow White Dudes: Let’s Roll a d20*](https://www.danshapiro.com/blog/2019/02/fellow-white-dudes-lets-roll-a-d20/).\n- In [*Balancing Act: How to Capture Knowledge Without Killing It*](https://hbr.org/2000/05/balancing-act-how-to-capture-knowledge-without-killing-it) (HBR) John Seely Brown and Paul Duguid tell the story of Xerox's *Eureka* database and of the *community of practice* around it.\n\n\n### TYIL (This Year I Learned)\n\nThe [Ouarzazate Solar Power Station](https://en.wikipedia.org/wiki/Ouarzazate_Solar_Power_Station) [melts salt](https://en.wikipedia.org/wiki/Thermal_energy_storage#Molten_salt_technology) by concentrating the power of 7400 parabolic mirrors towards a central tower. The molten salt is then used to superheat water and power steam-powered generators.\n \nIt's possible to tell one's position in the sea based on wave patterns. The 2016 NYT piece by Kim Tingley, [_The Secrets of the Wave Pilots_](https://www.nytimes.com/2016/03/20/magazine/the-secrets-of-the-wave-pilots.html), is an impressive testament of what our brains can perceive using our full bodies as sensors. See also these beautiful [Marshall Islands navigation charts](https://kottke.org/20/02/marshall-islands-navigation-charts), and the [Eagle Eyes](https://www.wnycstudios.org/podcasts/radiolab/segments/eagle-eyes) Radiolab story about the vest David Eagleman is building to help deaf people hear.\n\n### Some Nice Pandemic things\n\n- In May, the Barcelona Opera House reopened to a jam-packed audience. The hall was [filled with 2,292 plants](https://kottke.org/20/06/barcelona-opera-house-reopens-with-a-concert-for-2292-plants).\n- [*Inside King Arthur Flour, the Company Supplying America's Sudden Baking Obsession*](https://marker.medium.com/inside-the-flour-company-supplying-americas-sudden-baking-obsession-623034583579) by David H. Freedman. You knew King Arthur has a \"Baker's Hotline\", right?\n- [*The Virus is a Hawk*](https://theonlinephotographer.typepad.com/the_online_photographer/2020/07/birds-and-bad-science-ot.html) by Ctein. And we're ravens.\n- [*Solving the 'The Miracle Sudoku'*](https://kottke.org/20/05/solving-the-the-miracle-sudoku): you might have heard about this video in May. It's such a joyful thing.\n\n### Food\n\nI started making pizza just after the pandemic started. I can't wait for it to be over to organize pizza parties. My source of knowledge is Ken Forkish's [*Elements of Pizza*](https://kensartisan.com/elements-of-pizza/). Using [tipo 00 flour](https://www.thekitchn.com/what-is-00-flour-pizza-pasta-108281) is worth it. So is a baking steel/stone.\n\n[Kenji Alt Lopez’s Serious Eats episode on emulsions](https://www.seriouseats.com/2019/10/food-lab-video-episode-3-emulsions.html) has a really compelling demonstration of why you should put a *surfactant* in your emulsions. Now I put a little dollop of mustard in all my vinaigrettes.\n\n### Music\n\nMy friend Matt shared some *bardcore* videos by Hildegard von Blingin' earlier this year. Here's [*Somebody That I Used To Know (Bardcore/Medieval Style Cover with Vocals*)](https://www.youtube.com/watch?v=Ch1aVmjvYTI). Bardcore is medieval renditions of pop songs. Obviously. So... the name Hildegard von Blingin’, is a reference to [Hildegard von Bingen](https://en.wikipedia.org/wiki/Hildegard_of_Bingen), an 11th century badass abbess, composer, and scientist (among others). In the early 2000, my mom gave me a CD by Garmarna, a Swedish band that does... electro-folk renditions of her 11th-century music.  `Hildegard von Blingin' = 1/Garmarna`! Here's [one song](https://www.youtube.com/watch?v=OSrRbDiWJE0) and here's [the whole Garmarna album](https://open.spotify.com/album/053oBAQKsQ8zdpn008LjbC?si=l2b7_oEiTVC5gwNSABSJMg).\n\n\nAccording to Spotify and Last.fm, I’ve listened to 1,700+ different artists this year, 600 of which were new to me. I won't give you the whole list, don't worry. Although I do have a playlist of [every album I liked in 2020](https://open.spotify.com/playlist/7IIXpwAZn1iKZJ8rt6vicT?si=T_Tu-umdT9ixuggu5sca8g) and one of only the [best songs I listened to in 2020](https://open.spotify.com/playlist/176HkgMmoNjrQt166yk7Xl?si=N2o5sHqWRpyLstFh-zl1OQ).\n\n\nHere are my favorite albums _released in 2020_, in no particular order. \n\n- At the beginning of the pandemic, [Four Tet live streamed a set from a house in a forest](https://www.youtube.com/watch?v=oXQi77eOdEY&app=desktop). It was 🔥.\n- Louis-Jean Cormier - [Quand la nuit tombe](https://open.spotify.com/album/0etMcqNyXYSgrb7MTgCn6c)\n- Brad Mehldau - [Suite: April 2020](https://open.spotify.com/album/5e2pKFBkbxJ4s5gmgc78e4?si=f6tI7915SFCN-hN5f6sIGA)\n- GoGo Penguin - [GoGo Penguin](https://open.spotify.com/album/5dNyGCWbvGFcR2Zgad3cse?si=sKc2nGZ_Tjy7YhxeCvOkUw), and [Live from Studio 2](https://open.spotify.com/album/4AmyWZodIjjOyZCXVJf9IV?si=78mTvOsbQYymqHOVYkRpXA)\n- Rymden - [Space Sailors](https://open.spotify.com/album/2ogpiZdnA3GtoBhAq8bYyw?si=gDrX6kkYRPezk5Lrv2cb0Q). If you were a fan of the Esbjørn Svensen Trio, Rymden is its child. Same musicians, Magnus Öström and Dan Berglund, but a different pianist, Bugge Wesseltoft. \n- Rage Against the Machine - [The Battle of Mexico City (live)](https://open.spotify.com/album/5lexBcLuhxCaLB8LbM3JvR?si=_GHc7MFgS82n4dqEtD_61g): This one was quite a surprise!\n- Four Tet - [Sixteen Oceans](https://open.spotify.com/album/5gIa8hTQGPwVeNYjDwrraZ?si=eAe36VFyRa6IOitlG5kgug)\n- Caribou - [Suddenly](https://open.spotify.com/album/4wSb7OhVUzw3u76lta9fJw?si=vEo0U3yeQRSE2lWhUAMaxQ)\n- Thundercat - [It Is What It Is](https://open.spotify.com/album/59GRmAvlGs7KjLizFnV7Y9?si=Plou1pL3QTuGfi915Ox7ew) (_I Love Louis Cole_ is my favorite. It also made me discover Louis Cole)\n- Ibrahim Maalouf - [40 Melodies](https://open.spotify.com/album/3x1vnezQHOTQG4kDC8nTzl?si=Njkl-yLxS72xBlW-qdU2Mg)\n- Dorian Concept - [The Jitters](https://open.spotify.com/album/5Wp86B2C27T9i6xydxfNam?si=92JEjL6KTueO-wQ2tQprig)\n- Glass Museum - [Reykjavik](https://open.spotify.com/album/5SzEQZ2YqU2mRe8iWKeVr6?si=XKuYltpTTBaELFI8IsLgWg)\n- Alessandro Cortini - [Volume Massimo](https://open.spotify.com/album/6P2BzPJFGQ650iteh8acXC?si=aaCdkVGgRzSXLnoa4y2n_w): loopy synthesizer music, great to work to.\n- Jónsi - [Shiver](https://open.spotify.com/album/6toqeyCvwGd0G4Lr1TPQCZ?si=IghWfBI5RaCghw4sisFylg)\n- Christian Scott aTunde Adjuah - [Axiom](https://open.spotify.com/album/7wpNfF5Qh0ZT3EE6cy0yxQ?si=achqXulATBOBEe6ZquVy3g)\n- Danny Kean - [Roamin’](https://open.spotify.com/album/5F217Hk27hn2M97Akn3GE3?si=EidNdFmkRfynbfFiSX_R6g): A little all over the place, but very good.\n\nHere's more great music I discovered this year but that wasn't made this year.\n\n- Dan Tepfer - [Goldberg Variations / Variations](https://open.spotify.com/album/1Nkph81AfMUEMwVPyiFWoj?si=d0GBR4OWQ6SylC1rBsQrow) (This guy is a genius. He [live streamed a version](https://www.youtube.com/watch?v=VqxYz2qhwGw) in June.)\n- salami rose joe louis - [Zdenka 2080](https://open.spotify.com/album/4qvZ2pUy4LN9nCZ7BHiHic?si=5edEwgZSTn6JLhzN6XLN1g) (Gentle Giant meets Flying Lotus)\n- Mother Falcon - [You Knew](https://open.spotify.com/album/6kqIWmVVmHKApfWcU1Aw15?si=4f47Yh1hSJWcfT-X4V1A8g) (I’m behind the curve on this Austin band. \"They split when they graduated from high school\" is what Maxwell told me. And Anna's colleague said \"Oh yeah, I taught those guys.\")\n- Rósín Murphy - [Ruby Blue](https://open.spotify.com/album/4DILWb0ZQcBYBfmtJTSfpJ?si=38wOaOYHQ6CUibAWLdrptw) (2005)\n- Venetian Snares - [The Chocolate Wheelchair Album](https://open.spotify.com/album/0xc98Xuq9LbgiecN138ZRZ?si=BwDLHoQpSoChG_Qd19cf4A) (2003)\n- Mika Vaninio, Ryoji Ikeda, alva noto - [Live 2020](https://open.spotify.com/album/2mawmGeeS6xv8zDPwl5WJO?si=xAp1mkxuSIiUYaEdfGT7YQ) (2018)\n\nI somehow ended up listening to a lot of Japanese indie music (for a lack of better term). \n\n- Hakushi Hasegawa - [Bones of Dreams Attacked!](https://open.spotify.com/album/2NLgsbQSFywjgEq9Jtk0gg?si=NQ2CCzS9QVSf_uaPwz49Rg) and [Air Ni Ni](https://open.spotify.com/album/1uhwfCCEWi4q8Yzv9QBJ0w?si=W6LiGVTDRRO0VHdURBYPyw): No idea what label to apply to this guy, other than \"he plays keyboards.\"\n- んoon (pronounced \"hoon\") - [Body](https://open.spotify.com/album/5AMu3q938fvG6sQfTSmf0Q?si=odDtTzRwTEq0Hu4E0guCQw): These sounds get straight to the pleasure center of my brain. _Gum_ is brilliant. \n- WEi - [Spring Patterns](https://open.spotify.com/album/5I2OBRdEmCi957TVXxeqOm?si=-e0I4BZUTni9l7PxKYvOYg)\n- World’s End Girlfriend - [Last Waltz in Tokyo](https://open.spotify.com/album/1u8W9Bg8PPilIgReREkdl4?si=LLPEjOWnQOqP2DGVRi1-fw) (Post-rock)\n- Ryuichi Sakamoto - [Bricolages](https://open.spotify.com/album/0USWFsn3SWWK52FMqqNTO6?si=bl66Wz9wRCOPpn-MvDKrtA): From 2006. Remixes of Sakamoto's pieces by Cornelius, Fennesz, Alva Noto and others. It's catnip to my ears.\n- Himuro Yoshiteru - [View from the Bottom](https://open.spotify.com/album/0sehXHv8bVrJKJEsHMoo34?si=a1IXYctCSR-vscLpgH4MBw)\n- Kenshi Yonezu - [Stray Sheep](https://open.spotify.com/album/0htxNVyVbhow8ESseUu5UV?si=noaIAj80Si6Zw8owLntjjw)\n- Aoki Takamasa - [RV8](https://open.spotify.com/album/2KyxvbtWi0aPpLPXOmiNqy?si=xy0f-c8ASSmnh1Vq1ATPJQ)\n\n\n### \\#whatcha-whatchin?\n\n- [*The Newsroom*](https://en.wikipedia.org/wiki/The_Newsroom_(American_TV_series))  by Aaon Sorkin is the best series I watched this year. Great characters, surprisingly funny, great storylines and overall arc.\n- Ted Lasso is a close second.\n- [Crictor](https://www.crictor.ch/en) makes wonderful short, really short, videos. Do watch [*Popcorn*](https://www.crictor.ch/en/projects/popcorn) (15 sec) and [*Hanabi*](https://www.crictor.ch/en/projects/hanabi) (_fireworks_ in Japanese, a big 45 sec).\n- [*The Last Dance*](https://en.wikipedia.org/wiki/The_Last_Dance_(miniseries)) ([Netflix](https://www.netflix.com/gb/Title/80203144)), on Michael Jordan's career was a riveting watch. I vividly remember the 1997 Utah game where Jordan \"had the flu\" and still scored 38 points. At the time, my English wasn't so great and I remembered being puzzled by the fact that the announcer said Jordan had \"the flu\" (which in  _québécois_ basically means diarrhea). Well, I learned that he probably _did_ have the runs! He didn't have the flu, he had food poisoning from a bad pizza probably given to him by disgruntled Jazz fans. Take that, Jazz!\n- [*The Good Place*](https://en.wikipedia.org/wiki/The_Good_Place) ([Netflix](https://www.netflix.com/gb/title/80113701)) is an unlikely great show about… philosophy. My favorite character is Jason Mendoza. I'd watch it again.\n- [*The West Wing*](https://en.wikipedia.org/wiki/The_West_Wing): got me into Sorkin. I shed a tear during 5 of the first 5 episodes. \n- I was going to say that [_The Magicians_](https://en.wikipedia.org/wiki/The_Magicians_(American_TV_series)) was funny, smart, emotional, with a great cast, and a fantastic ending. But as I write this, I learned  there's a 5th season I didn't know existed. So take my \"great ending\" comment with a grain of salt.\n",
				"date_published": "2020-12-20T16:39:00-05:00",
				"url": "https://alexchabot.net/2020/12/20/holiday-newsletter.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/12/06/i-just-finished.html",
				
				"content_html": "<p>I just finished reading <a href=\"https://micro.blog/books/9781603580557\">Thinking in Systems: A Primer</a> by Donella H. Meadows. I believe sometimes one was to be &ldquo;ready&rdquo; to read a book. I must have been ready for this one because I had more &ldquo;Holy sh!t&rdquo; moments than any other book I&rsquo;ve read in years.📚</p>\n",
				"content_text": "I just finished reading [Thinking in Systems: A Primer](https://micro.blog/books/9781603580557) by Donella H. Meadows. I believe sometimes one was to be \"ready\" to read a book. I must have been ready for this one because I had more \"Holy sh!t\" moments than any other book I've read in years.📚\n",
				"date_published": "2020-12-06T20:28:00-05:00",
				"url": "https://alexchabot.net/2020/12/06/i-just-finished.html",
				"tags": ["book"]
			},
			{
				"id": "http://alexchabot.micro.blog/2020/10/14/austin-tx-morning.html",
				
				"content_html": "<p>Austin, TX, 8:15. Morning walk around the neighborhood. There are many good Halloween decorations, but this one is particularly entertaining.\n#adayinthelife</p>\n\n<p><img src=\"uploads/2020/83c43806c5.jpg\" width=\"600\" height=\"450\" alt=\"\" style=\"height: auto;\" class=\"sunlit_image\" /></p>\n",
				"content_text": "Austin, TX, 8:15. Morning walk around the neighborhood. There are many good Halloween decorations, but this one is particularly entertaining.\n#adayinthelife\n\n<img src=\"uploads/2020/83c43806c5.jpg\" width=\"600\" height=\"450\" alt=\"\" style=\"height: auto;\" class=\"sunlit_image\" />\n",
				"date_published": "2020-10-14T11:03:54-05:00",
				"url": "https://alexchabot.net/2020/10/14/austin-tx-morning.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/09/22/given-what-happened.html",
				
				"content_html": "<p>Given what happened to the other saguaro, it makes me fear that this one will fall too.</p>\n\n<p><img src=\"uploads/2020/d552062916.jpg\" width=\"400\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Given what happened to the other saguaro, it makes me fear that this one will fall too.\n\n<img src=\"uploads/2020/d552062916.jpg\" width=\"400\" height=\"600\" alt=\"\" />\n",
				"date_published": "2020-09-22T12:33:51-05:00",
				"url": "https://alexchabot.net/2020/09/22/given-what-happened.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/09/22/i-took-this.html",
				
				"content_html": "<p>I took this photo of a saguaro a month ago. It had been partially burnt during the fires that happened north of Phoenix earlier this summer. This weekend I realized it had fallen. According to Wikipedia, saguaros grow their first arm around 75–100 years of age. 👋🌵😔</p>\n\n<p><img src=\"uploads/2020/04b7c6893a.jpg\" width=\"400\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "I took this photo of a saguaro a month ago. It had been partially burnt during the fires that happened north of Phoenix earlier this summer. This weekend I realized it had fallen. According to Wikipedia, saguaros grow their first arm around 75–100 years of age. 👋🌵😔\n\n<img src=\"uploads/2020/04b7c6893a.jpg\" width=\"400\" height=\"600\" alt=\"\" />\n",
				"date_published": "2020-09-22T12:32:36-05:00",
				"url": "https://alexchabot.net/2020/09/22/i-took-this.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2020/06/06/custom-url-handler.html",
				"title": "Custom URL Handler for Files With Unique IDs",
				"content_html": "<p>Yesterday I read a <a href=\"https://forum.zettelkasten.de/discussion/comment/5609/\">series</a> <a href=\"https://forum.zettelkasten.de/discussion/1121/open-files-in-any-app-from-the-archive-using-url-schemes\">of</a> <a href=\"https://forum.zettelkasten.de/discussion/1152/using-a-custom-url-handler-on-macos-for-any-scripting-purpose\">posts</a> on custom URL scheme handlers on the <a href=\"https://forum.zettelkasten.de\">Zettelkasten forums</a>. The handler registers itself to open links like <code>zettel://202006061337</code>, where the number is the unique ID of a zettel (here it&rsquo;s a timestamp). I&rsquo;m not sure everyone realized the magnitude of what that means.</p>\n\n<p>Combining a custom URL with a unique ID means notes and links can become <em>entirely independent from your apps</em>. Only the handler needs to know about the apps you&rsquo;re using.</p>\n\n<p>That alone is very nice, but then I thought: URLs can have query parameters… That means I can have URLs like <code>zettel://202006061337&amp;edit</code> that open in my text editor of choice: <a href=\"https://macromates.com/\">TextMate</a>, <a href=\"https://www.barebones.com/products/bbedit\">BBEdit</a>, <a href=\"http://www.hogbaysoftware.com/products/writeroom\">WriteRoom</a>, <a href=\"http://www.foldingtext.com/\">FoldingText</a>, etc. Or <code>zettel://202006061337&amp;preview</code> to open in <a href=\"https://marked2app.com/\">Marked</a>. Or I could even pick the app interactively with <code>zettel://202006061337&amp;pick</code>.</p>\n\n<p>Handling the ID alone is pretty easy since the common Zettelkasten-like apps respond to a URL scheme to search and open files. <a href=\"https://zettelkasten.de/the-archive/help/#how-do-i-link-to-notes-from-other-apps\">The Archive</a> uses <code>thearchive://match/ID</code>, <a href=\"https://nvultra.com/help/advanced-features#urlhandler\">nvUltra</a> uses <code>x-nvultra://find/ID</code>, and <a href=\"https://brettterpstra.com/2012/02/02/connecting-nvalt-and-address-book/\">nvAlt</a> uses <code>nvalt://find/ID</code>.</p>\n\n<p>But how to open in a text editor or in Marked given only the ID? With Spotlight. I used <code>mdfind -name ID</code> to find the file. This could be further refined with the <code>-onlyin FOLDER</code> option but I didn&rsquo;t need it. Then it&rsquo;s a matter of calling <code>open -a Marked FILEPATH</code>.</p>\n\n<p>There&rsquo;s also a <code>zettel://create</code> special case that will create a new zettel with the current time stamp (YYYYMMDDHHMM). It&rsquo;s always done with the default Zettelkasten app because the script doesn&rsquo;t know where to write the file but the app does.</p>\n\n<p>I wrote the handler in Applecript because it&rsquo;s the easiest way I know to create something that macOS considers an &ldquo;app&rdquo; and that can therefore handle URLs.</p>\n\n<p>The full script is below. To use it:</p>\n\n<ol>\n<li>Open Script Editor and paste the code below in a new file.</li>\n<li>[Optional] Modify values in the Configuration section to pick a different URL prefix, default Zettelkasten app URL, editor, and previewer. You can add as many apps as you&rsquo;d like in the <code>appChoices</code> array.</li>\n<li>Save as &ldquo;Application&rdquo;. You can save it anywhere. Make sure <a href=\"https://apple.stackexchange.com/questions/245772/how-to-get-rid-of-applescript-confirmation\">none of the boxes are checked</a>.</li>\n<li>Register the app as a URL handler. You can do it with the <a href=\"https://github.com/Lord-Kamina/SwiftDefaultApps\">SwiftDefaultApps</a> Preference pane, or using the instructions provided by Christian Tietze <a href=\"https://forum.zettelkasten.de/discussion/comment/6133/#Comment_6133\">in the forums</a>:\n\n<ul>\n<li>Locate the application file you just created</li>\n<li>Right-click the app, select &ldquo;Show Package Contents&rdquo;</li>\n<li>Inside, open <code>Contents/Info.plist</code> <em>with a text editor</em></li>\n<li>Paste the following in a blank line right below the <code>&lt;dict&gt;</code> line. Replace <code>zettel</code> with the URL prefix you&rsquo;ve chosen:</li>\n</ul></li>\n</ol>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-xml\" data-lang=\"xml\"><span style=\"color:#062873;font-weight:bold\">&lt;key&gt;</span>CFBundleURLTypes<span style=\"color:#062873;font-weight:bold\">&lt;/key&gt;</span>\n<span style=\"color:#062873;font-weight:bold\">&lt;array&gt;</span>\n    <span style=\"color:#062873;font-weight:bold\">&lt;dict&gt;</span>\n        <span style=\"color:#062873;font-weight:bold\">&lt;key&gt;</span>CFBundleURLName<span style=\"color:#062873;font-weight:bold\">&lt;/key&gt;</span>\n        <span style=\"color:#062873;font-weight:bold\">&lt;string&gt;</span>Zettel Link Opener<span style=\"color:#062873;font-weight:bold\">&lt;/string&gt;</span>\n        <span style=\"color:#062873;font-weight:bold\">&lt;key&gt;</span>CFBundleURLSchemes<span style=\"color:#062873;font-weight:bold\">&lt;/key&gt;</span>\n        <span style=\"color:#062873;font-weight:bold\">&lt;array&gt;</span>\n            <span style=\"color:#062873;font-weight:bold\">&lt;string&gt;</span>zettel<span style=\"color:#062873;font-weight:bold\">&lt;/string&gt;</span>\n        <span style=\"color:#062873;font-weight:bold\">&lt;/array&gt;</span>\n    <span style=\"color:#062873;font-weight:bold\">&lt;/dict&gt;</span>\n<span style=\"color:#062873;font-weight:bold\">&lt;/array&gt;</span></code></pre></div>\n<p>Here&rsquo;s the full script:</p>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-applescript\" data-lang=\"applescript\"><span style=\"color:#60a0b0;font-style:italic\">-- Zettel Link Opener</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- Created by Alexandre Chabot-Leclerc</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- Source: https://alexchabot.net/2020/06/06/custom-url-handler-for-zettels/</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- URL Handler for zettelkasten unique IDs, e.g., zettel://202006061017</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- Handles options after the ID to open different apps:</span>\n<span style=\"color:#60a0b0;font-style:italic\">--    zettel://202006061017&amp;edit to open is a text editor like TextMate</span>\n<span style=\"color:#60a0b0;font-style:italic\">--    zettel://202006061017&amp;preview to open in a preview app like Marked</span>\n<span style=\"color:#60a0b0;font-style:italic\">--    zettel://202006061017&amp;pick to open a menu of apps to pick from</span>\n\n<span style=\"color:#60a0b0;font-style:italic\">-----------------------------------------------------------</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- CONFIGURATION</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- URL prefix for your custom URL, e.g. zettel://ZETTEL_ID</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">urlPrefix</span> : <span style=\"color:#4070a0\">&#34;zettel&#34;</span>\n\n<span style=\"color:#60a0b0;font-style:italic\">-- Default URL to call to open a note with a given ID. The ID will be appended</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">defaultZkAppUrl</span> : <span style=\"color:#4070a0\">&#34;thearchive://match/&#34;</span>\n<span style=\"color:#60a0b0;font-style:italic\">--property defaultZkAppUrl : &#34;nvalt://find/&#34;</span>\n<span style=\"color:#60a0b0;font-style:italic\">--property defaultZkAppUrl : &#34;x-nvultra://find/&#34;</span>\n\n<span style=\"color:#60a0b0;font-style:italic\">-- URL to use to create a new zettle with the current timestamp YYYYMMDDHHMM</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">urlForCreation</span> : <span style=\"color:#4070a0\">&#34;thearchive://matchOrCreate/&#34;</span>\n<span style=\"color:#60a0b0;font-style:italic\">--property urlForCreation : &#34;nvalt://make?txt=&#34;</span>\n<span style=\"color:#60a0b0;font-style:italic\">--property urlForCreation : &#34;x-nvultra://make?txt=&#34;</span>\n\n<span style=\"color:#60a0b0;font-style:italic\">-- Apps to use for the different query parameters</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">editApp</span> : <span style=\"color:#4070a0\">&#34;FoldingText&#34;</span> <span style=\"color:#60a0b0;font-style:italic\">-- App to used with &#34;&amp;edit&#34; query parameter</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">previewApp</span> : <span style=\"color:#4070a0\">&#34;Marked&#34;</span> <span style=\"color:#60a0b0;font-style:italic\">-- App to used with &#34;&amp;preview&#34; query parameter </span>\n\n<span style=\"color:#60a0b0;font-style:italic\">-- List of app to display in the menu with with &amp;pick query option</span>\n<span style=\"color:#60a0b0;font-style:italic\">-- The apps will appear in the order defined here</span>\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">appChoices</span> : {<span style=\"color:#bb60d5\">defaultZkAppUrl</span>, <span style=\"color:#bb60d5\">editApp</span>, <span style=\"color:#bb60d5\">previewApp</span>, <span style=\"color:#4070a0\">&#34;TextMate&#34;</span>}\n<span style=\"color:#007020;font-weight:bold\">property</span> <span style=\"color:#bb60d5\">defaultApp</span> : {<span style=\"color:#bb60d5\">defaultZkAppUrl</span>})\n<span style=\"color:#60a0b0;font-style:italic\">-----------------------------------------------------------</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">splitText</span>(<span style=\"color:#bb60d5\">theText</span>, <span style=\"color:#bb60d5\">theDelimiter</span>)\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#60add5\">AppleScript</span>&#39;s <span style=\"color:#60add5\">text item delimiters</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#bb60d5\">theDelimiter</span>\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">theTextItems</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#007020\">every</span> <span style=\"color:#007020\">text</span> <span style=\"color:#007020\">item</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">theText</span>\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#60add5\">AppleScript</span>&#39;s <span style=\"color:#60add5\">text item delimiters</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#4070a0\">&#34;&#34;</span>\n\t<span style=\"color:#60add5\">return</span> <span style=\"color:#bb60d5\">theTextItems</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">splitText</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">removeUrlPrefix</span>(<span style=\"color:#bb60d5\">original</span>)\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Remove URL prefix so we&#39;re left with only the ID and the optional query parameter</span>\n\t<span style=\"color:#60add5\">return</span> <span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;echo &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#007020\">quoted form</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">original</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#4070a0\">&#34; | sed &#39;s;&#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">urlPrefix</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#4070a0\">&#34;://;;&#39;&#34;</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">removeUrlPrefix</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">getIdAndOption</span>(<span style=\"color:#bb60d5\">resouceAndQuery</span>)\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Split the zettel ID and the optional parameter</span>\n\t<span style=\"color:#60a0b0;font-style:italic\">-- For example 202006061012&amp;edit or 202006061012&amp;preview</span>\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">theItems</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#bb60d5\">splitText</span>(<span style=\"color:#bb60d5\">resouceAndQuery</span>, <span style=\"color:#4070a0\">&#34;&amp;&#34;</span>)\n\t<span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#bb60d5\">length</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">theItems</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#40a070\">1</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#60a0b0;font-style:italic\">-- Append an empty string if there&#39;s no option so this</span>\n\t\t<span style=\"color:#60a0b0;font-style:italic\">-- function always returns an array of 2 elements</span>\n\t\t<span style=\"color:#007020\">copy</span> <span style=\"color:#4070a0\">&#34;&#34;</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#007020\">the</span> <span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">theItems</span>\n\t<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">if</span>\n\t<span style=\"color:#60add5\">return</span> <span style=\"color:#bb60d5\">theItems</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">getIdAndOption</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">findFilepath</span>(<span style=\"color:#bb60d5\">zk_id</span>)\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Finds the filepath using Spotlight.</span>\n\t<span style=\"color:#60a0b0;font-style:italic\">-- It&#39;s easier than finding the proper filename given only the zettel ID</span>\n\t<span style=\"color:#60add5\">return</span> <span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;mdfind -name &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">zk_id</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">findFilepath</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">createZettel</span>()\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">newZkId</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;date +&#39;%Y%m%d%H%M&#39;&#34;</span>\n\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">urlForCreation</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">newZkId</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">createZettel</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#bb60d5\">openInChoosenApp</span>(<span style=\"color:#bb60d5\">zkId</span>, <span style=\"color:#bb60d5\">zkFilepath</span>)\n\t<span style=\"color:#60a0b0;font-style:italic\">--\tFrom Simple List Handler by Patrick Welker &lt;http://rocketink.net&gt;</span>\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Promp the use for the app to use</span>\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">selectedApp</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#007020\">item</span> <span style=\"color:#40a070\">1</span> <span style=\"color:#007020;font-weight:bold\">of</span> (<span style=\"color:#007020\">choose from list</span> <span style=\"color:#007020\">the</span> <span style=\"color:#bb60d5\">appChoices</span> <span style=\"color:#bb60d5\">with</span> <span style=\"color:#4070a0\">title</span> <span style=\"color:#4070a0\">&#34;Available App&#34;</span> <span style=\"color:#bb60d5\">with</span> <span style=\"color:#4070a0\">prompt</span> <span style=\"color:#4070a0\">&#34;Which app do you want to use?&#34;</span> <span style=\"color:#bb60d5\">default</span> <span style=\"color:#007020\">items</span> <span style=\"color:#bb60d5\">defaultApp</span>)\n\t<span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#bb60d5\">selectedApp</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#60add5\">false</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#60a0b0;font-style:italic\">-- Exit prematurly if the user clicked Cancel</span>\n\t\t<span style=\"color:#007020;font-weight:bold\">error</span> <span style=\"color:#bb60d5\">number</span> <span style=\"color:#666\">-</span><span style=\"color:#40a070\">128</span>\n\t<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">if</span>\n\t\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Open the URL directly, or open by app name</span>\n\t<span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#bb60d5\">selectedApp</span> <span style=\"color:#007020;font-weight:bold\">contains</span> <span style=\"color:#4070a0\">&#34;://&#34;</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">selectedApp</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">zkId</span>\n\t<span style=\"color:#007020;font-weight:bold\">else</span>\n\t\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open -a &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">selectedApp</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#4070a0\">&#34; &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#007020\">quoted form</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">zkFilepath</span>\n\t<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">if</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#bb60d5\">openInChoosenApp</span>\n\n<span style=\"color:#007020;font-weight:bold\">on</span> <span style=\"color:#007020\">open location</span> <span style=\"color:#bb60d5\">thisURL</span>\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">resouceAndQuery</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#bb60d5\">removeUrlPrefix</span>(<span style=\"color:#bb60d5\">thisURL</span>)\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">idAndOption</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#bb60d5\">getIdAndOption</span>(<span style=\"color:#bb60d5\">resouceAndQuery</span>)\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">zkId</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#007020\">item</span> <span style=\"color:#40a070\">1</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">idAndOption</span>\n\t\n\t<span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#bb60d5\">zkId</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#4070a0\">&#34;create&#34;</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#bb60d5\">createZettel</span>()\n\t\t<span style=\"color:#60add5\">return</span>\n\t<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">if</span>\n\t\n\t<span style=\"color:#007020;font-weight:bold\">set</span> <span style=\"color:#bb60d5\">zkFilepath</span> <span style=\"color:#007020;font-weight:bold\">to</span> <span style=\"color:#bb60d5\">findFilepath</span>(<span style=\"color:#bb60d5\">zkId</span>)\n\t\n\t<span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#007020\">item</span> <span style=\"color:#40a070\">2</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">idAndOption</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#4070a0\">&#34;edit&#34;</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open -a &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">editApp</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#4070a0\">&#34; &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#007020\">quoted form</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">zkFilepath</span>\n\t\t<span style=\"color:#60a0b0;font-style:italic\">-- Exit the script immediately so we don&#39;t also open in the default app</span>\n\t\t<span style=\"color:#60add5\">return</span>\n\t<span style=\"color:#007020;font-weight:bold\">else</span> <span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#007020\">item</span> <span style=\"color:#40a070\">2</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">idAndOption</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#4070a0\">&#34;preview&#34;</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open -a &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">previewApp</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#4070a0\">&#34; &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#007020\">quoted form</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">zkFilepath</span>\n\t\t<span style=\"color:#60a0b0;font-style:italic\">-- Exit the script immediately so we don&#39;t also open in the default app(</span>\n\t\t<span style=\"color:#60add5\">return</span>\n\t<span style=\"color:#007020;font-weight:bold\">else</span> <span style=\"color:#007020;font-weight:bold\">if</span> <span style=\"color:#007020\">item</span> <span style=\"color:#40a070\">2</span> <span style=\"color:#007020;font-weight:bold\">of</span> <span style=\"color:#bb60d5\">idAndOption</span> <span style=\"color:#007020;font-weight:bold\">is</span> <span style=\"color:#4070a0\">&#34;pick&#34;</span> <span style=\"color:#007020;font-weight:bold\">then</span>\n\t\t<span style=\"color:#bb60d5\">openInChoosenApp</span>(<span style=\"color:#bb60d5\">zkId</span>, <span style=\"color:#bb60d5\">zkFilepath</span>)\n\t\t<span style=\"color:#60add5\">return</span>\n\t<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020;font-weight:bold\">if</span>\n\t\n\t<span style=\"color:#60a0b0;font-style:italic\">-- Fall back to the default handler if there was no option</span>\n\t<span style=\"color:#60a0b0;font-style:italic\">-- or the option was invalid</span>\n\t<span style=\"color:#007020\">do shell script</span> <span style=\"color:#4070a0\">&#34;open &#34;</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">defaultZkAppUrl</span> <span style=\"color:#666\">&amp;</span> <span style=\"color:#bb60d5\">zkId</span>\n<span style=\"color:#007020;font-weight:bold\">end</span> <span style=\"color:#007020\">open location</span></code></pre></div>",
				"content_text": "Yesterday I read a [series](https://forum.zettelkasten.de/discussion/comment/5609/) [of](https://forum.zettelkasten.de/discussion/1121/open-files-in-any-app-from-the-archive-using-url-schemes) [posts](https://forum.zettelkasten.de/discussion/1152/using-a-custom-url-handler-on-macos-for-any-scripting-purpose) on custom URL scheme handlers on the [Zettelkasten forums](https://forum.zettelkasten.de). The handler registers itself to open links like `zettel://202006061337`, where the number is the unique ID of a zettel (here it's a timestamp). I'm not sure everyone realized the magnitude of what that means. \n\nCombining a custom URL with a unique ID means notes and links can become _entirely independent from your apps_. Only the handler needs to know about the apps you're using. \n\nThat alone is very nice, but then I thought: URLs can have query parameters… That means I can have URLs like `zettel://202006061337&edit` that open in my text editor of choice: [TextMate](https://macromates.com/), [BBEdit](https://www.barebones.com/products/bbedit), [WriteRoom](http://www.hogbaysoftware.com/products/writeroom), [FoldingText](http://www.foldingtext.com/), etc. Or `zettel://202006061337&preview` to open in [Marked](https://marked2app.com/). Or I could even pick the app interactively with `zettel://202006061337&pick`.\n\nHandling the ID alone is pretty easy since the common Zettelkasten-like apps respond to a URL scheme to search and open files. [The Archive](https://zettelkasten.de/the-archive/help/#how-do-i-link-to-notes-from-other-apps) uses `thearchive://match/ID`, [nvUltra](https://nvultra.com/help/advanced-features#urlhandler) uses `x-nvultra://find/ID`, and [nvAlt](https://brettterpstra.com/2012/02/02/connecting-nvalt-and-address-book/) uses `nvalt://find/ID`.\n\nBut how to open in a text editor or in Marked given only the ID? With Spotlight. I used `mdfind -name ID` to find the file. This could be further refined with the `-onlyin FOLDER` option but I didn't need it. Then it's a matter of calling `open -a Marked FILEPATH`.\n\nThere's also a `zettel://create` special case that will create a new zettel with the current time stamp (YYYYMMDDHHMM). It's always done with the default Zettelkasten app because the script doesn't know where to write the file but the app does.\n\nI wrote the handler in Applecript because it's the easiest way I know to create something that macOS considers an \"app\" and that can therefore handle URLs. \n\nThe full script is below. To use it:\n\n1. Open Script Editor and paste the code below in a new file.\n2. [Optional] Modify values in the Configuration section to pick a different URL prefix, default Zettelkasten app URL, editor, and previewer. You can add as many apps as you'd like in the `appChoices` array.\n3. Save as \"Application\". You can save it anywhere. Make sure [none of the boxes are checked](https://apple.stackexchange.com/questions/245772/how-to-get-rid-of-applescript-confirmation).\n4. Register the app as a URL handler. You can do it with the [SwiftDefaultApps](https://github.com/Lord-Kamina/SwiftDefaultApps) Preference pane, or using the instructions provided by Christian Tietze [in the forums](https://forum.zettelkasten.de/discussion/comment/6133/#Comment_6133):\n\t- Locate the application file you just created\n\t- Right-click the app, select \"Show Package Contents\"\n\t- Inside, open `Contents/Info.plist` _with a text editor_\n\t- Paste the following in a blank line right below the `<dict>` line. Replace `zettel` with the URL prefix you've chosen:\n\n```xml\n<key>CFBundleURLTypes</key>\n<array>\n    <dict>\n        <key>CFBundleURLName</key>\n        <string>Zettel Link Opener</string>\n        <key>CFBundleURLSchemes</key>\n        <array>\n            <string>zettel</string>\n        </array>\n    </dict>\n</array>\n```\n\nHere's the full script:\n\n```applescript\n-- Zettel Link Opener\n-- Created by Alexandre Chabot-Leclerc\n-- Source: https://alexchabot.net/2020/06/06/custom-url-handler-for-zettels/\n-- URL Handler for zettelkasten unique IDs, e.g., zettel://202006061017\n-- Handles options after the ID to open different apps:\n--    zettel://202006061017&edit to open is a text editor like TextMate\n--    zettel://202006061017&preview to open in a preview app like Marked\n--    zettel://202006061017&pick to open a menu of apps to pick from\n\n-----------------------------------------------------------\n-- CONFIGURATION\n-- URL prefix for your custom URL, e.g. zettel://ZETTEL_ID\nproperty urlPrefix : \"zettel\"\n\n-- Default URL to call to open a note with a given ID. The ID will be appended\nproperty defaultZkAppUrl : \"thearchive://match/\"\n--property defaultZkAppUrl : \"nvalt://find/\"\n--property defaultZkAppUrl : \"x-nvultra://find/\"\n\n-- URL to use to create a new zettle with the current timestamp YYYYMMDDHHMM\nproperty urlForCreation : \"thearchive://matchOrCreate/\"\n--property urlForCreation : \"nvalt://make?txt=\"\n--property urlForCreation : \"x-nvultra://make?txt=\"\n\n-- Apps to use for the different query parameters\nproperty editApp : \"FoldingText\" -- App to used with \"&edit\" query parameter\nproperty previewApp : \"Marked\" -- App to used with \"&preview\" query parameter \n\n-- List of app to display in the menu with with &pick query option\n-- The apps will appear in the order defined here\nproperty appChoices : {defaultZkAppUrl, editApp, previewApp, \"TextMate\"}\nproperty defaultApp : {defaultZkAppUrl})\n-----------------------------------------------------------\n\non splitText(theText, theDelimiter)\n\tset AppleScript's text item delimiters to theDelimiter\n\tset theTextItems to every text item of theText\n\tset AppleScript's text item delimiters to \"\"\n\treturn theTextItems\nend splitText\n\non removeUrlPrefix(original)\n\t-- Remove URL prefix so we're left with only the ID and the optional query parameter\n\treturn do shell script \"echo \" & quoted form of original & \" | sed 's;\" & urlPrefix & \"://;;'\"\nend removeUrlPrefix\n\non getIdAndOption(resouceAndQuery)\n\t-- Split the zettel ID and the optional parameter\n\t-- For example 202006061012&edit or 202006061012&preview\n\tset theItems to splitText(resouceAndQuery, \"&\")\n\tif length of theItems is 1 then\n\t\t-- Append an empty string if there's no option so this\n\t\t-- function always returns an array of 2 elements\n\t\tcopy \"\" to the end of theItems\n\tend if\n\treturn theItems\nend getIdAndOption\n\non findFilepath(zk_id)\n\t-- Finds the filepath using Spotlight.\n\t-- It's easier than finding the proper filename given only the zettel ID\n\treturn do shell script \"mdfind -name \" & zk_id\nend findFilepath\n\non createZettel()\n\tset newZkId to do shell script \"date +'%Y%m%d%H%M'\"\n\tdo shell script \"open \" & urlForCreation & newZkId\nend createZettel\n\non openInChoosenApp(zkId, zkFilepath)\n\t--\tFrom Simple List Handler by Patrick Welker <http://rocketink.net>\n\t-- Promp the use for the app to use\n\tset selectedApp to item 1 of (choose from list the appChoices with title \"Available App\" with prompt \"Which app do you want to use?\" default items defaultApp)\n\tif selectedApp is false then\n\t\t-- Exit prematurly if the user clicked Cancel\n\t\terror number -128\n\tend if\n\t\n\t-- Open the URL directly, or open by app name\n\tif selectedApp contains \"://\" then\n\t\tdo shell script \"open \" & selectedApp & zkId\n\telse\n\t\tdo shell script \"open -a \" & selectedApp & \" \" & quoted form of zkFilepath\n\tend if\nend openInChoosenApp\n\non open location thisURL\n\tset resouceAndQuery to removeUrlPrefix(thisURL)\n\tset idAndOption to getIdAndOption(resouceAndQuery)\n\tset zkId to item 1 of idAndOption\n\t\n\tif zkId is \"create\" then\n\t\tcreateZettel()\n\t\treturn\n\tend if\n\t\n\tset zkFilepath to findFilepath(zkId)\n\t\n\tif item 2 of idAndOption is \"edit\" then\n\t\tdo shell script \"open -a \" & editApp & \" \" & quoted form of zkFilepath\n\t\t-- Exit the script immediately so we don't also open in the default app\n\t\treturn\n\telse if item 2 of idAndOption is \"preview\" then\n\t\tdo shell script \"open -a \" & previewApp & \" \" & quoted form of zkFilepath\n\t\t-- Exit the script immediately so we don't also open in the default app(\n\t\treturn\n\telse if item 2 of idAndOption is \"pick\" then\n\t\topenInChoosenApp(zkId, zkFilepath)\n\t\treturn\n\tend if\n\t\n\t-- Fall back to the default handler if there was no option\n\t-- or the option was invalid\n\tdo shell script \"open \" & defaultZkAppUrl & zkId\nend open location\n```\n",
				"date_published": "2020-06-05T19:00:00-05:00",
				"url": "https://alexchabot.net/2020/06/05/custom-url-handler.html",
				"tags": ["applescript","zettelkasten"]
			},
			{
				"id": "http://alexchabot.micro.blog/2020/05/31/what-does-matplotlib.html",
				"title": "What does %matplotlib do in IPython?",
				"content_html": "\n\n<p><em>TLDR; Use <code>%matplotlib</code> if you want interactive plotting with matplotlib. If you&rsquo;re only interested in the GUI&rsquo;s event loop, <code>%gui &lt;backend&gt;</code> is sufficient.</em></p>\n\n<p>I never really understood the difference between <code>%gui</code> and <code>%matplotlib</code> in IPython. One of my colleagues at Enthought once told me that at some point in his career, he more or less stopped reading documentation and instead went straight to the code. That&rsquo;s what I did here. But let&rsquo;s do a bit of history first.</p>\n\n<p>In the &ldquo;beginning&rdquo;, there was <code>pylab</code>. It (still) is a module of matplotlib and was a flag to IPython designed to <a href=\"https://web.archive.org/web/20130609145008/https://wiki.scipy.org/PyLab\">facilitate the adoption of Python as a numerical computing language</a> by providing a MATLAB-like syntax.<sup class=\"footnote-ref\" id=\"fnref:matlab\"><a href=\"#fn:matlab\">1</a></sup> The reference was so explicit that before being renamed to <code>pylab</code> on <a href=\"https://github.com/matplotlib/matplotlib/commit/f210efb0aff44a108239496c877aefe6b7cab2e5\">Dec 9, 2004</a>, the module was called <code>matplotlib.matlab</code>. IPython adopted the rename on the <a href=\"https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799#diff-f26cfac88f7acfeb30807d9a98cff722R616\">same day</a>.<sup class=\"footnote-ref\" id=\"fnref:pylab\"><a href=\"#fn:pylab\">2</a></sup> With the <code>‑‑pylab</code> flag or the <code>%pylab</code> magic function, IPython would set up matplotlib for interactive plotting and executed a number of imports from IPython, NumPy and matplotlib. Even thought it helped a few people transition to Python (including myself), it turned out to be a pretty bad idea from a usability point of view. Matthias Bussonnier wrote up a good list of the many things that are wrong with it in &ldquo;<a href=\"https://matthiasbussonnier.com/posts/10-No-PyLab-Thanks.html\">No Pylab Thanks</a>.&rdquo;</p>\n\n<p>For the 1.0.0 release of IPython in August 2013, all mentions of <code>%pylab</code> were removed from the examples (in a <a href=\"https://github.com/ipython/ipython/pull/3683\">July 18, 2013</a> commit) and were replaced by calls to the <code>%matplotlib</code> magic function, which only enables interactive plotting but does not perform any imports. The <code>%matplotlib</code> function had already been introduced in a <a href=\"https://github.com/ipython/ipython/commit/7ae1fe4225c0c11ccdd6eec758c23aa81ac88654\">2013 refactoring</a> to separate the interatice plotting from the imports. The <code>%gui</code> magic command had already been <a href=\"https://github.com/ipython/ipython/commit/a38045e05d22fee06a56ae884856ed689523ff7b\">introduced</a> in 2009 by Brian Granger to &ldquo;manage the events loops&rdquo; (hint hint).</p>\n\n<p>Now we know that the (my) confusion with <code>%gui</code> and <code>%matplotlib</code> started in 2013.</p>\n\n<p>This analysis refers to <a href=\"https://github.com/ipython/ipython/tree/7.8.0\">IPython 7.8.0</a> and <a href=\"https://github.com/ipython/ipykernel/tree/v5.1.2\">ipykernel 5.1.2</a>.</p>\n\n<p>Our entry point will be the <code>%matplotlib</code> magic command. Its source code is in the <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/magics/pylab.py#L46-L100\"><code>IPython.core.pylab.py</code></a> file. The essential call is to <code>shell.enable_matplotlib(gui)</code>, which is itself implemented in <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/interactiveshell.py#L3380-L3423\"><code>IPython.core.interactiveshell.InteractiveShell</code></a>, and does five things:</p>\n\n<ol>\n<li><strong>Select the &ldquo;backend&rdquo; given the choice of GUI event loop.</strong> This is done by calling <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L259-L299\"><code>IPython.core.pylabtools.find_gui_and_backend(gui)</code></a>. It encapsulates the logic to go\nfrom a GUI name, like <code>&quot;qt5&quot;</code> or <code>&quot;tk&quot;</code>, to a backend name, like <code>&quot;Qt5Agg&quot;</code> and  <code>&quot;TkAgg&quot;</code>.</li>\n<li><strong>Activate matplotlib for interactive use</strong> by calling <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L302-L323\"><code>IPython.core.pylabtools.activate_matplotlib(backend)</code></a>, which:\n\n<ol>\n<li>Activates the interactive mode with <code>matplotlib.interactive(True)</code>;</li>\n<li>Switches to the  new backend with <code>matplotlib.pyplot.switch_backend(backend)</code>;</li>\n<li>Replaces the <code>matplotlib.pyplot.draw_if_interactive</code> method with the same method, but wrapped by a <code>flag_calls</code> decorator, which adds a <code>called</code> flag to the method. That flag will be used by the new <code>%run</code> runner that&rsquo;s introduced below at point #5;</li>\n</ol></li>\n<li><strong>Configure inline figure support</strong> by calling <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L359-L415\"><code>IPython.core.pylabtools.configure_inline_support(shell, backend)</code></a>. This is where some very interesting stuff happens. It first checks that <code>InlineBackend</code> is actually importable from <a href=\"https://github.com/ipython/ipykernel/blob/v5.1.2/ipykernel/pylab/backend_inline.py\"><code>ipykernel.pylab.backend_inline</code></a>, otherwise it returns immediately. But if it&rsquo;s importable and the backend is <code>&quot;inline&quot;</code>, it:\n\n<ol>\n<li>Imports the <a href=\"https://github.com/ipython/ipykernel/blob/ae9ebd0da9cff1b9a5fd6e409c0de44892da9100/ipykernel/pylab/backend_inline.py#L100-L143\"><code>ipykernel.pylab.backend_inline.flush_figures</code></a> function, and register it as a callback for the <code>&quot;post_execute&quot;</code> event of the shell. As we&rsquo;ll see later, callbacks for <code>&quot;post_execute&quot;</code> are called after executing every cell;</li>\n<li>If the backend was <em>not</em> <code>&quot;inline&quot;</code>, it&rsquo;ll unregister the <code>flush_figures</code> callback;</li>\n</ol></li>\n<li><strong>Enable the GUI by calling <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/interactiveshell.py#L515-L521\"><code>shell.enable_gui(gui)</code></a>.</strong> This method is not implemented in the <code>IPython.core.interactiveshell.InteractiveShell</code> base class, but rather in <code>IPython.terminal.interactiveshell.TerminalInteractiveShell</code>. If a <code>gui</code> as specified, it gets the name of the <code>active_eventloop</code> and its corresponding <code>inputhook</code> function using <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/pt_inputhooks/__init__.py#L33-L49\"><code>IPython.terminal.pt_intputhooks.get_inputhook_name_and_func(gui)</code></a>. The <code>active_eventloop</code> is just a string, such as <code>'qt'</code>, but the <code>inputhook</code> is more interesting. It&rsquo;s the function to call to start that GUI toolkit&rsquo;s event loop. Let&rsquo;s dig further into <code>get_inputhook_name_and_func(gui)</code>. That function checks a few things, but it essentially:\n\n<ol>\n<li>Imports the correct <code>inputhook</code> function for the chosen GUI by importing it from <a href=\"https://github.com/ipython/ipython/tree/7.8.0/IPython/terminal/pt_inputhooks\"><code>IPython.terminal.pt_intputhooks.&lt;gui_mod&gt;</code></a>. For example, the Qt <code>inputhook</code> is imported from <a href=\"https://github.com/ipython/ipython/blob/7.8.0/IPython/terminal/pt_inputhooks/qt.py\"><code>IPython.terminal.pt_intputhooks.qt</code></a>.  Later on, when <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/pt_inputhooks/qt.py#L11-L53\"><code>inputhook</code> is executed for Qt</a>, it will:\n\n<ol>\n<li>Create a <a href=\"https://doc.qt.io/qt-5/qcoreapplication.html\"><code>QCoreApplication</code></a>;</li>\n<li>Create a <a href=\"https://doc.qt.io/qt-5/qeventloop.html\"><code>QEventLoop</code></a> for that application;</li>\n<li>Execute the event loop and register the right events to make sure the loop is shut down properly. The exact operations to start and stop the loop are slightly different for other GUI toolkits, like <code>tk</code>, <code>wx</code>, or <code>osx</code>,  but they all essentially do the same thing. At this point we&rsquo;re ready to go back up the stack to <code>enable_matplotlib</code> in <code>%matplotlib</code>;</li>\n</ol></li>\n</ol></li>\n<li><strong>Replace IPython&rsquo;s <code>default_runner</code> with the one defined in <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L145-L192\"><code>IPython.core.pylabtools.mpl_runner</code></a>.</strong> The <code>default_runner</code> is the function that executes code when using the <code>%run</code> magic. The <code>mpl_runner</code>:\n\n<ol>\n<li>Saves the <code>matplotlib.interactive</code> state, and disables it;</li>\n<li>Executes the file;</li>\n<li>Restores the <code>interactive</code> state;</li>\n<li>Makes the rendering call, if the user asked for it, by checking the <code>plt.draw_if_interactive.called</code> flag that was introduced at point #1.3 above.</li>\n</ol></li>\n</ol>\n\n<p>As for the other magic, <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/magics/basic.py#L468-L501\"><code>%gui</code></a>, it only executes a subset of what <code>%matplotlib</code> does. It only calls <code>shell.enable_gui(gui)</code>, which is point #4 above. This means that if your application requires interaction with a GUI&rsquo;s event loop, but doesn&rsquo;t require matplotlib, then it&rsquo;s sufficient to use <code>%gui</code>. For example, if you&rsquo;re writing applications using <a href=\"https://docs.enthought.com/traitsui/\">TraitsUI</a> or <a href=\"https://riverbankcomputing.com/software/pyqt/intro/\">PyQt</a>.</p>\n\n<h3 id=\"the-effect-of-calling-gui-and-matplotlib\">The Effect of Calling <code>%gui</code> and <code>%matplotlib</code></h3>\n\n<p>Let&rsquo;s start with the &ldquo;simplest&rdquo; one, <code>%gui</code>. If you execute it in a fresh IPython session, it&rsquo;ll only start the event loop. On macOS, the obvious effect of this is to start the Rocket icon.</p>\n\n<p><img src=\"https://alexchabot.micro.blog/uploads/2020/cac6643296.gif\" alt=\"Animation of the Python rocket icon starting because of a call to `%gui`.\" /></p>\n\n<p>At that point, if you import matplotlib and call <code>plt.plot()</code>, no figure will appear unless you either call <code>plt.show()</code> afterwards, or manually enable interactive mode with <code>plt.interactive(True)</code>.</p>\n\n<p>On the other hand, if you start your session by calling <code>%matplotlib</code>, it&rsquo;ll start the Rocket <em>and</em> activate matplotlib&rsquo;s interactive mode. This way, if you call <code>plt.plot()</code>, your figure will show up immediately and your session will not be blocked.</p>\n\n<h3 id=\"using-run\">Using <code>%run</code></h3>\n\n<p>If you call <code>%run my_script.py</code>  <em>after</em> calling <code>%matplotlib</code>, <code>my_script.py</code> will be executed with the <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L145-L192\"><code>mpl_runner</code></a> introduced above at point #5.</p>\n\n<h3 id=\"executing-a-jupyter-notebok-cell-when-using-the-inline-backend\">Executing a Jupyter Notebok Cell When Using the <code>&quot;inline&quot;</code> Backend</h3>\n\n<p>In the terminal the <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/interactiveshell.py#L471-L489\"><code>IPython.terminal.interactiveshell.TerminalInteractiveShell.interact()</code></a> method is where all the fun stuff happens. It prompts you for code, checks if you want to exit, and then executes the cell with <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/interactiveshell.py#L2828-L2860\"><code>InteractiveShell.run_cell(code)</code></a> and <em>then</em> trigger the <code>&quot;post_execute&quot;</code> event for which we&rsquo;ve registered the <code>ipykernel.pylab.backend_inline.flush_figures</code> callback. As you might have noticed, the <code>flush_figures</code> function comes from ipykernel, and not from IPython. It tries to return all the figures produced by the cell as PNG of SVG, displays them on screen using IPython&rsquo;s <a href=\"https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/display.py#L131-L315\"><code>display</code></a> function, and then closes all the figures, so matplotlib doesn&rsquo;t end up littered will all the figures we&rsquo;ve ever plotted.</p>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>To sum it up, use <code>%matplotlib</code> if you want interactive plotting with matplotlib. If you&rsquo;re only interested in the GUI&rsquo;s event loop, <code>%gui &lt;backend&gt;</code> is sufficient._ Although as far as I understand, there&rsquo;s nothing very wrong with using <code>%matplotlib</code> all the time.</p>\n<div class=\"footnotes\">\n\n<hr />\n\n<ol>\n<li id=\"fn:matlab\">Basically, no namespaces, and direct access to functions like <code>plot</code>, <code>figure</code>, <code>subplot</code>, etc.\n <a class=\"footnote-return\" href=\"#fnref:matlab\"><sup>[return]</sup></a></li>\n<li id=\"fn:pylab\">The earliest commit I found for the IPyhon project was on July 6, 2005 by Fernando Perez, 7 months after the name change. Its Git hash is <a href=\"https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799\">6f629fcc23ba63342548f61cc7307eeef4f55799</a>. But the earliest mention is an <a href=\"https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799#diff-f26cfac88f7acfeb30807d9a98cff722R955\">August 2004 entry in the ChangeLog</a>: &ldquo;ipythonrc-pylab: Add matplotlib support,&rdquo; which is <em>before</em> the offical rename in matplotlib.\n <a class=\"footnote-return\" href=\"#fnref:pylab\"><sup>[return]</sup></a></li>\n</ol>\n</div>\n",
				"content_text": "_TLDR; Use `%matplotlib` if you want interactive plotting with matplotlib. If you're only interested in the GUI's event loop, `%gui <backend>` is sufficient._\n\nI never really understood the difference between `%gui` and `%matplotlib` in IPython. One of my colleagues at Enthought once told me that at some point in his career, he more or less stopped reading documentation and instead went straight to the code. That's what I did here. But let's do a bit of history first.\n\nIn the \"beginning\", there was `pylab`. It (still) is a module of matplotlib and was a flag to IPython designed to [facilitate the adoption of Python as a numerical computing language](https://web.archive.org/web/20130609145008/https://wiki.scipy.org/PyLab) by providing a MATLAB-like syntax.[^matlab] The reference was so explicit that before being renamed to `pylab` on [Dec 9, 2004](https://github.com/matplotlib/matplotlib/commit/f210efb0aff44a108239496c877aefe6b7cab2e5), the module was called `matplotlib.matlab`. IPython adopted the rename on the [same day](https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799#diff-f26cfac88f7acfeb30807d9a98cff722R616).[^pylab] With the `‑‑pylab` flag or the `%pylab` magic function, IPython would set up matplotlib for interactive plotting and executed a number of imports from IPython, NumPy and matplotlib. Even thought it helped a few people transition to Python (including myself), it turned out to be a pretty bad idea from a usability point of view. Matthias Bussonnier wrote up a good list of the many things that are wrong with it in \"[No Pylab Thanks](https://matthiasbussonnier.com/posts/10-No-PyLab-Thanks.html).\"\n\n[^matlab]: Basically, no namespaces, and direct access to functions like `plot`, `figure`, `subplot`, etc.\n\n[^pylab]: The earliest commit I found for the IPyhon project was on July 6, 2005 by Fernando Perez, 7 months after the name change. Its Git hash is [6f629fcc23ba63342548f61cc7307eeef4f55799](https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799). But the earliest mention is an [August 2004 entry in the ChangeLog](https://github.com/ipython/ipython/commit/6f629fcc23ba63342548f61cc7307eeef4f55799#diff-f26cfac88f7acfeb30807d9a98cff722R955): \"ipythonrc-pylab: Add matplotlib support,\" which is _before_ the offical rename in matplotlib.\n\nFor the 1.0.0 release of IPython in August 2013, all mentions of `%pylab` were removed from the examples (in a [July 18, 2013](https://github.com/ipython/ipython/pull/3683) commit) and were replaced by calls to the `%matplotlib` magic function, which only enables interactive plotting but does not perform any imports. The `%matplotlib` function had already been introduced in a [2013 refactoring](https://github.com/ipython/ipython/commit/7ae1fe4225c0c11ccdd6eec758c23aa81ac88654) to separate the interatice plotting from the imports. The `%gui` magic command had already been [introduced](https://github.com/ipython/ipython/commit/a38045e05d22fee06a56ae884856ed689523ff7b) in 2009 by Brian Granger to \"manage the events loops\" (hint hint).\n\nNow we know that the (my) confusion with `%gui` and `%matplotlib` started in 2013. \n\nThis analysis refers to [IPython 7.8.0](https://github.com/ipython/ipython/tree/7.8.0) and [ipykernel 5.1.2](https://github.com/ipython/ipykernel/tree/v5.1.2).\n\nOur entry point will be the `%matplotlib` magic command. Its source code is in the [`IPython.core.pylab.py`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/magics/pylab.py#L46-L100) file. The essential call is to `shell.enable_matplotlib(gui)`, which is itself implemented in [`IPython.core.interactiveshell.InteractiveShell`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/interactiveshell.py#L3380-L3423), and does five things:\n\n1. **Select the \"backend\" given the choice of GUI event loop.** This is done by calling [`IPython.core.pylabtools.find_gui_and_backend(gui)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L259-L299). It encapsulates the logic to go\nfrom a GUI name, like `\"qt5\"` or `\"tk\"`, to a backend name, like `\"Qt5Agg\"` and  `\"TkAgg\"`.\n2. **Activate matplotlib for interactive use** by calling [`IPython.core.pylabtools.activate_matplotlib(backend)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L302-L323), which:\n\t 1. Activates the interactive mode with `matplotlib.interactive(True)`; \n\t 2. Switches to the  new backend with `matplotlib.pyplot.switch_backend(backend)`;\n\t 3. Replaces the `matplotlib.pyplot.draw_if_interactive` method with the same method, but wrapped by a `flag_calls` decorator, which adds a `called` flag to the method. That flag will be used by the new `%run` runner that's introduced below at point #5;\n3. **Configure inline figure support** by calling [`IPython.core.pylabtools.configure_inline_support(shell, backend)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L359-L415). This is where some very interesting stuff happens. It first checks that `InlineBackend` is actually importable from [`ipykernel.pylab.backend_inline`](https://github.com/ipython/ipykernel/blob/v5.1.2/ipykernel/pylab/backend_inline.py), otherwise it returns immediately. But if it's importable and the backend is `\"inline\"`, it:\n\t1. Imports the [`ipykernel.pylab.backend_inline.flush_figures`](https://github.com/ipython/ipykernel/blob/ae9ebd0da9cff1b9a5fd6e409c0de44892da9100/ipykernel/pylab/backend_inline.py#L100-L143) function, and register it as a callback for the `\"post_execute\"` event of the shell. As we'll see later, callbacks for `\"post_execute\"` are called after executing every cell;\n\t2. If the backend was _not_ `\"inline\"`, it'll unregister the `flush_figures` callback;\n4. **Enable the GUI by calling [`shell.enable_gui(gui)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/interactiveshell.py#L515-L521).** This method is not implemented in the `IPython.core.interactiveshell.InteractiveShell` base class, but rather in `IPython.terminal.interactiveshell.TerminalInteractiveShell`. If a `gui` as specified, it gets the name of the `active_eventloop` and its corresponding `inputhook` function using [`IPython.terminal.pt_intputhooks.get_inputhook_name_and_func(gui)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/pt_inputhooks/__init__.py#L33-L49). The `active_eventloop` is just a string, such as `'qt'`, but the `inputhook` is more interesting. It's the function to call to start that GUI toolkit's event loop. Let's dig further into `get_inputhook_name_and_func(gui)`. That function checks a few things, but it essentially:\n\t1. Imports the correct `inputhook` function for the chosen GUI by importing it from [`IPython.terminal.pt_intputhooks.<gui_mod>`](https://github.com/ipython/ipython/tree/7.8.0/IPython/terminal/pt_inputhooks). For example, the Qt `inputhook` is imported from [`IPython.terminal.pt_intputhooks.qt`](https://github.com/ipython/ipython/blob/7.8.0/IPython/terminal/pt_inputhooks/qt.py).  Later on, when [`inputhook` is executed for Qt](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/pt_inputhooks/qt.py#L11-L53), it will:\n\t\t1. Create a [`QCoreApplication`](https://doc.qt.io/qt-5/qcoreapplication.html);\n\t\t2. Create a [`QEventLoop`](https://doc.qt.io/qt-5/qeventloop.html) for that application;\n\t\t3. Execute the event loop and register the right events to make sure the loop is shut down properly. The exact operations to start and stop the loop are slightly different for other GUI toolkits, like `tk`, `wx`, or `osx`,  but they all essentially do the same thing. At this point we're ready to go back up the stack to `enable_matplotlib` in `%matplotlib`;\n5. **Replace IPython's `default_runner` with the one defined in [`IPython.core.pylabtools.mpl_runner`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L145-L192).** The `default_runner` is the function that executes code when using the `%run` magic. The `mpl_runner`:\n\t1. Saves the `matplotlib.interactive` state, and disables it;\n\t2. Executes the file;\n\t3. Restores the `interactive` state;\n\t4. Makes the rendering call, if the user asked for it, by checking the `plt.draw_if_interactive.called` flag that was introduced at point #1.3 above.\n\nAs for the other magic, [`%gui`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/magics/basic.py#L468-L501), it only executes a subset of what `%matplotlib` does. It only calls `shell.enable_gui(gui)`, which is point #4 above. This means that if your application requires interaction with a GUI's event loop, but doesn't require matplotlib, then it's sufficient to use `%gui`. For example, if you're writing applications using [TraitsUI](https://docs.enthought.com/traitsui/) or [PyQt](https://riverbankcomputing.com/software/pyqt/intro/).\n\n### The Effect of Calling `%gui` and `%matplotlib`\n\nLet's start with the \"simplest\" one, `%gui`. If you execute it in a fresh IPython session, it'll only start the event loop. On macOS, the obvious effect of this is to start the Rocket icon.\n\n![Animation of the Python rocket icon starting because of a call to `%gui`.](https://alexchabot.micro.blog/uploads/2020/cac6643296.gif)\n\nAt that point, if you import matplotlib and call `plt.plot()`, no figure will appear unless you either call `plt.show()` afterwards, or manually enable interactive mode with `plt.interactive(True)`.\n\nOn the other hand, if you start your session by calling `%matplotlib`, it'll start the Rocket _and_ activate matplotlib's interactive mode. This way, if you call `plt.plot()`, your figure will show up immediately and your session will not be blocked.\n\n### Using `%run`\n\nIf you call `%run my_script.py`  _after_ calling `%matplotlib`, `my_script.py` will be executed with the [`mpl_runner`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/pylabtools.py#L145-L192) introduced above at point #5.\n\n### Executing a Jupyter Notebok Cell When Using the `\"inline\"` Backend\n\nIn the terminal the [`IPython.terminal.interactiveshell.TerminalInteractiveShell.interact()`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/terminal/interactiveshell.py#L471-L489) method is where all the fun stuff happens. It prompts you for code, checks if you want to exit, and then executes the cell with [`InteractiveShell.run_cell(code)`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/interactiveshell.py#L2828-L2860) and _then_ trigger the `\"post_execute\"` event for which we've registered the `ipykernel.pylab.backend_inline.flush_figures` callback. As you might have noticed, the `flush_figures` function comes from ipykernel, and not from IPython. It tries to return all the figures produced by the cell as PNG of SVG, displays them on screen using IPython's [`display`](https://github.com/ipython/ipython/blob/c233c25ab8b724646b9bdc407214c3bb7294683c/IPython/core/display.py#L131-L315) function, and then closes all the figures, so matplotlib doesn't end up littered will all the figures we've ever plotted.\n\n\n### Conclusion\n\nTo sum it up, use `%matplotlib` if you want interactive plotting with matplotlib. If you're only interested in the GUI's event loop, `%gui <backend>` is sufficient._ Although as far as I understand, there's nothing very wrong with using `%matplotlib` all the time.\n",
				"date_published": "2020-05-30T19:00:00-05:00",
				"url": "https://alexchabot.net/2020/05/30/what-does-matplotlib.html",
				"tags": ["python"]
			},
			{
				"id": "http://alexchabot.micro.blog/2018/07/14/manually-merging-day.html",
				"title": "Manually Merging Day One Journals",
				"content_html": "<p>My first Day One entry is from January 24, 2012. I used it often to take\nnote about what I was doing during my PhD with the <code>#wwid</code> tag (what was I\ndoing, an idea from <a href=\"http://brettterpstra.com/\">Brett Terpstra</a>, I think), and\nsometimes to clarify some thoughts.</p>\n\n<p>When Day One went The Way of the Subscription, I didn&rsquo;t bother too much\nbecause Dropbox sync still worked. Until it didn&rsquo;t. I somehow didn&rsquo;t realized\nit and kept adding entries to both the iOS <em>and</em> the macOS versions. Not\ngood. It&rsquo;s been on my to do list for a while to find a way to merge the two\njournals. I could probably subscribe to the Day One sync service and have it\nfigure out the merging but I didn&rsquo;t want to subscribe just for that.</p>\n\n<p>I learned somewhere that Day One 2 could export journals as a folder of photos\nand a JSON file. I figure I could probably write a script to do the merging.\nSo I downloaded Day One 2 on my iPhone and Mac, imported my Day One Classic\njournals, exported them as JSON to a folder on my Mac, and unzipped them. I\nalso created a <code>merged/</code> folder where to put the merged journal. The hierarchy\nlooks like this:</p>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sh\" data-lang=\"sh\">$ tree -L <span style=\"color:#40a070\">2</span>\n.\n├── Journal-JSON-ios/\n│   ├── Journal.json\n│   └── photos/\n├── Journal-JSON-ios.zip\n├── Journal-JSON-mac/\n│   ├── Journal.json\n│   └── photos/\n├── Journal-JSON-mac.zip\n├── merge_journals.py\n└── merged/</code></pre></div>\n<p>I first copied the photo folder from <code>Journal-JSON-ios/</code> to <code>merged/</code>\nand the photos from <code>Journal-JSON-mac/photos/</code>. I was pretty confident\nthat I would end up with the union of all the photos because Day One uses\n<a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\">UUIDs</a> to\nidentify each photo. The <code>-n</code> option to <code>cp</code> prevents overwriting files.</p>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sh\" data-lang=\"sh\">$ cp -r Journal-JSON-ios/photos merged/\n$ cp -n Journal-JSON-mac/photos merged/photos/</code></pre></div>\n<p>I then ran the <code>merge_journals.py</code> script (below) to do a similar merge of the\nentries, based on the UUIDs. The merging happens by building a dictionary with\nUUID of each entry as the key and the entry itself as the value. It&rsquo;s two\nloops over the iOS and the macOS entries. Entries with the same UUID should\nhave the same contents, unless I&rsquo;ve edited some metadata on one platform but\nnot the other. I&rsquo;m not too worried about that.</p>\n\n<p>The output dictionary will be written to the <code>Journal.json</code> file. The entries\nare sorted chronologically because that&rsquo;s how it was in the exported journal\nfiles, but I doubt it matters.</p>\n\n<p>The <code>output</code> dictionary is written to disk without enforcing the conversion to\nASCII since the exported journals are encoded using UTF-8. The indent is there\nto make the output more readable and diff-able with the exported journals.</p>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-python\" data-lang=\"python\"><span style=\"color:#007020;font-weight:bold\">import</span> <span style=\"color:#0e84b5;font-weight:bold\">json</span>\n\n<span style=\"color:#007020;font-weight:bold\">with</span> <span style=\"color:#007020\">open</span>(<span style=\"color:#4070a0\">&#39;./Journal-JSON-ios/Journal.json&#39;</span>) <span style=\"color:#007020;font-weight:bold\">as</span> f:\n    ios <span style=\"color:#666\">=</span> json<span style=\"color:#666\">.</span>load(f)\n<span style=\"color:#007020;font-weight:bold\">with</span> <span style=\"color:#007020\">open</span>(<span style=\"color:#4070a0\">&#39;./Journal-JSON-mac/Journal.json&#39;</span>) <span style=\"color:#007020;font-weight:bold\">as</span> f:\n    mac <span style=\"color:#666\">=</span> json<span style=\"color:#666\">.</span>load(f)\n\n<span style=\"color:#60a0b0;font-style:italic\"># Extract and merge UUIDs</span>\nuniques <span style=\"color:#666\">=</span> {entry[<span style=\"color:#4070a0\">&#39;uuid&#39;</span>]: entry <span style=\"color:#007020;font-weight:bold\">for</span> entry <span style=\"color:#007020;font-weight:bold\">in</span> ios[<span style=\"color:#4070a0\">&#39;entries&#39;</span>]}\n<span style=\"color:#007020;font-weight:bold\">for</span> entry <span style=\"color:#007020;font-weight:bold\">in</span> mac[<span style=\"color:#4070a0\">&#39;entries&#39;</span>]:\n    uniques[entry[<span style=\"color:#4070a0\">&#39;uuid&#39;</span>]] <span style=\"color:#666\">=</span> entry\n\n<span style=\"color:#60a0b0;font-style:italic\"># Create the output JSON data structure</span>\noutput <span style=\"color:#666\">=</span> {}\noutput[<span style=\"color:#4070a0\">&#39;metadata&#39;</span>] <span style=\"color:#666\">=</span> mac[<span style=\"color:#4070a0\">&#39;metadata&#39;</span>]\noutput[<span style=\"color:#4070a0\">&#39;entries&#39;</span>] <span style=\"color:#666\">=</span> <span style=\"color:#007020\">list</span>(uniques<span style=\"color:#666\">.</span>values())\n<span style=\"color:#60a0b0;font-style:italic\"># I&#39;m not sure it matters, but Day One usually exports the entries</span>\n<span style=\"color:#60a0b0;font-style:italic\"># in chronological order</span>\noutput[<span style=\"color:#4070a0\">&#39;entries&#39;</span>]<span style=\"color:#666\">.</span>sort(key<span style=\"color:#666\">=</span><span style=\"color:#007020;font-weight:bold\">lambda</span> e: e[<span style=\"color:#4070a0\">&#39;creationDate&#39;</span>])\n\n<span style=\"color:#60a0b0;font-style:italic\"># ensure_ascii print unicode characters as-is.</span>\n<span style=\"color:#007020;font-weight:bold\">with</span> <span style=\"color:#007020\">open</span>(<span style=\"color:#4070a0\">&#39;merged/Journal.json&#39;</span>, <span style=\"color:#4070a0\">&#39;w&#39;</span>, encoding<span style=\"color:#666\">=</span><span style=\"color:#4070a0\">&#39;utf-8&#39;</span>) <span style=\"color:#007020;font-weight:bold\">as</span> f:\n    json<span style=\"color:#666\">.</span>dump(output, f, indent<span style=\"color:#666\">=</span>True, ensure_ascii<span style=\"color:#666\">=</span>False)</code></pre></div>\n<p>The last step is to zip the journal and photos together, which tripped me up\na few times. The <code>Journal.json</code> and the <code>photos/</code> folder must be at the top\nlevel of the archive, so I zip the file from within the <code>merged/</code> folder and\nthen move it back up one level.</p>\n<div class=\"highlight\"><pre style=\"background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-sh\" data-lang=\"sh\">$ <span style=\"color:#007020\">cd</span> merged\n$ zip -r merged.zip *\n$ mv merged.zip ..</code></pre></div>\n<p>I could then import <code>merged.zip</code> in Day One, which created a new Journal, and\ndelete the old one.</p>\n\n<p>I guess I could somewhat automate this to roll my own, DIY, sync between\nversions of Day One, but I&rsquo;d rather pay them money once I decide to use Day\nOne frequently again. Still, I really appreciate that the Day One developers\npicked formats that could be manipulated so easily.</p>\n",
				"content_text": "\nMy first Day One entry is from January 24, 2012. I used it often to take\nnote about what I was doing during my PhD with the `#wwid` tag (what was I\ndoing, an idea from [Brett Terpstra](http://brettterpstra.com/), I think), and\nsometimes to clarify some thoughts.\n\nWhen Day One went The Way of the Subscription, I didn't bother too much\nbecause Dropbox sync still worked. Until it didn't. I somehow didn't realized\nit and kept adding entries to both the iOS _and_ the macOS versions. Not\ngood. It's been on my to do list for a while to find a way to merge the two\njournals. I could probably subscribe to the Day One sync service and have it\nfigure out the merging but I didn't want to subscribe just for that.\n\nI learned somewhere that Day One 2 could export journals as a folder of photos\nand a JSON file. I figure I could probably write a script to do the merging.\nSo I downloaded Day One 2 on my iPhone and Mac, imported my Day One Classic\njournals, exported them as JSON to a folder on my Mac, and unzipped them. I\nalso created a `merged/` folder where to put the merged journal. The hierarchy\nlooks like this:\n\n```sh\n$ tree -L 2\n.\n├── Journal-JSON-ios/\n│   ├── Journal.json\n│   └── photos/\n├── Journal-JSON-ios.zip\n├── Journal-JSON-mac/\n│   ├── Journal.json\n│   └── photos/\n├── Journal-JSON-mac.zip\n├── merge_journals.py\n└── merged/\n```\n\nI first copied the photo folder from `Journal-JSON-ios/` to `merged/`\nand the photos from `Journal-JSON-mac/photos/`. I was pretty confident\nthat I would end up with the union of all the photos because Day One uses\n[UUIDs](https://en.wikipedia.org/wiki/Universally_unique_identifier) to\nidentify each photo. The `-n` option to `cp` prevents overwriting files.\n\n```sh\n$ cp -r Journal-JSON-ios/photos merged/\n$ cp -n Journal-JSON-mac/photos merged/photos/\n```\n\nI then ran the `merge_journals.py` script (below) to do a similar merge of the\nentries, based on the UUIDs. The merging happens by building a dictionary with\nUUID of each entry as the key and the entry itself as the value. It's two\nloops over the iOS and the macOS entries. Entries with the same UUID should\nhave the same contents, unless I've edited some metadata on one platform but\nnot the other. I'm not too worried about that.\n\nThe output dictionary will be written to the `Journal.json` file. The entries\nare sorted chronologically because that's how it was in the exported journal\nfiles, but I doubt it matters.\n\nThe `output` dictionary is written to disk without enforcing the conversion to\nASCII since the exported journals are encoded using UTF-8. The indent is there\nto make the output more readable and diff-able with the exported journals.\n\n\n```python\nimport json\n\nwith open('./Journal-JSON-ios/Journal.json') as f:\n    ios = json.load(f)\nwith open('./Journal-JSON-mac/Journal.json') as f:\n    mac = json.load(f)\n\n# Extract and merge UUIDs\nuniques = {entry['uuid']: entry for entry in ios['entries']}\nfor entry in mac['entries']:\n    uniques[entry['uuid']] = entry\n\n# Create the output JSON data structure\noutput = {}\noutput['metadata'] = mac['metadata']\noutput['entries'] = list(uniques.values())\n# I'm not sure it matters, but Day One usually exports the entries\n# in chronological order\noutput['entries'].sort(key=lambda e: e['creationDate'])\n\n# ensure_ascii print unicode characters as-is.\nwith open('merged/Journal.json', 'w', encoding='utf-8') as f:\n    json.dump(output, f, indent=True, ensure_ascii=False)\n```\n\nThe last step is to zip the journal and photos together, which tripped me up\na few times. The `Journal.json` and the `photos/` folder must be at the top\nlevel of the archive, so I zip the file from within the `merged/` folder and\nthen move it back up one level.\n\n```sh\n$ cd merged\n$ zip -r merged.zip *\n$ mv merged.zip ..\n```\n\nI could then import `merged.zip` in Day One, which created a new Journal, and\ndelete the old one.\n\n\nI guess I could somewhat automate this to roll my own, DIY, sync between\nversions of Day One, but I'd rather pay them money once I decide to use Day\nOne frequently again. Still, I really appreciate that the Day One developers\npicked formats that could be manipulated so easily.\n",
				"date_published": "2018-07-13T19:00:00-05:00",
				"url": "https://alexchabot.net/2018/07/13/manually-merging-day.html",
				"tags": ["python"]
			},
			{
				"id": "http://alexchabot.micro.blog/2017/05/16/by-far-the.html",
				
				"content_html": "<p>By far the best thing I&rsquo;ve seen at Disney World so far.</p>\n\n<p><img src=\"uploads/2021/6494c8f7e0.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "By far the best thing I've seen at Disney World so far.\n\n<img src=\"uploads/2021/6494c8f7e0.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2017-05-16T19:37:19-05:00",
				"url": "https://alexchabot.net/2017/05/16/by-far-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/11/24/bread.html",
				
				"content_html": "<p>Bread #2.</p>\n\n<p><img src=\"uploads/2021/dda449dd45.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Bread #2.\n\n<img src=\"uploads/2021/dda449dd45.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-11-24T12:28:20-05:00",
				"url": "https://alexchabot.net/2016/11/24/bread.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/11/18/192028.html",
				
				"content_html": "<p><img src=\"uploads/2021/d32929c59d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/d32929c59d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-11-18T20:20:28-05:00",
				"url": "https://alexchabot.net/2016/11/18/192028.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/10/06/181350.html",
				
				"content_html": "<p><img src=\"uploads/2021/d44eb3edc5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/d44eb3edc5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-10-06T19:13:50-05:00",
				"url": "https://alexchabot.net/2016/10/06/181350.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/09/12/192108.html",
				
				"content_html": "<p><img src=\"uploads/2021/99c820c993.jpg\" width=\"500\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/99c820c993.jpg\" width=\"500\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-09-12T20:21:08-05:00",
				"url": "https://alexchabot.net/2016/09/12/192108.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/08/27/the-modern-fort.html",
				
				"content_html": "<p>The Modern, Fort Worth.</p>\n\n<p><img src=\"uploads/2021/d66f8d8424.jpg\" width=\"480\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The Modern, Fort Worth.\n\n<img src=\"uploads/2021/d66f8d8424.jpg\" width=\"480\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-08-27T16:33:34-05:00",
				"url": "https://alexchabot.net/2016/08/27/the-modern-fort.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/08/06/the-weight-of.html",
				
				"content_html": "<p>The weight of the world.</p>\n\n<p><img src=\"uploads/2021/2b5d041186.jpg\" width=\"480\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The weight of the world.\n\n<img src=\"uploads/2021/2b5d041186.jpg\" width=\"480\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-08-06T21:50:35-05:00",
				"url": "https://alexchabot.net/2016/08/06/the-weight-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/07/30/by-giacometti.html",
				
				"content_html": "<p>By Giacometti.</p>\n\n<p><img src=\"uploads/2021/d72f435f09.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "By Giacometti.\n\n<img src=\"uploads/2021/d72f435f09.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-07-30T16:07:42-05:00",
				"url": "https://alexchabot.net/2016/07/30/by-giacometti.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/06/21/theres-sometimes-action.html",
				
				"content_html": "<p>There&rsquo;s sometimes action out of my window.</p>\n\n<p><img src=\"uploads/2021/18dce3e389.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "There's sometimes action out of my window.\n\n<img src=\"uploads/2021/18dce3e389.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2016-06-21T06:49:48-05:00",
				"url": "https://alexchabot.net/2016/06/21/theres-sometimes-action.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2016/06/20/got-a-new.html",
				
				"content_html": "<p>Got a new room, with view on the East River. Much upgrade.</p>\n\n<p><img src=\"uploads/2021/95852f7a10.jpg\" width=\"600\" height=\"314\" alt=\"\" /></p>\n",
				"content_text": "Got a new room, with view on the East River. Much upgrade.\n\n<img src=\"uploads/2021/95852f7a10.jpg\" width=\"600\" height=\"314\" alt=\"\" />\n",
				"date_published": "2016-06-20T11:03:36-05:00",
				"url": "https://alexchabot.net/2016/06/20/got-a-new.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/11/24/wind-tunnel-model.html",
				
				"content_html": "<p>Wind tunnel model. Most beautiful item at the Musée des Confluence.</p>\n\n<p><img src=\"uploads/2021/bdcd7f013b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Wind tunnel model. Most beautiful item at the Musée des Confluence.\n\n<img src=\"uploads/2021/bdcd7f013b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-11-24T09:39:04-05:00",
				"url": "https://alexchabot.net/2015/11/24/wind-tunnel-model.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/11/15/anna-going-a.html",
				
				"content_html": "<p>Anna going a bit overboard: crunchy speculoos, crème fraîche, and… maple syrup.</p>\n\n<p><img src=\"uploads/2021/0ec2da3745.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Anna going a bit overboard: crunchy speculoos, crème fraîche, and… maple syrup.\n\n<img src=\"uploads/2021/0ec2da3745.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-11-15T07:05:20-05:00",
				"url": "https://alexchabot.net/2015/11/15/anna-going-a.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/11/07/party-prep-marshmallows.html",
				
				"content_html": "<p>Party prep (Marshmallows + Jello powder)</p>\n\n<p><img src=\"uploads/2021/01d1d8354b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Party prep (Marshmallows + Jello powder)\n\n<img src=\"uploads/2021/01d1d8354b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-11-07T07:04:47-05:00",
				"url": "https://alexchabot.net/2015/11/07/party-prep-marshmallows.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/10/31/place-des-moulins.html",
				
				"content_html": "<p>Place des moulins, Marseille.</p>\n\n<p><img src=\"uploads/2021/892c9ee362.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Place des moulins, Marseille.\n\n<img src=\"uploads/2021/892c9ee362.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-10-31T17:37:50-05:00",
				"url": "https://alexchabot.net/2015/10/31/place-des-moulins.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/10/31/the-cloud-of.html",
				
				"content_html": "<p>&ldquo;The Cloud&rdquo; of Lyon&rsquo;s Musée des Confluences, seen from the roof.</p>\n\n<p><img src=\"uploads/2021/eedf58a17b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\"The Cloud\" of Lyon's Musée des Confluences, seen from the roof.\n\n<img src=\"uploads/2021/eedf58a17b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-10-31T17:32:41-05:00",
				"url": "https://alexchabot.net/2015/10/31/the-cloud-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/10/24/a-holiday-sight.html",
				
				"content_html": "<p>A holiday sight.</p>\n\n<p><img src=\"uploads/2021/3a097fc34c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "A holiday sight.\n\n<img src=\"uploads/2021/3a097fc34c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-10-24T04:17:47-05:00",
				"url": "https://alexchabot.net/2015/10/24/a-holiday-sight.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/08/28/ball-and-bridge.html",
				
				"content_html": "<p>Ball and bridge.</p>\n\n<p><img src=\"uploads/2021/050b908a06.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ball and bridge.\n\n<img src=\"uploads/2021/050b908a06.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-08-28T06:35:31-05:00",
				"url": "https://alexchabot.net/2015/08/28/ball-and-bridge.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/07/07/at-copenhagen-street.html",
				
				"content_html": "<p>At Copenhagen Street Food. (Yes, here, street food is <em>a</em> place.)</p>\n\n<p><img src=\"uploads/2021/03df82c09e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "At Copenhagen Street Food. (Yes, here, street food is *a* place.)\n\n<img src=\"uploads/2021/03df82c09e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-07-07T14:47:36-05:00",
				"url": "https://alexchabot.net/2015/07/07/at-copenhagen-street.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/05/30/octohook.html",
				
				"content_html": "<p>Octohook.</p>\n\n<p><img src=\"uploads/2021/0af1f4d350.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Octohook.\n\n<img src=\"uploads/2021/0af1f4d350.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-05-30T23:52:07-05:00",
				"url": "https://alexchabot.net/2015/05/30/octohook.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/05/24/making-spruce-beer.html",
				
				"content_html": "<p>Making spruce beer, attempt #2.</p>\n\n<p><img src=\"uploads/2021/e8c04d5cfb.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Making spruce beer, attempt #2.\n\n<img src=\"uploads/2021/e8c04d5cfb.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-05-24T11:47:53-05:00",
				"url": "https://alexchabot.net/2015/05/24/making-spruce-beer.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2015/04/03/slovenianitalian-rainy-day.html",
				
				"content_html": "<p>Slovenian/Italian &ldquo;rainy day&rdquo;. Imagine how nice it is when it&rsquo;s sunny.</p>\n\n<p><img src=\"uploads/2021/1be72d8cf3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Slovenian/Italian \"rainy day\". Imagine how nice it is when it's sunny.\n\n<img src=\"uploads/2021/1be72d8cf3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2015-04-03T08:45:20-05:00",
				"url": "https://alexchabot.net/2015/04/03/slovenianitalian-rainy-day.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2014/06/17/new-carlsbergs-cellars.html",
				
				"content_html": "<p>&ldquo;New&rdquo; Carlsberg&rsquo;s cellars.</p>\n\n<p><img src=\"uploads/2021/fbf2e30fad.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\"New\" Carlsberg's cellars.\n\n<img src=\"uploads/2021/fbf2e30fad.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2014-06-17T09:13:22-05:00",
				"url": "https://alexchabot.net/2014/06/17/new-carlsbergs-cellars.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2014/06/01/140323.html",
				
				"content_html": "<p><img src=\"uploads/2021/067c1dcbf4.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/067c1dcbf4.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2014-06-01T15:03:23-05:00",
				"url": "https://alexchabot.net/2014/06/01/140323.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2014/01/28/ja-tak.html",
				
				"content_html": "<p>Ja tak.</p>\n\n<p><img src=\"uploads/2021/cff2846f72.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ja tak.\n\n<img src=\"uploads/2021/cff2846f72.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2014-01-28T09:34:25-05:00",
				"url": "https://alexchabot.net/2014/01/28/ja-tak.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/08/28/just-before-nyborg.html",
				
				"content_html": "<p>Just before Nyborg.</p>\n\n<p><img src=\"uploads/2021/12476e75b3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Just before Nyborg.\n\n<img src=\"uploads/2021/12476e75b3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-08-28T02:20:54-05:00",
				"url": "https://alexchabot.net/2013/08/28/just-before-nyborg.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/08/25/just-because-its.html",
				
				"content_html": "<p>Just because it&rsquo;s blue. Just because it&rsquo;s green.</p>\n\n<p><img src=\"uploads/2021/76a35a020b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Just because it's blue. Just because it's green.\n\n<img src=\"uploads/2021/76a35a020b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-08-25T12:19:42-05:00",
				"url": "https://alexchabot.net/2013/08/25/just-because-its.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/08/25/101417.html",
				
				"content_html": "<p><img src=\"uploads/2021/751ae06a6c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/751ae06a6c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-08-25T11:14:17-05:00",
				"url": "https://alexchabot.net/2013/08/25/101417.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/08/04/wayne-siegel-performing.html",
				
				"content_html": "<p>Wayne Siegel performing next to an Alexander Calder mobile.</p>\n\n<p><img src=\"uploads/2021/86082a74e0.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Wayne Siegel performing next to an Alexander Calder mobile.\n\n<img src=\"uploads/2021/86082a74e0.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-08-04T07:33:49-05:00",
				"url": "https://alexchabot.net/2013/08/04/wayne-siegel-performing.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/07/22/chapter-one-berlin.html",
				
				"content_html": "<p>Chapter One, Berlin.</p>\n\n<p><img src=\"uploads/2021/5e67601c09.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Chapter One, Berlin.\n\n<img src=\"uploads/2021/5e67601c09.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-07-22T06:55:04-05:00",
				"url": "https://alexchabot.net/2013/07/22/chapter-one-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/07/05/old-fashioned-with.html",
				
				"content_html": "<p>Old Fashioned with Bitter Truth Old Time bitters. Chilled with a really cool spherical ice cube!</p>\n\n<p><img src=\"uploads/2021/0a7977a227.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Old Fashioned with Bitter Truth Old Time bitters. Chilled with a really cool spherical ice cube!\n\n<img src=\"uploads/2021/0a7977a227.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-07-05T15:36:39-05:00",
				"url": "https://alexchabot.net/2013/07/05/old-fashioned-with.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/07/03/the-perfect-personal.html",
				
				"content_html": "<p>The perfect personal hygiene kit.</p>\n\n<p><img src=\"uploads/2021/80c7456f08.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The perfect personal hygiene kit. \n\n<img src=\"uploads/2021/80c7456f08.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-07-03T13:35:35-05:00",
				"url": "https://alexchabot.net/2013/07/03/the-perfect-personal.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/07/01/one-sad-fellow.html",
				
				"content_html": "<p>One sad fellow.</p>\n\n<p><img src=\"uploads/2021/4dfce4bf0a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "One sad fellow.\n\n<img src=\"uploads/2021/4dfce4bf0a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-07-01T06:04:22-05:00",
				"url": "https://alexchabot.net/2013/07/01/one-sad-fellow.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/06/26/025322.html",
				
				"content_html": "<p><img src=\"uploads/2021/c0bea0e403.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/c0bea0e403.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-06-26T03:53:22-05:00",
				"url": "https://alexchabot.net/2013/06/26/025322.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/04/14/the-typical-ingredients.html",
				
				"content_html": "<p>The typical ingredients.</p>\n\n<p><img src=\"uploads/2021/67d4e314bb.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The typical ingredients.\n\n<img src=\"uploads/2021/67d4e314bb.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-04-14T11:35:52-05:00",
				"url": "https://alexchabot.net/2013/04/14/the-typical-ingredients.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/03/09/063011.html",
				
				"content_html": "<p><img src=\"uploads/2021/2133c4563d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/2133c4563d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-03-09T07:30:11-05:00",
				"url": "https://alexchabot.net/2013/03/09/063011.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/02/10/that-panda-must.html",
				
				"content_html": "<p>That panda must have been nice, before it overdosed…</p>\n\n<p><img src=\"uploads/2021/c615e66a00.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "That panda must have been nice, before it overdosed…\n\n<img src=\"uploads/2021/c615e66a00.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-02-10T04:47:06-05:00",
				"url": "https://alexchabot.net/2013/02/10/that-panda-must.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/02/09/charming-underground-section.html",
				
				"content_html": "<p>Charming underground section of Ataturk airport.</p>\n\n<p><img src=\"uploads/2021/6bceeedd98.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Charming underground section of Ataturk airport.\n\n<img src=\"uploads/2021/6bceeedd98.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-02-09T08:41:06-05:00",
				"url": "https://alexchabot.net/2013/02/09/charming-underground-section.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/02/09/my-new-favorite.html",
				
				"content_html": "<p>My new favorite Turkish expression — SALT Beyoglu</p>\n\n<p><img src=\"uploads/2021/11402ffab2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "My new favorite Turkish expression — SALT Beyoglu\n\n<img src=\"uploads/2021/11402ffab2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-02-09T08:40:51-05:00",
				"url": "https://alexchabot.net/2013/02/09/my-new-favorite.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/01/13/freezerman.html",
				
				"content_html": "<p>Freezerman.</p>\n\n<p><img src=\"uploads/2021/a7d0be2a43.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Freezerman.\n\n<img src=\"uploads/2021/a7d0be2a43.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-01-13T05:39:14-05:00",
				"url": "https://alexchabot.net/2013/01/13/freezerman.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2013/01/07/this-guys-not.html",
				
				"content_html": "<p>This guy&rsquo;s not going anywhere anytime soon.</p>\n\n<p><img src=\"uploads/2021/8a41f67ca3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "This guy's not going anywhere anytime soon.\n\n<img src=\"uploads/2021/8a41f67ca3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2013-01-07T10:43:17-05:00",
				"url": "https://alexchabot.net/2013/01/07/this-guys-not.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/12/15/155033.html",
				
				"content_html": "<p><img src=\"uploads/2021/b3a2584e5d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/b3a2584e5d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-12-15T16:50:33-05:00",
				"url": "https://alexchabot.net/2012/12/15/155033.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/12/14/talk-by-pysics.html",
				
				"content_html": "<p>Talk by 2012 Pysics Nobel Prize winner. Yes, that font is Comis Sans.</p>\n\n<p><img src=\"uploads/2021/781a781246.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Talk by 2012 Pysics Nobel Prize winner. Yes, that font is Comis Sans.\n\n<img src=\"uploads/2021/781a781246.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-12-14T11:43:54-05:00",
				"url": "https://alexchabot.net/2012/12/14/talk-by-pysics.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/12/14/securitas-making-sure.html",
				
				"content_html": "<p>Securitas: making sure your door doesn&rsquo;t get stolen, every day.</p>\n\n<p><img src=\"uploads/2021/b533a9e2a6.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Securitas: making sure your door doesn't get stolen, every day.\n\n<img src=\"uploads/2021/b533a9e2a6.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-12-14T04:44:20-05:00",
				"url": "https://alexchabot.net/2012/12/14/securitas-making-sure.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/11/26/115451.html",
				
				"content_html": "<p><img src=\"uploads/2021/040e38cb35.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/040e38cb35.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-11-26T12:54:51-05:00",
				"url": "https://alexchabot.net/2012/11/26/115451.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/11/02/this-is-how.html",
				
				"content_html": "<p>This is how it ends.</p>\n\n<p><img src=\"uploads/2021/018ee18e00.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "This is how it ends.\n\n<img src=\"uploads/2021/018ee18e00.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-11-02T18:03:19-05:00",
				"url": "https://alexchabot.net/2012/11/02/this-is-how.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/05/27/not-on-the.html",
				
				"content_html": "<p>Not on the street side.</p>\n\n<p><img src=\"uploads/2021/7a1fa4d7d9.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Not on the street side.\n\n<img src=\"uploads/2021/7a1fa4d7d9.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-05-27T11:52:10-05:00",
				"url": "https://alexchabot.net/2012/05/27/not-on-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/05/17/party-hut.html",
				
				"content_html": "<p>Party hut</p>\n\n<p><img src=\"uploads/2021/90b10fb0e5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Party hut\n\n<img src=\"uploads/2021/90b10fb0e5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-05-17T07:45:31-05:00",
				"url": "https://alexchabot.net/2012/05/17/party-hut.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/05/05/palm-house.html",
				
				"content_html": "<p>Palm house</p>\n\n<p><img src=\"uploads/2021/b54d4b7a9c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Palm house\n\n<img src=\"uploads/2021/b54d4b7a9c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-05-05T09:18:20-05:00",
				"url": "https://alexchabot.net/2012/05/05/palm-house.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/05/05/just-another-day.html",
				
				"content_html": "<p>Just another day in Copenhagen&rsquo;s rain forrest.</p>\n\n<p><img src=\"uploads/2021/9ed106e3f5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Just another day in Copenhagen's rain forrest.\n\n<img src=\"uploads/2021/9ed106e3f5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-05-05T07:30:13-05:00",
				"url": "https://alexchabot.net/2012/05/05/just-another-day.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/04/14/pfesn-dtu-after.html",
				
				"content_html": "<p>PF/ESN DTU After Easter party</p>\n\n<p><img src=\"uploads/2021/ea0ce8ef95.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "PF/ESN DTU After Easter party\n\n<img src=\"uploads/2021/ea0ce8ef95.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-04-14T15:02:08-05:00",
				"url": "https://alexchabot.net/2012/04/14/pfesn-dtu-after.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/03/31/worlds-first-qr.html",
				
				"content_html": "<p>World&rsquo;s first QR code - Ryszard Winiarskyx 1936</p>\n\n<p><img src=\"uploads/2021/ac72a2484e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "World's first QR code - Ryszard Winiarskyx 1936\n\n<img src=\"uploads/2021/ac72a2484e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-03-31T07:08:55-05:00",
				"url": "https://alexchabot.net/2012/03/31/worlds-first-qr.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/02/05/cest-arriv-la.html",
				
				"content_html": "<p>C&rsquo;est arrivé la nuit dernière.</p>\n\n<p><img src=\"uploads/2021/86cb6f8e3b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "C'est arrivé la nuit dernière. \n\n<img src=\"uploads/2021/86cb6f8e3b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-02-05T04:15:53-05:00",
				"url": "https://alexchabot.net/2012/02/05/cest-arriv-la.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/02/01/looking-into-eschers.html",
				
				"content_html": "<p>Looking into Escher&rsquo;s mirror ball.</p>\n\n<p><img src=\"uploads/2021/f98e7fd477.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Looking into Escher's mirror ball. \n\n<img src=\"uploads/2021/f98e7fd477.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-02-01T12:57:48-05:00",
				"url": "https://alexchabot.net/2012/02/01/looking-into-eschers.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/02/01/this-time-for.html",
				
				"content_html": "<p>This time for two, still at the Amsterdam Library.</p>\n\n<p><img src=\"uploads/2021/22951952d8.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "This time for two, still at the Amsterdam Library. \n\n<img src=\"uploads/2021/22951952d8.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-02-01T12:57:47-05:00",
				"url": "https://alexchabot.net/2012/02/01/this-time-for.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/02/01/brother-in-a.html",
				
				"content_html": "<p>Brother in a box.</p>\n\n<p><img src=\"uploads/2021/7a1ef83696.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Brother in a box. \n\n<img src=\"uploads/2021/7a1ef83696.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-02-01T12:57:44-05:00",
				"url": "https://alexchabot.net/2012/02/01/brother-in-a.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/31/for-those-whove.html",
				
				"content_html": "<p>For those who&rsquo;ve seen my other photos. You might recognize the Ørsteds Kolegium, no surprise, it&rsquo;s 3XN who&rsquo;s designed it too.</p>\n\n<p><img src=\"uploads/2021/4288da4978.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "For those who've seen my other photos. You might recognize the Ørsteds Kolegium, no surprise, it's 3XN who's designed it too.\n\n<img src=\"uploads/2021/4288da4978.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-31T17:37:50-05:00",
				"url": "https://alexchabot.net/2012/01/31/for-those-whove.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/31/a-bio-local.html",
				
				"content_html": "<p>A 12.50€, bio, local, natural, dinner at the Amsterdam Library.</p>\n\n<p><img src=\"uploads/2021/508c2b12e7.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "A 12.50€, bio, local, natural, dinner at the Amsterdam Library. \n\n<img src=\"uploads/2021/508c2b12e7.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-31T17:37:49-05:00",
				"url": "https://alexchabot.net/2012/01/31/a-bio-local.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/29/whoa-bon-matin.html",
				
				"content_html": "<p>Whoa! Bon matin!</p>\n\n<p><img src=\"uploads/2021/a2e48fc243.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Whoa! Bon matin!\n\n<img src=\"uploads/2021/a2e48fc243.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-29T04:56:45-05:00",
				"url": "https://alexchabot.net/2012/01/29/whoa-bon-matin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/05/kocjanske-jame-exit.html",
				
				"content_html": "<p>Škocjanske Jame exit - Slovenia</p>\n\n<p><img src=\"uploads/2021/71c4fa758d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Škocjanske Jame exit - Slovenia\n\n<img src=\"uploads/2021/71c4fa758d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-05T18:25:20-05:00",
				"url": "https://alexchabot.net/2012/01/05/kocjanske-jame-exit.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/05/172516.html",
				
				"content_html": "<p><img src=\"uploads/2021/e44fa1c800.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/e44fa1c800.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-05T18:25:16-05:00",
				"url": "https://alexchabot.net/2012/01/05/172516.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/05/i-was-here.html",
				
				"content_html": "<p>I was here.</p>\n\n<p><img src=\"uploads/2021/15ccfd5617.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "I was here. \n\n<img src=\"uploads/2021/15ccfd5617.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-05T18:23:40-05:00",
				"url": "https://alexchabot.net/2012/01/05/i-was-here.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2012/01/05/shush.html",
				
				"content_html": "<p>Shush</p>\n\n<p><img src=\"uploads/2021/9f66d3d478.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Shush\n\n<img src=\"uploads/2021/9f66d3d478.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2012-01-05T18:23:20-05:00",
				"url": "https://alexchabot.net/2012/01/05/shush.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/12/31/new-years-eve.html",
				
				"content_html": "<p>New year&rsquo;s eve pizza, in a pizza oven, in a fourth floor apartment.</p>\n\n<p><img src=\"uploads/2021/58eda1f687.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "New year's eve pizza, in a pizza oven, in a fourth floor apartment. \n\n<img src=\"uploads/2021/58eda1f687.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-12-31T15:06:53-05:00",
				"url": "https://alexchabot.net/2011/12/31/new-years-eve.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/12/20/jessica-morin-cne.html",
				
				"content_html": "<p>Jessica Morin - CNE Jonquière</p>\n\n<p><img src=\"uploads/2021/a783a97372.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Jessica Morin - CNE Jonquière\n\n<img src=\"uploads/2021/a783a97372.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-12-20T23:42:35-05:00",
				"url": "https://alexchabot.net/2011/12/20/jessica-morin-cne.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/11/13/pandoro-this-one.html",
				
				"content_html": "<p>Pandoro (this one I did not make)</p>\n\n<p><img src=\"uploads/2021/579485c812.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Pandoro (this one I did not make)\n\n<img src=\"uploads/2021/579485c812.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-11-13T14:46:36-05:00",
				"url": "https://alexchabot.net/2011/11/13/pandoro-this-one.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/11/11/chocolate-raspberry-cake.html",
				
				"content_html": "<p>Chocolate raspberry cake</p>\n\n<p><img src=\"uploads/2021/fa96d667c1.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Chocolate raspberry cake\n\n<img src=\"uploads/2021/fa96d667c1.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-11-11T16:50:03-05:00",
				"url": "https://alexchabot.net/2011/11/11/chocolate-raspberry-cake.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/10/23/detail-hundertwasser-house.html",
				
				"content_html": "<p>Detail - Hundertwasser house</p>\n\n<p><img src=\"uploads/2021/6faead2b19.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Detail - Hundertwasser house\n\n<img src=\"uploads/2021/6faead2b19.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-10-23T03:50:27-05:00",
				"url": "https://alexchabot.net/2011/10/23/detail-hundertwasser-house.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/10/23/vienna-thats-what.html",
				
				"content_html": "<p>Vienna - That&rsquo;s what they call &ldquo;a bike lane&rdquo;.</p>\n\n<p><img src=\"uploads/2021/1cb97b6efc.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Vienna - That's what they call \"a bike lane\". \n\n<img src=\"uploads/2021/1cb97b6efc.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-10-23T03:50:26-05:00",
				"url": "https://alexchabot.net/2011/10/23/vienna-thats-what.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/10/23/vienna-what.html",
				
				"content_html": "<p>Vienna - ? What !?</p>\n\n<p><img src=\"uploads/2021/af7e048195.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Vienna - ? What !?\n\n<img src=\"uploads/2021/af7e048195.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-10-23T03:50:26-05:00",
				"url": "https://alexchabot.net/2011/10/23/vienna-what.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/10/23/mumok-giacometti-femme.html",
				
				"content_html": "<p>MUMOK - Giacometti, Femme debout III</p>\n\n<p><img src=\"uploads/2021/4bfd60ab9d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "MUMOK - Giacometti, Femme debout III\n\n<img src=\"uploads/2021/4bfd60ab9d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-10-23T03:50:04-05:00",
				"url": "https://alexchabot.net/2011/10/23/mumok-giacometti-femme.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/10/03/024205.html",
				
				"content_html": "<p><img src=\"uploads/2021/05d1e4798f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/05d1e4798f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-10-03T03:42:05-05:00",
				"url": "https://alexchabot.net/2011/10/03/024205.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/25/121721.html",
				
				"content_html": "<p><img src=\"uploads/2021/df2439f547.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/df2439f547.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-25T13:17:21-05:00",
				"url": "https://alexchabot.net/2011/09/25/121721.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/25/114802.html",
				
				"content_html": "<p><img src=\"uploads/2021/fca4d9cc8c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/fca4d9cc8c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-25T12:48:02-05:00",
				"url": "https://alexchabot.net/2011/09/25/114802.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/13/main-staircase-neues.html",
				
				"content_html": "<p>Main staircase, Neues Museum</p>\n\n<p><img src=\"uploads/2021/eef0c44708.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Main staircase, Neues Museum\n\n<img src=\"uploads/2021/eef0c44708.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-13T18:43:57-05:00",
				"url": "https://alexchabot.net/2011/09/13/main-staircase-neues.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/13/colosal-statue-of.html",
				
				"content_html": "<p>&ldquo;Colosal statue of Helios&rdquo;—Neues Museum</p>\n\n<p><img src=\"uploads/2021/19c09d1e01.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\"Colosal statue of Helios\"—Neues Museum\n\n<img src=\"uploads/2021/19c09d1e01.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-13T18:43:21-05:00",
				"url": "https://alexchabot.net/2011/09/13/colosal-statue-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/13/berlin-green-head.html",
				
				"content_html": "<p>Berlin Green Head, Neues Museum</p>\n\n<p><img src=\"uploads/2021/29d3ff31da.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Berlin Green Head, Neues Museum\n\n<img src=\"uploads/2021/29d3ff31da.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-13T18:43:12-05:00",
				"url": "https://alexchabot.net/2011/09/13/berlin-green-head.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/12/bembeltown.html",
				
				"content_html": "<p>Bembeltown</p>\n\n<p><img src=\"uploads/2021/ada47362e4.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Bembeltown\n\n<img src=\"uploads/2021/ada47362e4.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-12T15:22:10-05:00",
				"url": "https://alexchabot.net/2011/09/12/bembeltown.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/12/hasenheide-berlin.html",
				
				"content_html": "<p>Hasenheide, Berlin</p>\n\n<p><img src=\"uploads/2021/7fac04f0b4.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Hasenheide, Berlin\n\n<img src=\"uploads/2021/7fac04f0b4.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-12T15:22:10-05:00",
				"url": "https://alexchabot.net/2011/09/12/hasenheide-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/12/carts-kreuzberg.html",
				
				"content_html": "<p>Carts, Kreuzberg</p>\n\n<p><img src=\"uploads/2021/5e8e0fe88b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Carts, Kreuzberg\n\n<img src=\"uploads/2021/5e8e0fe88b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-12T15:22:09-05:00",
				"url": "https://alexchabot.net/2011/09/12/carts-kreuzberg.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/12/how-do-you.html",
				
				"content_html": "<p>How do you call the Trees in Lord of the Ring?</p>\n\n<p><img src=\"uploads/2021/786b254a7c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "How do you call the Trees in Lord of the Ring?\n\n<img src=\"uploads/2021/786b254a7c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-12T15:22:09-05:00",
				"url": "https://alexchabot.net/2011/09/12/how-do-you.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/12/it-was-as.html",
				
				"content_html": "<p>&ldquo;It was as simple as that&rdquo;, Jewish Museum Berlin</p>\n\n<p><img src=\"uploads/2021/7d617244bf.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\"It was as simple as that\", Jewish Museum Berlin\n\n<img src=\"uploads/2021/7d617244bf.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-12T15:22:01-05:00",
				"url": "https://alexchabot.net/2011/09/12/it-was-as.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/11/fisch-meh.html",
				
				"content_html": "<p>Fisch &amp; Meh</p>\n\n<p><img src=\"uploads/2021/ad02a95a39.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Fisch & Meh\n\n<img src=\"uploads/2021/ad02a95a39.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-11T18:19:02-05:00",
				"url": "https://alexchabot.net/2011/09/11/fisch-meh.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/11/jewish-museum-berlin.html",
				
				"content_html": "<p>Jewish Museum, Berlin</p>\n\n<p><img src=\"uploads/2021/3f2183f537.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Jewish Museum, Berlin\n\n<img src=\"uploads/2021/3f2183f537.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-11T18:19:01-05:00",
				"url": "https://alexchabot.net/2011/09/11/jewish-museum-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/11/offices-jewish-museum.html",
				
				"content_html": "<p>Offices, Jewish Museum, Berlin</p>\n\n<p><img src=\"uploads/2021/82e224d403.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Offices, Jewish Museum, Berlin\n\n<img src=\"uploads/2021/82e224d403.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-11T18:18:59-05:00",
				"url": "https://alexchabot.net/2011/09/11/offices-jewish-museum.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/11/maybe-gotham-city.html",
				
				"content_html": "<p>Maybe Gotham City</p>\n\n<p><img src=\"uploads/2021/f754bc90ca.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Maybe Gotham City\n\n<img src=\"uploads/2021/f754bc90ca.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-11T18:18:53-05:00",
				"url": "https://alexchabot.net/2011/09/11/maybe-gotham-city.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/11/oranienstrae.html",
				
				"content_html": "<p>Oranienstraße</p>\n\n<p><img src=\"uploads/2021/3b17d985fd.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Oranienstraße\n\n<img src=\"uploads/2021/3b17d985fd.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-11T18:18:20-05:00",
				"url": "https://alexchabot.net/2011/09/11/oranienstrae.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/mercedes-berlin.html",
				
				"content_html": "<p>Mercedes Berlin</p>\n\n<p><img src=\"uploads/2021/f637f18dfd.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Mercedes Berlin\n\n<img src=\"uploads/2021/f637f18dfd.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T17:59:31-05:00",
				"url": "https://alexchabot.net/2011/09/10/mercedes-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/ausfahrt-einfahrt.html",
				
				"content_html": "<p>Ausfahrt / Einfahrt</p>\n\n<p><img src=\"uploads/2021/d420c87e8d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ausfahrt / Einfahrt\n\n<img src=\"uploads/2021/d420c87e8d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T17:59:24-05:00",
				"url": "https://alexchabot.net/2011/09/10/ausfahrt-einfahrt.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/upper-east-side.html",
				
				"content_html": "<p>Upper East Side Berlin, Frederichstraße</p>\n\n<p><img src=\"uploads/2021/a23cc99b66.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Upper East Side Berlin, Frederichstraße\n\n<img src=\"uploads/2021/a23cc99b66.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T17:59:24-05:00",
				"url": "https://alexchabot.net/2011/09/10/upper-east-side.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/kms-california-berlin.html",
				
				"content_html": "<p>KMS California, Berlin</p>\n\n<p><img src=\"uploads/2021/0bc41f1d71.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "KMS California, Berlin\n\n<img src=\"uploads/2021/0bc41f1d71.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T17:59:23-05:00",
				"url": "https://alexchabot.net/2011/09/10/kms-california-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/internationales-handelszenirum-berlin.html",
				
				"content_html": "<p>Internationales Handelszenirum, Berlin</p>\n\n<p><img src=\"uploads/2021/27854a206e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Internationales Handelszenirum, Berlin\n\n<img src=\"uploads/2021/27854a206e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T17:59:20-05:00",
				"url": "https://alexchabot.net/2011/09/10/internationales-handelszenirum-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/hackeshe-hfe.html",
				
				"content_html": "<p>Hackeshe Höfe</p>\n\n<p><img src=\"uploads/2021/1277215e7e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Hackeshe Höfe\n\n<img src=\"uploads/2021/1277215e7e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T16:56:01-05:00",
				"url": "https://alexchabot.net/2011/09/10/hackeshe-hfe.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/monbijoustrae-berlin.html",
				
				"content_html": "<p>Monbijoustraße, Berlin</p>\n\n<p><img src=\"uploads/2021/c66a43256b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Monbijoustraße, Berlin\n\n<img src=\"uploads/2021/c66a43256b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T16:55:55-05:00",
				"url": "https://alexchabot.net/2011/09/10/monbijoustrae-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/johannisstrae-berlin.html",
				
				"content_html": "<p>Johannisstraße, Berlin</p>\n\n<p><img src=\"uploads/2021/460b2ced46.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Johannisstraße, Berlin\n\n<img src=\"uploads/2021/460b2ced46.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T16:55:41-05:00",
				"url": "https://alexchabot.net/2011/09/10/johannisstrae-berlin.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/10/063023.html",
				
				"content_html": "<p>1:00</p>\n\n<p><img src=\"uploads/2021/7a2c627c93.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "1:00\n\n<img src=\"uploads/2021/7a2c627c93.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-10T07:30:23-05:00",
				"url": "https://alexchabot.net/2011/09/10/063023.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/08/the-spoon.html",
				
				"content_html": "<p>The Spoon</p>\n\n<p><img src=\"uploads/2021/9ad5957508.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The Spoon\n\n<img src=\"uploads/2021/9ad5957508.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-08T04:32:04-05:00",
				"url": "https://alexchabot.net/2011/09/08/the-spoon.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/06/the-owl.html",
				
				"content_html": "<p>The Owl</p>\n\n<p><img src=\"uploads/2021/223cf8241d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The Owl\n\n<img src=\"uploads/2021/223cf8241d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-06T08:34:31-05:00",
				"url": "https://alexchabot.net/2011/09/06/the-owl.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/05/lockers-at-restad.html",
				
				"content_html": "<p>Lockers, at Ørestad Gymnasium</p>\n\n<p><img src=\"uploads/2021/2e1f37715a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Lockers, at Ørestad Gymnasium\n\n<img src=\"uploads/2021/2e1f37715a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-05T09:37:31-05:00",
				"url": "https://alexchabot.net/2011/09/05/lockers-at-restad.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/05/the-drums-at.html",
				
				"content_html": "<p>The Drums, at Ørestad Gymnasium</p>\n\n<p><img src=\"uploads/2021/4befcd1722.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The Drums, at Ørestad Gymnasium\n\n<img src=\"uploads/2021/4befcd1722.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-05T09:31:48-05:00",
				"url": "https://alexchabot.net/2011/09/05/the-drums-at.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/05/082549.html",
				
				"content_html": "<p><img src=\"uploads/2021/d93b2356fb.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/d93b2356fb.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-05T09:25:49-05:00",
				"url": "https://alexchabot.net/2011/09/05/082549.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/03/102715.html",
				
				"content_html": "<p><img src=\"uploads/2021/023bcb8455.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/023bcb8455.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-03T11:27:15-05:00",
				"url": "https://alexchabot.net/2011/09/03/102715.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/09/02/170230.html",
				
				"content_html": "<p><img src=\"uploads/2021/c8dfdb3d56.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/c8dfdb3d56.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-09-02T18:02:30-05:00",
				"url": "https://alexchabot.net/2011/09/02/170230.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/08/30/its-like-being.html",
				
				"content_html": "<p>It&rsquo;s like being there.</p>\n\n<p><img src=\"uploads/2021/48df423e89.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "It's like being there. \n\n<img src=\"uploads/2021/48df423e89.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-08-30T12:23:17-05:00",
				"url": "https://alexchabot.net/2011/08/30/its-like-being.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/08/30/yellow-submarine.html",
				
				"content_html": "<p>Yellow Submarine</p>\n\n<p><img src=\"uploads/2021/aed5e0c7bd.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Yellow Submarine\n\n<img src=\"uploads/2021/aed5e0c7bd.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-08-30T12:16:30-05:00",
				"url": "https://alexchabot.net/2011/08/30/yellow-submarine.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/08/cph-opera-house.html",
				
				"content_html": "<p>CPH opera house by night</p>\n\n<p><img src=\"uploads/2021/64d97a3053.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "CPH opera house by night\n\n<img src=\"uploads/2021/64d97a3053.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-08T16:18:11-05:00",
				"url": "https://alexchabot.net/2011/07/08/cph-opera-house.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/08/ceiling-lights-over.html",
				
				"content_html": "<p>Ceiling lights over the foyer</p>\n\n<p><img src=\"uploads/2021/4c3f104feb.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ceiling lights over the foyer\n\n<img src=\"uploads/2021/4c3f104feb.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-08T16:09:06-05:00",
				"url": "https://alexchabot.net/2011/07/08/ceiling-lights-over.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/06/diffracted-light-on.html",
				
				"content_html": "<p>Diffracted light on station floor (original photo)</p>\n\n<p><img src=\"uploads/2021/8e165caf20.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Diffracted light on station floor (original photo)\n\n<img src=\"uploads/2021/8e165caf20.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-06T07:08:35-05:00",
				"url": "https://alexchabot.net/2011/07/06/diffracted-light-on.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/053655.html",
				
				"content_html": "<p><img src=\"uploads/2021/ff10518703.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/ff10518703.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T06:36:55-05:00",
				"url": "https://alexchabot.net/2011/07/05/053655.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/053530.html",
				
				"content_html": "<p><img src=\"uploads/2021/53491b847c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/53491b847c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T06:35:30-05:00",
				"url": "https://alexchabot.net/2011/07/05/053530.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/thomas-schtte-one.html",
				
				"content_html": "<p>Thomas Schütte - One Man House V</p>\n\n<p><img src=\"uploads/2021/ad9908aa66.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Thomas Schütte - One Man House V\n\n<img src=\"uploads/2021/ad9908aa66.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T06:01:38-05:00",
				"url": "https://alexchabot.net/2011/07/05/thomas-schtte-one.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/alexander-brodsky-settlement.html",
				
				"content_html": "<p>Alexander Brodsky - Settlement</p>\n\n<p><img src=\"uploads/2021/879773059c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Alexander Brodsky - Settlement\n\n<img src=\"uploads/2021/879773059c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T05:36:11-05:00",
				"url": "https://alexchabot.net/2011/07/05/alexander-brodsky-settlement.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/043219.html",
				
				"content_html": "<p>Alexander Brodsky - Settlement</p>\n\n<p><img src=\"uploads/2021/bd6a0d7da2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Alexander Brodsky - Settlement\n\n<img src=\"uploads/2021/bd6a0d7da2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T05:32:19-05:00",
				"url": "https://alexchabot.net/2011/07/05/043219.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/arne-quinze-my.html",
				
				"content_html": "<p>Arne Quinze - My Home My House My Stilthouse</p>\n\n<p><img src=\"uploads/2021/d677b6fae6.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Arne Quinze - My Home My House My Stilthouse\n\n<img src=\"uploads/2021/d677b6fae6.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T05:20:03-05:00",
				"url": "https://alexchabot.net/2011/07/05/arne-quinze-my.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/05/041351.html",
				
				"content_html": "<p><img src=\"uploads/2021/d3ec610d3c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/d3ec610d3c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-05T05:13:51-05:00",
				"url": "https://alexchabot.net/2011/07/05/041351.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/04/105040.html",
				
				"content_html": "<p><img src=\"uploads/2021/fe863623f3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/fe863623f3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-04T11:50:40-05:00",
				"url": "https://alexchabot.net/2011/07/04/105040.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/04/rstads-boulevard.html",
				
				"content_html": "<p>Ørstads boulevard 57</p>\n\n<p><img src=\"uploads/2021/3703d6c9e5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ørstads boulevard 57\n\n<img src=\"uploads/2021/3703d6c9e5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-04T09:40:48-05:00",
				"url": "https://alexchabot.net/2011/07/04/rstads-boulevard.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/04/083638.html",
				
				"content_html": "<p><img src=\"uploads/2021/b380b46909.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/b380b46909.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-04T09:36:38-05:00",
				"url": "https://alexchabot.net/2011/07/04/083638.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/04/kongens-have-lake.html",
				
				"content_html": "<p>Kongens Have &ldquo;lake&rdquo;</p>\n\n<p><img src=\"uploads/2021/cd6febdf49.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Kongens Have \"lake\"\n\n<img src=\"uploads/2021/cd6febdf49.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-04T05:22:08-05:00",
				"url": "https://alexchabot.net/2011/07/04/kongens-have-lake.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/07/03/104039.html",
				
				"content_html": "<p><img src=\"uploads/2021/14c2278394.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/14c2278394.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-07-03T11:40:39-05:00",
				"url": "https://alexchabot.net/2011/07/03/104039.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/25/gerbeaud-sundae.html",
				
				"content_html": "<p>Gerbeaud sundae</p>\n\n<p><img src=\"uploads/2021/7aa3fc3e2b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Gerbeaud sundae\n\n<img src=\"uploads/2021/7aa3fc3e2b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-25T12:43:53-05:00",
				"url": "https://alexchabot.net/2011/06/25/gerbeaud-sundae.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/24/opera-house-budapest.html",
				
				"content_html": "<p>Opera house, Budapest</p>\n\n<p><img src=\"uploads/2021/2d8ab837e2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Opera house, Budapest\n\n<img src=\"uploads/2021/2d8ab837e2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-24T15:37:30-05:00",
				"url": "https://alexchabot.net/2011/06/24/opera-house-budapest.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/24/opera-house-side.html",
				
				"content_html": "<p>Opera house, side, Budapest</p>\n\n<p><img src=\"uploads/2021/6f71cb03fe.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Opera house, side, Budapest \n\n<img src=\"uploads/2021/6f71cb03fe.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-24T15:37:30-05:00",
				"url": "https://alexchabot.net/2011/06/24/opera-house-side.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/24/opra-house-budapest.html",
				
				"content_html": "<p>Opéra House, Budapest</p>\n\n<p><img src=\"uploads/2021/2370ae925a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Opéra House, Budapest\n\n<img src=\"uploads/2021/2370ae925a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-24T15:37:28-05:00",
				"url": "https://alexchabot.net/2011/06/24/opra-house-budapest.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/23/nagycsarnork.html",
				
				"content_html": "<p>Nagycsarnork</p>\n\n<p><img src=\"uploads/2021/f398007c98.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Nagycsarnork\n\n<img src=\"uploads/2021/f398007c98.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-23T19:13:19-05:00",
				"url": "https://alexchabot.net/2011/06/23/nagycsarnork.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/23/nagycsarnok.html",
				
				"content_html": "<p>Nagycsarnok</p>\n\n<p><img src=\"uploads/2021/3e5885385f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Nagycsarnok\n\n<img src=\"uploads/2021/3e5885385f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-23T19:12:58-05:00",
				"url": "https://alexchabot.net/2011/06/23/nagycsarnok.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/23/puerla-tea-budapest.html",
				
				"content_html": "<p>Puerla, 1000 Tea, Budapest</p>\n\n<p><img src=\"uploads/2021/3967813450.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Puerla, 1000 Tea, Budapest\n\n<img src=\"uploads/2021/3967813450.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-23T19:12:57-05:00",
				"url": "https://alexchabot.net/2011/06/23/puerla-tea-budapest.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/23/inner-town-parish.html",
				
				"content_html": "<p>Inner Town Parish Church</p>\n\n<p><img src=\"uploads/2021/88b7174536.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Inner Town Parish Church\n\n<img src=\"uploads/2021/88b7174536.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-23T19:12:53-05:00",
				"url": "https://alexchabot.net/2011/06/23/inner-town-parish.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/22/elevator-ceiling-alexandra.html",
				
				"content_html": "<p>Elevator ceiling, Alexandra Bookstore, Budapest</p>\n\n<p><img src=\"uploads/2021/60dd0c356a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Elevator ceiling, Alexandra Bookstore, Budapest\n\n<img src=\"uploads/2021/60dd0c356a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-22T17:18:35-05:00",
				"url": "https://alexchabot.net/2011/06/22/elevator-ceiling-alexandra.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/22/ceiling-of-the.html",
				
				"content_html": "<p>Ceiling of the Alexandra bookshop&rsquo;s cafe, Budapest</p>\n\n<p><img src=\"uploads/2021/2f54a652e5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Ceiling of the Alexandra bookshop's cafe, Budapest\n\n<img src=\"uploads/2021/2f54a652e5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-22T17:18:27-05:00",
				"url": "https://alexchabot.net/2011/06/22/ceiling-of-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/22/telefon-budapest.html",
				
				"content_html": "<p>Telefon, Budapest</p>\n\n<p><img src=\"uploads/2021/22a1a1c4fc.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Telefon, Budapest\n\n<img src=\"uploads/2021/22a1a1c4fc.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-22T03:24:29-05:00",
				"url": "https://alexchabot.net/2011/06/22/telefon-budapest.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/19/145539.html",
				
				"content_html": "<p><img src=\"uploads/2021/82fdb2d576.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/82fdb2d576.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-19T15:55:39-05:00",
				"url": "https://alexchabot.net/2011/06/19/145539.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/19/somewhere-where-horses.html",
				
				"content_html": "<p>Somewhere where horses usually hang out</p>\n\n<p><img src=\"uploads/2021/8de5efc1aa.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Somewhere where horses usually hang out\n\n<img src=\"uploads/2021/8de5efc1aa.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-19T15:53:35-05:00",
				"url": "https://alexchabot.net/2011/06/19/somewhere-where-horses.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/19/090201.html",
				
				"content_html": "<p><img src=\"uploads/2021/0b28d2fbee.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/0b28d2fbee.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-19T10:02:01-05:00",
				"url": "https://alexchabot.net/2011/06/19/090201.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/19/080716.html",
				
				"content_html": "<p><img src=\"uploads/2021/3d82e01c53.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/3d82e01c53.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-19T09:07:16-05:00",
				"url": "https://alexchabot.net/2011/06/19/080716.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/19/080149.html",
				
				"content_html": "<p><img src=\"uploads/2021/476ebdb071.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/476ebdb071.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-19T09:01:49-05:00",
				"url": "https://alexchabot.net/2011/06/19/080149.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/08/canadian-maple.html",
				
				"content_html": "<p>Canadian Maple</p>\n\n<p><img src=\"uploads/2021/eca5fc9003.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Canadian Maple\n\n<img src=\"uploads/2021/eca5fc9003.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-08T06:42:34-05:00",
				"url": "https://alexchabot.net/2011/06/08/canadian-maple.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/06/im-blue.html",
				
				"content_html": "<p>I&rsquo;m blue.</p>\n\n<p><img src=\"uploads/2021/207b862323.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "I'm blue. \n\n<img src=\"uploads/2021/207b862323.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-06T11:15:20-05:00",
				"url": "https://alexchabot.net/2011/06/06/im-blue.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/05/polyp.html",
				
				"content_html": "<p>Polyp</p>\n\n<p><img src=\"uploads/2021/230649fedc.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Polyp\n\n<img src=\"uploads/2021/230649fedc.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-05T13:11:51-05:00",
				"url": "https://alexchabot.net/2011/06/05/polyp.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/05/double-shot.html",
				
				"content_html": "<p>Double Shot</p>\n\n<p><img src=\"uploads/2021/74d24ebb25.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Double Shot\n\n<img src=\"uploads/2021/74d24ebb25.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-05T13:08:36-05:00",
				"url": "https://alexchabot.net/2011/06/05/double-shot.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/05/103152.html",
				
				"content_html": "<p><img src=\"uploads/2021/5ca4037061.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/5ca4037061.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-05T11:31:52-05:00",
				"url": "https://alexchabot.net/2011/06/05/103152.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/06/01/131028.html",
				
				"content_html": "<p><img src=\"uploads/2021/1178e8c275.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/1178e8c275.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-06-01T14:10:28-05:00",
				"url": "https://alexchabot.net/2011/06/01/131028.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/25/173528.html",
				
				"content_html": "<p><img src=\"uploads/2021/73b3d1d9e6.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/73b3d1d9e6.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-25T18:35:28-05:00",
				"url": "https://alexchabot.net/2011/05/25/173528.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/21/its-just-around.html",
				
				"content_html": "<p>It&rsquo;s just around the corner</p>\n\n<p><img src=\"uploads/2021/11dcb82e9d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "It's just around the corner\n\n<img src=\"uploads/2021/11dcb82e9d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-21T20:57:46-05:00",
				"url": "https://alexchabot.net/2011/05/21/its-just-around.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/12/010527.html",
				
				"content_html": "<p><img src=\"uploads/2021/1997534746.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/1997534746.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-12T02:05:27-05:00",
				"url": "https://alexchabot.net/2011/05/12/010527.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/10/i-need-a.html",
				
				"content_html": "<p>I need a haircut</p>\n\n<p><img src=\"uploads/2021/12a15a7ae3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "I need a haircut\n\n<img src=\"uploads/2021/12a15a7ae3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-10T04:17:25-05:00",
				"url": "https://alexchabot.net/2011/05/10/i-need-a.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/08/rooftop.html",
				
				"content_html": "<p>Rooftop</p>\n\n<p><img src=\"uploads/2021/c95c6c14a9.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Rooftop\n\n<img src=\"uploads/2021/c95c6c14a9.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-08T18:53:39-05:00",
				"url": "https://alexchabot.net/2011/05/08/rooftop.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/08/view-on-the.html",
				
				"content_html": "<p>View on the Alhambra</p>\n\n<p><img src=\"uploads/2021/73e2e564db.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "View on the Alhambra\n\n<img src=\"uploads/2021/73e2e564db.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-08T18:53:31-05:00",
				"url": "https://alexchabot.net/2011/05/08/view-on-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/08/plaza-nueva-granada.html",
				
				"content_html": "<p>Plaza Nueva, Granada</p>\n\n<p><img src=\"uploads/2021/5a82022fbb.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Plaza Nueva, Granada\n\n<img src=\"uploads/2021/5a82022fbb.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-08T18:53:25-05:00",
				"url": "https://alexchabot.net/2011/05/08/plaza-nueva-granada.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/07/in-al-alhambra.html",
				
				"content_html": "<p>In Al Alhambra</p>\n\n<p><img src=\"uploads/2021/f2fc2334e3.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "In Al Alhambra\n\n<img src=\"uploads/2021/f2fc2334e3.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-07T19:19:22-05:00",
				"url": "https://alexchabot.net/2011/05/07/in-al-alhambra.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/06/torre-del-cubo.html",
				
				"content_html": "<p>Torre del Cubo</p>\n\n<p><img src=\"uploads/2021/360df002da.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Torre del Cubo\n\n<img src=\"uploads/2021/360df002da.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-06T13:18:45-05:00",
				"url": "https://alexchabot.net/2011/05/06/torre-del-cubo.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/06/generalife.html",
				
				"content_html": "<p>Generalife</p>\n\n<p><img src=\"uploads/2021/11dd34cdbe.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Generalife\n\n<img src=\"uploads/2021/11dd34cdbe.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-06T13:18:18-05:00",
				"url": "https://alexchabot.net/2011/05/06/generalife.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/02/121429.html",
				
				"content_html": "<p><img src=\"uploads/2021/02a4e6f16f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/02a4e6f16f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-02T13:14:29-05:00",
				"url": "https://alexchabot.net/2011/05/02/121429.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/02/malaga.html",
				
				"content_html": "<p>Malaga</p>\n\n<p><img src=\"uploads/2021/dcaa3f0a91.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Malaga\n\n<img src=\"uploads/2021/dcaa3f0a91.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-02T13:14:28-05:00",
				"url": "https://alexchabot.net/2011/05/02/malaga.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/02/121424.html",
				
				"content_html": "<p><img src=\"uploads/2021/62ad6f1eff.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/62ad6f1eff.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-02T13:14:24-05:00",
				"url": "https://alexchabot.net/2011/05/02/121424.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/02/121419.html",
				
				"content_html": "<p><img src=\"uploads/2021/64ec93579e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/64ec93579e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-02T13:14:19-05:00",
				"url": "https://alexchabot.net/2011/05/02/121419.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/02/121408.html",
				
				"content_html": "<p><img src=\"uploads/2021/7fdab6bcb8.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/7fdab6bcb8.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-02T13:14:08-05:00",
				"url": "https://alexchabot.net/2011/05/02/121408.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/05/01/over-danish-waters.html",
				
				"content_html": "<p>Over danish waters.</p>\n\n<p><img src=\"uploads/2021/e72ad0a1e1.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Over danish waters.\n\n<img src=\"uploads/2021/e72ad0a1e1.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-05-01T15:00:54-05:00",
				"url": "https://alexchabot.net/2011/05/01/over-danish-waters.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/29/122251.html",
				
				"content_html": "<p><img src=\"uploads/2021/fe6f56436f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/fe6f56436f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-29T13:22:51-05:00",
				"url": "https://alexchabot.net/2011/04/29/122251.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/18/142427.html",
				
				"content_html": "<p><img src=\"uploads/2021/284e6fd547.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/284e6fd547.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-18T15:24:27-05:00",
				"url": "https://alexchabot.net/2011/04/18/142427.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/15/093257.html",
				
				"content_html": "<p><img src=\"uploads/2021/ba9dc9d687.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/ba9dc9d687.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-15T10:32:57-05:00",
				"url": "https://alexchabot.net/2011/04/15/093257.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/11/mestre-italy.html",
				
				"content_html": "<p>Mestre, Italy</p>\n\n<p><img src=\"uploads/2021/626d3fa71d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Mestre, Italy\n\n<img src=\"uploads/2021/626d3fa71d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-11T17:45:15-05:00",
				"url": "https://alexchabot.net/2011/04/11/mestre-italy.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/11/campo-santa-maria.html",
				
				"content_html": "<p>Campo Santa Maria Zobenigo Odel Giglio</p>\n\n<p><img src=\"uploads/2021/695354057e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Campo Santa Maria Zobenigo Odel Giglio\n\n<img src=\"uploads/2021/695354057e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-11T17:45:05-05:00",
				"url": "https://alexchabot.net/2011/04/11/campo-santa-maria.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/02/dj-spot.html",
				
				"content_html": "<p>DJ spot</p>\n\n<p><img src=\"uploads/2021/153f32cfda.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "DJ spot\n\n<img src=\"uploads/2021/153f32cfda.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-02T14:06:24-05:00",
				"url": "https://alexchabot.net/2011/04/02/dj-spot.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/02/black.html",
				
				"content_html": "<p>Black</p>\n\n<p><img src=\"uploads/2021/8e881a6e88.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Black\n\n<img src=\"uploads/2021/8e881a6e88.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-02T13:27:03-05:00",
				"url": "https://alexchabot.net/2011/04/02/black.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/02/white.html",
				
				"content_html": "<p>White</p>\n\n<p><img src=\"uploads/2021/bd27d061aa.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "White\n\n<img src=\"uploads/2021/bd27d061aa.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-02T13:25:47-05:00",
				"url": "https://alexchabot.net/2011/04/02/white.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/04/01/the-queen-was.html",
				
				"content_html": "<p>The Queen was not there</p>\n\n<p><img src=\"uploads/2021/7366ea4145.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The Queen was not there\n\n<img src=\"uploads/2021/7366ea4145.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-04-01T14:43:03-05:00",
				"url": "https://alexchabot.net/2011/04/01/the-queen-was.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/28/still-some-light.html",
				
				"content_html": "<p>Still some light in the sky after Danish class? I love it!</p>\n\n<p><img src=\"uploads/2021/d44f02ad1a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Still some light in the sky after Danish class? I love it!\n\n<img src=\"uploads/2021/d44f02ad1a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-28T12:51:45-05:00",
				"url": "https://alexchabot.net/2011/03/28/still-some-light.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/18/the-towery-of.html",
				
				"content_html": "<p>The towery of&hellip;</p>\n\n<p><img src=\"uploads/2021/a4d13247fc.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The towery of...\n\n<img src=\"uploads/2021/a4d13247fc.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-18T17:55:06-05:00",
				"url": "https://alexchabot.net/2011/03/18/the-towery-of.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/18/yellows.html",
				
				"content_html": "<p>Yellows</p>\n\n<p><img src=\"uploads/2021/0cb1c21ce7.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Yellows\n\n<img src=\"uploads/2021/0cb1c21ce7.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-18T15:25:34-05:00",
				"url": "https://alexchabot.net/2011/03/18/yellows.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/18/pfbuddy-beer-pong.html",
				
				"content_html": "<p>PF/Buddy Beer Pong tournament trophy</p>\n\n<p><img src=\"uploads/2021/a74d6aefef.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "PF/Buddy Beer Pong tournament trophy\n\n<img src=\"uploads/2021/a74d6aefef.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-18T10:31:33-05:00",
				"url": "https://alexchabot.net/2011/03/18/pfbuddy-beer-pong.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/13/062710.html",
				
				"content_html": "<p><img src=\"uploads/2021/2f43e3e892.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/2f43e3e892.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-13T07:27:10-05:00",
				"url": "https://alexchabot.net/2011/03/13/062710.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/07/102238.html",
				
				"content_html": "<p><img src=\"uploads/2021/a5feadb800.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/a5feadb800.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-07T11:22:38-05:00",
				"url": "https://alexchabot.net/2011/03/07/102238.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/01/162325.html",
				
				"content_html": "<p><img src=\"uploads/2021/21708c4ff2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/21708c4ff2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-01T17:23:25-05:00",
				"url": "https://alexchabot.net/2011/03/01/162325.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/03/01/162321.html",
				
				"content_html": "<p><img src=\"uploads/2021/35a7fb923b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/35a7fb923b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-03-01T17:23:21-05:00",
				"url": "https://alexchabot.net/2011/03/01/162321.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/27/giacometti.html",
				
				"content_html": "<p>Giacometti</p>\n\n<p><img src=\"uploads/2021/3c19a03e1f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Giacometti\n\n<img src=\"uploads/2021/3c19a03e1f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-27T09:45:17-05:00",
				"url": "https://alexchabot.net/2011/02/27/giacometti.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/27/panamarenko-pepto-bismo.html",
				
				"content_html": "<p>Panamarenko - Pepto Bismo</p>\n\n<p><img src=\"uploads/2021/3974262e9e.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Panamarenko - Pepto Bismo\n\n<img src=\"uploads/2021/3974262e9e.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-27T08:39:23-05:00",
				"url": "https://alexchabot.net/2011/02/27/panamarenko-pepto-bismo.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/27/064804.html",
				
				"content_html": "<p><img src=\"uploads/2021/b8c9a63b74.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/b8c9a63b74.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-27T07:48:04-05:00",
				"url": "https://alexchabot.net/2011/02/27/064804.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/27/064704.html",
				
				"content_html": "<p><img src=\"uploads/2021/30ad18cab4.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/30ad18cab4.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-27T07:47:04-05:00",
				"url": "https://alexchabot.net/2011/02/27/064704.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/25/chinup-bar-at.html",
				
				"content_html": "<p>Chin-up bar at 101&hellip;</p>\n\n<p><img src=\"uploads/2021/7f949feace.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Chin-up bar at 101...\n\n<img src=\"uploads/2021/7f949feace.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-25T11:21:28-05:00",
				"url": "https://alexchabot.net/2011/02/25/chinup-bar-at.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/02/17/trou.html",
				
				"content_html": "<p>Trou</p>\n\n<p><img src=\"uploads/2021/b95fe3803d.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Trou\n\n<img src=\"uploads/2021/b95fe3803d.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-02-17T12:22:50-05:00",
				"url": "https://alexchabot.net/2011/02/17/trou.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/30/like-in-the.html",
				
				"content_html": "<p>Like in the days where we played ping pong on the streets.</p>\n\n<p><img src=\"uploads/2021/4f401bf4a8.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Like in the days where we played ping pong on the streets. \n\n<img src=\"uploads/2021/4f401bf4a8.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-30T08:42:52-05:00",
				"url": "https://alexchabot.net/2011/01/30/like-in-the.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/21/fog.html",
				
				"content_html": "<p>Fog</p>\n\n<p><img src=\"uploads/2021/769d5d8400.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Fog\n\n<img src=\"uploads/2021/769d5d8400.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-21T19:35:03-05:00",
				"url": "https://alexchabot.net/2011/01/21/fog.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/21/frozen-leaves.html",
				
				"content_html": "<p>Frozen leaves</p>\n\n<p><img src=\"uploads/2021/eb47025c12.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Frozen leaves\n\n<img src=\"uploads/2021/eb47025c12.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-21T03:00:36-05:00",
				"url": "https://alexchabot.net/2011/01/21/frozen-leaves.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/14/tabletop-tree.html",
				
				"content_html": "<p>Tabletop tree</p>\n\n<p><img src=\"uploads/2021/070f535e09.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Tabletop tree\n\n<img src=\"uploads/2021/070f535e09.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-14T03:44:02-05:00",
				"url": "https://alexchabot.net/2011/01/14/tabletop-tree.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/07/the-light.html",
				
				"content_html": "<p>The light</p>\n\n<p><img src=\"uploads/2021/1d63dbca61.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "The light\n\n<img src=\"uploads/2021/1d63dbca61.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-07T19:11:36-05:00",
				"url": "https://alexchabot.net/2011/01/07/the-light.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/04/lunch-time-detail.html",
				
				"content_html": "<p>Lunch time (detail)</p>\n\n<p><img src=\"uploads/2021/5c6e2bb94c.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Lunch time (detail)\n\n<img src=\"uploads/2021/5c6e2bb94c.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-04T08:45:12-05:00",
				"url": "https://alexchabot.net/2011/01/04/lunch-time-detail.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/04/lunch-time.html",
				
				"content_html": "<p>Lunch time</p>\n\n<p><img src=\"uploads/2021/a23c376652.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Lunch time\n\n<img src=\"uploads/2021/a23c376652.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-04T08:44:22-05:00",
				"url": "https://alexchabot.net/2011/01/04/lunch-time.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2011/01/04/a-business-sight.html",
				
				"content_html": "<p>A &ldquo;business sight&rdquo;.</p>\n\n<p><img src=\"uploads/2021/beb6046e37.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "A \"business sight\". \n\n<img src=\"uploads/2021/beb6046e37.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2011-01-04T08:44:17-05:00",
				"url": "https://alexchabot.net/2011/01/04/a-business-sight.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/31/happy-new-year.html",
				
				"content_html": "<p>Happy New Year!</p>\n\n<p><img src=\"uploads/2021/367446ca28.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Happy New Year!\n\n<img src=\"uploads/2021/367446ca28.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-31T18:50:16-05:00",
				"url": "https://alexchabot.net/2010/12/31/happy-new-year.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/25/best-dessert-ever.html",
				
				"content_html": "<p>Best dessert <em>ever</em>.</p>\n\n<p><img src=\"uploads/2021/073542b95b.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Best dessert _ever_.\n\n<img src=\"uploads/2021/073542b95b.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-25T20:31:09-05:00",
				"url": "https://alexchabot.net/2010/12/25/best-dessert-ever.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/25/au-bord-de.html",
				
				"content_html": "<p>Au bord de la Seine</p>\n\n<p><img src=\"uploads/2021/04cb3cccfc.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Au bord de la Seine\n\n<img src=\"uploads/2021/04cb3cccfc.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-25T20:27:42-05:00",
				"url": "https://alexchabot.net/2010/12/25/au-bord-de.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232848.html",
				
				"content_html": "<p><img src=\"uploads/2021/2a873f3d1f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/2a873f3d1f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:48-05:00",
				"url": "https://alexchabot.net/2010/12/19/232848.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232841.html",
				
				"content_html": "<p><img src=\"uploads/2021/5a5e17e6d7.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/5a5e17e6d7.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:41-05:00",
				"url": "https://alexchabot.net/2010/12/19/232841.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232840.html",
				
				"content_html": "<p><img src=\"uploads/2021/efa21b1ed5.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/efa21b1ed5.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:40-05:00",
				"url": "https://alexchabot.net/2010/12/19/232840.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232839.html",
				
				"content_html": "<p><img src=\"uploads/2021/cfc08b06f2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/cfc08b06f2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:39-05:00",
				"url": "https://alexchabot.net/2010/12/19/232839.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232818.html",
				
				"content_html": "<p><img src=\"uploads/2021/260b989155.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/260b989155.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:18-05:00",
				"url": "https://alexchabot.net/2010/12/19/232818.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/19/232800.html",
				
				"content_html": "<p><img src=\"uploads/2021/371c3517b8.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/371c3517b8.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-20T00:28:00-05:00",
				"url": "https://alexchabot.net/2010/12/19/232800.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/17/070046.html",
				
				"content_html": "<p><img src=\"uploads/2021/357b3bac21.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/357b3bac21.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-17T08:00:46-05:00",
				"url": "https://alexchabot.net/2010/12/17/070046.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/17/065306.html",
				
				"content_html": "<p><img src=\"uploads/2021/2379f6a2b1.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/2379f6a2b1.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-17T07:53:06-05:00",
				"url": "https://alexchabot.net/2010/12/17/065306.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/17/045112.html",
				
				"content_html": "<p><img src=\"uploads/2021/06ec9d37a2.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/06ec9d37a2.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-17T05:51:12-05:00",
				"url": "https://alexchabot.net/2010/12/17/045112.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/17/034348.html",
				
				"content_html": "<p><img src=\"uploads/2021/171cb5c9be.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/171cb5c9be.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-17T04:43:48-05:00",
				"url": "https://alexchabot.net/2010/12/17/034348.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/17/033608.html",
				
				"content_html": "<p><img src=\"uploads/2021/3c5a7c9b96.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/3c5a7c9b96.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-17T04:36:08-05:00",
				"url": "https://alexchabot.net/2010/12/17/033608.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/13/dead-sound.html",
				
				"content_html": "<p>Dead sound</p>\n\n<p><img src=\"uploads/2021/fdab8f73ed.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Dead sound\n\n<img src=\"uploads/2021/fdab8f73ed.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-13T13:18:51-05:00",
				"url": "https://alexchabot.net/2010/12/13/dead-sound.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/10/a-nights-worth.html",
				
				"content_html": "<p>A night&rsquo;s worth of printing</p>\n\n<p><img src=\"uploads/2021/9f3b4f2813.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "A night's worth of printing\n\n<img src=\"uploads/2021/9f3b4f2813.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-10T18:22:03-05:00",
				"url": "https://alexchabot.net/2010/12/10/a-nights-worth.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/06/121942.html",
				
				"content_html": "<p><img src=\"uploads/2021/4c3bf8229a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/4c3bf8229a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-06T13:19:42-05:00",
				"url": "https://alexchabot.net/2010/12/06/121942.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/05/foggy-road-to.html",
				
				"content_html": "<p>Foggy road to DTU</p>\n\n<p><img src=\"uploads/2021/65d1170cd7.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Foggy road to DTU\n\n<img src=\"uploads/2021/65d1170cd7.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-05T18:08:54-05:00",
				"url": "https://alexchabot.net/2010/12/05/foggy-road-to.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/12/05/acoustics-christmas-lunch.html",
				
				"content_html": "<p>Acoustics Christmas lunch appetizers</p>\n\n<p><img src=\"uploads/2021/a1c1144c7f.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "Acoustics Christmas lunch appetizers\n\n<img src=\"uploads/2021/a1c1144c7f.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-12-05T09:18:54-05:00",
				"url": "https://alexchabot.net/2010/12/05/acoustics-christmas-lunch.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/30/170007.html",
				
				"content_html": "<p><img src=\"uploads/2021/f7e5e925cd.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/f7e5e925cd.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-30T18:00:07-05:00",
				"url": "https://alexchabot.net/2010/11/30/170007.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/30/082307.html",
				
				"content_html": "<p><img src=\"uploads/2021/43ea4e4a97.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/43ea4e4a97.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-30T09:23:07-05:00",
				"url": "https://alexchabot.net/2010/11/30/082307.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/27/085426.html",
				
				"content_html": "<p><img src=\"uploads/2021/c17bd7786a.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/c17bd7786a.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-27T09:54:26-05:00",
				"url": "https://alexchabot.net/2010/11/27/085426.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/27/084657.html",
				
				"content_html": "<p><img src=\"uploads/2021/8844231661.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/8844231661.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-27T09:46:57-05:00",
				"url": "https://alexchabot.net/2010/11/27/084657.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/27/035147.html",
				
				"content_html": "<p><img src=\"uploads/2021/ea30a07695.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/ea30a07695.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-27T04:51:47-05:00",
				"url": "https://alexchabot.net/2010/11/27/035147.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/25/071524.html",
				
				"content_html": "<p><img src=\"uploads/2021/3815597632.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/3815597632.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-25T08:15:24-05:00",
				"url": "https://alexchabot.net/2010/11/25/071524.html"
			},
			{
				"id": "http://alexchabot.micro.blog/2010/11/01/073913.html",
				
				"content_html": "<p><img src=\"uploads/2021/de15d6d613.jpg\" width=\"600\" height=\"600\" alt=\"\" /></p>\n",
				"content_text": "\n\n<img src=\"uploads/2021/de15d6d613.jpg\" width=\"600\" height=\"600\" alt=\"\" />\n",
				"date_published": "2010-11-01T08:39:13-05:00",
				"url": "https://alexchabot.net/2010/11/01/073913.html"
			}
	]
}
